//
// RoutesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class RoutesAPI {
    /**
     * enum for parameter routeTypes
     */
    public enum RouteTypes_routesOneOrMoreRoutes: String { 
        case _0 = "0"
        case _1 = "1"
        case _2 = "2"
        case _3 = "3"
        case _4 = "4"
    }

    /**
     View route names and numbers for all routes
     - parameter routeTypes: (query) Filter by route_type; values returned via RouteTypes API (optional)     - parameter routeName: (query) Filter by name  of route (accepts partial route name matches) (optional)     - parameter token: (query) Please ignore (optional)     - parameter devid: (query) Your developer id (optional)     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func routesOneOrMoreRoutes(routeTypes: [Int]? = nil, routeName: String? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3RouteResponse?,_ error: Error?) -> Void)) {
        routesOneOrMoreRoutesWithRequestBuilder(routeTypes: routeTypes, routeName: routeName, token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     View route names and numbers for all routes
     - GET /v3/routes
     - examples: [{contentType=application/json, example={
  "route" : {
    "route_service_status" : {
      "description" : "description",
      "timestamp" : "2000-01-23T04:56:07.000+00:00"
    },
    "route_id" : 6,
    "route_name" : "route_name",
    "route_type" : 0,
    "route_number" : "route_number",
    "route_gtfs_id" : "route_gtfs_id",
    "geopath" : [ { }, { } ]
  },
  "status" : {
    "health" : 6,
    "version" : "version"
  }
}}]
     - parameter routeTypes: (query) Filter by route_type; values returned via RouteTypes API (optional)     - parameter routeName: (query) Filter by name  of route (accepts partial route name matches) (optional)     - parameter token: (query) Please ignore (optional)     - parameter devid: (query) Your developer id (optional)     - parameter signature: (query) Authentication signature for request (optional)

     - returns: RequestBuilder<V3RouteResponse> 
     */
    open class func routesOneOrMoreRoutesWithRequestBuilder(routeTypes: [Int]? = nil, routeName: String? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3RouteResponse> {
        let path = "/v3/routes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "route_types": routeTypes, 
                        "route_name": routeName, 
                        "token": token, 
                        "devid": devid, 
                        "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3RouteResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     View route name and number for specific route ID
     - parameter routeId: (path) Identifier of route; values returned by Departures, Directions and Disruptions APIs      - parameter includeGeopath: (query) Indicates kif geopath data will be returned (default &#x3D; false) (optional)     - parameter geopathUtc: (query) Filter geopaths by date (ISO 8601 UTC format) (default &#x3D; current date) (optional)     - parameter token: (query) Please ignore (optional)     - parameter devid: (query) Your developer id (optional)     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func routesRouteFromId(routeId: Int, includeGeopath: Bool? = nil, geopathUtc: Date? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3RouteResponse?,_ error: Error?) -> Void)) {
        routesRouteFromIdWithRequestBuilder(routeId: routeId, includeGeopath: includeGeopath, geopathUtc: geopathUtc, token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     View route name and number for specific route ID
     - GET /v3/routes/{route_id}
     - examples: [{contentType=application/json, example={
  "route" : {
    "route_service_status" : {
      "description" : "description",
      "timestamp" : "2000-01-23T04:56:07.000+00:00"
    },
    "route_id" : 6,
    "route_name" : "route_name",
    "route_type" : 0,
    "route_number" : "route_number",
    "route_gtfs_id" : "route_gtfs_id",
    "geopath" : [ { }, { } ]
  },
  "status" : {
    "health" : 6,
    "version" : "version"
  }
}}]
     - parameter routeId: (path) Identifier of route; values returned by Departures, Directions and Disruptions APIs      - parameter includeGeopath: (query) Indicates kif geopath data will be returned (default &#x3D; false) (optional)     - parameter geopathUtc: (query) Filter geopaths by date (ISO 8601 UTC format) (default &#x3D; current date) (optional)     - parameter token: (query) Please ignore (optional)     - parameter devid: (query) Your developer id (optional)     - parameter signature: (query) Authentication signature for request (optional)

     - returns: RequestBuilder<V3RouteResponse> 
     */
    open class func routesRouteFromIdWithRequestBuilder(routeId: Int, includeGeopath: Bool? = nil, geopathUtc: Date? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3RouteResponse> {
        var path = "/v3/routes/{route_id}"
        let routeIdPreEscape = "\(routeId)"
        let routeIdPostEscape = routeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{route_id}", with: routeIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "include_geopath": includeGeopath, 
                        "geopath_utc": geopathUtc?.encodeToJSON(), 
                        "token": token, 
                        "devid": devid, 
                        "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3RouteResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
