/*
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoria's public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.  
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.V3SiriDownstreamSubscriptionTopic;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * V3SiriDownstreamSubscription
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-22T17:23:07.167982900+10:00[Australia/Sydney]")

public class V3SiriDownstreamSubscription {
  @SerializedName("subscriber_ref")
  private String subscriberRef = null;

  @SerializedName("subscription_ref")
  private String subscriptionRef = null;

  /**
   * Gets or Sets messageType
   */
  @JsonAdapter(MessageTypeEnum.Adapter.class)
  public enum MessageTypeEnum {
    @SerializedName("0")
    NUMBER_0(0),
    @SerializedName("1")
    NUMBER_1(1);

    private Integer value;

    MessageTypeEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MessageTypeEnum fromValue(Integer input) {
      for (MessageTypeEnum b : MessageTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MessageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MessageTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MessageTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return MessageTypeEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("message_type")
  private MessageTypeEnum messageType = null;

  /**
   * Gets or Sets siriFormat
   */
  @JsonAdapter(SiriFormatEnum.Adapter.class)
  public enum SiriFormatEnum {
    @SerializedName("0")
    NUMBER_0(0),
    @SerializedName("1")
    NUMBER_1(1);

    private Integer value;

    SiriFormatEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SiriFormatEnum fromValue(Integer input) {
      for (SiriFormatEnum b : SiriFormatEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SiriFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SiriFormatEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SiriFormatEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return SiriFormatEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("siri_format")
  private SiriFormatEnum siriFormat = null;

  @SerializedName("siri_version")
  private String siriVersion = null;

  @SerializedName("consumer_address")
  private String consumerAddress = null;

  @SerializedName("initial_termination_time")
  private OffsetDateTime initialTerminationTime = null;

  @SerializedName("validity_period_start")
  private OffsetDateTime validityPeriodStart = null;

  @SerializedName("validity_period_end")
  private OffsetDateTime validityPeriodEnd = null;

  @SerializedName("preview_interval")
  private String previewInterval = null;

  @SerializedName("topics")
  private List<V3SiriDownstreamSubscriptionTopic> topics = null;

  public V3SiriDownstreamSubscription subscriberRef(String subscriberRef) {
    this.subscriberRef = subscriberRef;
    return this;
  }

   /**
   * Get subscriberRef
   * @return subscriberRef
  **/
  @Schema(description = "")
  public String getSubscriberRef() {
    return subscriberRef;
  }

  public void setSubscriberRef(String subscriberRef) {
    this.subscriberRef = subscriberRef;
  }

  public V3SiriDownstreamSubscription subscriptionRef(String subscriptionRef) {
    this.subscriptionRef = subscriptionRef;
    return this;
  }

   /**
   * Get subscriptionRef
   * @return subscriptionRef
  **/
  @Schema(description = "")
  public String getSubscriptionRef() {
    return subscriptionRef;
  }

  public void setSubscriptionRef(String subscriptionRef) {
    this.subscriptionRef = subscriptionRef;
  }

  public V3SiriDownstreamSubscription messageType(MessageTypeEnum messageType) {
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/
  @Schema(description = "")
  public MessageTypeEnum getMessageType() {
    return messageType;
  }

  public void setMessageType(MessageTypeEnum messageType) {
    this.messageType = messageType;
  }

  public V3SiriDownstreamSubscription siriFormat(SiriFormatEnum siriFormat) {
    this.siriFormat = siriFormat;
    return this;
  }

   /**
   * Get siriFormat
   * @return siriFormat
  **/
  @Schema(description = "")
  public SiriFormatEnum getSiriFormat() {
    return siriFormat;
  }

  public void setSiriFormat(SiriFormatEnum siriFormat) {
    this.siriFormat = siriFormat;
  }

  public V3SiriDownstreamSubscription siriVersion(String siriVersion) {
    this.siriVersion = siriVersion;
    return this;
  }

   /**
   * Get siriVersion
   * @return siriVersion
  **/
  @Schema(description = "")
  public String getSiriVersion() {
    return siriVersion;
  }

  public void setSiriVersion(String siriVersion) {
    this.siriVersion = siriVersion;
  }

  public V3SiriDownstreamSubscription consumerAddress(String consumerAddress) {
    this.consumerAddress = consumerAddress;
    return this;
  }

   /**
   * Get consumerAddress
   * @return consumerAddress
  **/
  @Schema(description = "")
  public String getConsumerAddress() {
    return consumerAddress;
  }

  public void setConsumerAddress(String consumerAddress) {
    this.consumerAddress = consumerAddress;
  }

  public V3SiriDownstreamSubscription initialTerminationTime(OffsetDateTime initialTerminationTime) {
    this.initialTerminationTime = initialTerminationTime;
    return this;
  }

   /**
   * Get initialTerminationTime
   * @return initialTerminationTime
  **/
  @Schema(description = "")
  public OffsetDateTime getInitialTerminationTime() {
    return initialTerminationTime;
  }

  public void setInitialTerminationTime(OffsetDateTime initialTerminationTime) {
    this.initialTerminationTime = initialTerminationTime;
  }

  public V3SiriDownstreamSubscription validityPeriodStart(OffsetDateTime validityPeriodStart) {
    this.validityPeriodStart = validityPeriodStart;
    return this;
  }

   /**
   * Get validityPeriodStart
   * @return validityPeriodStart
  **/
  @Schema(description = "")
  public OffsetDateTime getValidityPeriodStart() {
    return validityPeriodStart;
  }

  public void setValidityPeriodStart(OffsetDateTime validityPeriodStart) {
    this.validityPeriodStart = validityPeriodStart;
  }

  public V3SiriDownstreamSubscription validityPeriodEnd(OffsetDateTime validityPeriodEnd) {
    this.validityPeriodEnd = validityPeriodEnd;
    return this;
  }

   /**
   * Get validityPeriodEnd
   * @return validityPeriodEnd
  **/
  @Schema(description = "")
  public OffsetDateTime getValidityPeriodEnd() {
    return validityPeriodEnd;
  }

  public void setValidityPeriodEnd(OffsetDateTime validityPeriodEnd) {
    this.validityPeriodEnd = validityPeriodEnd;
  }

  public V3SiriDownstreamSubscription previewInterval(String previewInterval) {
    this.previewInterval = previewInterval;
    return this;
  }

   /**
   * Get previewInterval
   * @return previewInterval
  **/
  @Schema(description = "")
  public String getPreviewInterval() {
    return previewInterval;
  }

  public void setPreviewInterval(String previewInterval) {
    this.previewInterval = previewInterval;
  }

  public V3SiriDownstreamSubscription topics(List<V3SiriDownstreamSubscriptionTopic> topics) {
    this.topics = topics;
    return this;
  }

  public V3SiriDownstreamSubscription addTopicsItem(V3SiriDownstreamSubscriptionTopic topicsItem) {
    if (this.topics == null) {
      this.topics = new ArrayList<V3SiriDownstreamSubscriptionTopic>();
    }
    this.topics.add(topicsItem);
    return this;
  }

   /**
   * Get topics
   * @return topics
  **/
  @Schema(description = "")
  public List<V3SiriDownstreamSubscriptionTopic> getTopics() {
    return topics;
  }

  public void setTopics(List<V3SiriDownstreamSubscriptionTopic> topics) {
    this.topics = topics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V3SiriDownstreamSubscription v3SiriDownstreamSubscription = (V3SiriDownstreamSubscription) o;
    return Objects.equals(this.subscriberRef, v3SiriDownstreamSubscription.subscriberRef) &&
        Objects.equals(this.subscriptionRef, v3SiriDownstreamSubscription.subscriptionRef) &&
        Objects.equals(this.messageType, v3SiriDownstreamSubscription.messageType) &&
        Objects.equals(this.siriFormat, v3SiriDownstreamSubscription.siriFormat) &&
        Objects.equals(this.siriVersion, v3SiriDownstreamSubscription.siriVersion) &&
        Objects.equals(this.consumerAddress, v3SiriDownstreamSubscription.consumerAddress) &&
        Objects.equals(this.initialTerminationTime, v3SiriDownstreamSubscription.initialTerminationTime) &&
        Objects.equals(this.validityPeriodStart, v3SiriDownstreamSubscription.validityPeriodStart) &&
        Objects.equals(this.validityPeriodEnd, v3SiriDownstreamSubscription.validityPeriodEnd) &&
        Objects.equals(this.previewInterval, v3SiriDownstreamSubscription.previewInterval) &&
        Objects.equals(this.topics, v3SiriDownstreamSubscription.topics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriberRef, subscriptionRef, messageType, siriFormat, siriVersion, consumerAddress, initialTerminationTime, validityPeriodStart, validityPeriodEnd, previewInterval, topics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V3SiriDownstreamSubscription {\n");
    
    sb.append("    subscriberRef: ").append(toIndentedString(subscriberRef)).append("\n");
    sb.append("    subscriptionRef: ").append(toIndentedString(subscriptionRef)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    siriFormat: ").append(toIndentedString(siriFormat)).append("\n");
    sb.append("    siriVersion: ").append(toIndentedString(siriVersion)).append("\n");
    sb.append("    consumerAddress: ").append(toIndentedString(consumerAddress)).append("\n");
    sb.append("    initialTerminationTime: ").append(toIndentedString(initialTerminationTime)).append("\n");
    sb.append("    validityPeriodStart: ").append(toIndentedString(validityPeriodStart)).append("\n");
    sb.append("    validityPeriodEnd: ").append(toIndentedString(validityPeriodEnd)).append("\n");
    sb.append("    previewInterval: ").append(toIndentedString(previewInterval)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
