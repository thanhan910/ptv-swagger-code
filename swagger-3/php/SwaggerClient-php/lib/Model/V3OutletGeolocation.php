<?php
/**
 * V3OutletGeolocation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PTV Timetable API - Version 3
 *
 * The PTV Timetable API provides direct access to Public Transport Victoria's public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * V3OutletGeolocation Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class V3OutletGeolocation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'V3.OutletGeolocation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'outlet_distance' => 'float',
        'outlet_slid_spid' => 'string',
        'outlet_name' => 'string',
        'outlet_business' => 'string',
        'outlet_latitude' => 'float',
        'outlet_longitude' => 'float',
        'outlet_suburb' => 'string',
        'outlet_postcode' => 'int',
        'outlet_business_hour_mon' => 'string',
        'outlet_business_hour_tue' => 'string',
        'outlet_business_hour_wed' => 'string',
        'outlet_business_hour_thur' => 'string',
        'outlet_business_hour_fri' => 'string',
        'outlet_business_hour_sat' => 'string',
        'outlet_business_hour_sun' => 'string',
        'outlet_notes' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'outlet_distance' => 'float',
        'outlet_slid_spid' => null,
        'outlet_name' => null,
        'outlet_business' => null,
        'outlet_latitude' => 'float',
        'outlet_longitude' => 'float',
        'outlet_suburb' => null,
        'outlet_postcode' => 'int32',
        'outlet_business_hour_mon' => null,
        'outlet_business_hour_tue' => null,
        'outlet_business_hour_wed' => null,
        'outlet_business_hour_thur' => null,
        'outlet_business_hour_fri' => null,
        'outlet_business_hour_sat' => null,
        'outlet_business_hour_sun' => null,
        'outlet_notes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'outlet_distance' => 'outlet_distance',
        'outlet_slid_spid' => 'outlet_slid_spid',
        'outlet_name' => 'outlet_name',
        'outlet_business' => 'outlet_business',
        'outlet_latitude' => 'outlet_latitude',
        'outlet_longitude' => 'outlet_longitude',
        'outlet_suburb' => 'outlet_suburb',
        'outlet_postcode' => 'outlet_postcode',
        'outlet_business_hour_mon' => 'outlet_business_hour_mon',
        'outlet_business_hour_tue' => 'outlet_business_hour_tue',
        'outlet_business_hour_wed' => 'outlet_business_hour_wed',
        'outlet_business_hour_thur' => 'outlet_business_hour_thur',
        'outlet_business_hour_fri' => 'outlet_business_hour_fri',
        'outlet_business_hour_sat' => 'outlet_business_hour_sat',
        'outlet_business_hour_sun' => 'outlet_business_hour_sun',
        'outlet_notes' => 'outlet_notes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'outlet_distance' => 'setOutletDistance',
        'outlet_slid_spid' => 'setOutletSlidSpid',
        'outlet_name' => 'setOutletName',
        'outlet_business' => 'setOutletBusiness',
        'outlet_latitude' => 'setOutletLatitude',
        'outlet_longitude' => 'setOutletLongitude',
        'outlet_suburb' => 'setOutletSuburb',
        'outlet_postcode' => 'setOutletPostcode',
        'outlet_business_hour_mon' => 'setOutletBusinessHourMon',
        'outlet_business_hour_tue' => 'setOutletBusinessHourTue',
        'outlet_business_hour_wed' => 'setOutletBusinessHourWed',
        'outlet_business_hour_thur' => 'setOutletBusinessHourThur',
        'outlet_business_hour_fri' => 'setOutletBusinessHourFri',
        'outlet_business_hour_sat' => 'setOutletBusinessHourSat',
        'outlet_business_hour_sun' => 'setOutletBusinessHourSun',
        'outlet_notes' => 'setOutletNotes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'outlet_distance' => 'getOutletDistance',
        'outlet_slid_spid' => 'getOutletSlidSpid',
        'outlet_name' => 'getOutletName',
        'outlet_business' => 'getOutletBusiness',
        'outlet_latitude' => 'getOutletLatitude',
        'outlet_longitude' => 'getOutletLongitude',
        'outlet_suburb' => 'getOutletSuburb',
        'outlet_postcode' => 'getOutletPostcode',
        'outlet_business_hour_mon' => 'getOutletBusinessHourMon',
        'outlet_business_hour_tue' => 'getOutletBusinessHourTue',
        'outlet_business_hour_wed' => 'getOutletBusinessHourWed',
        'outlet_business_hour_thur' => 'getOutletBusinessHourThur',
        'outlet_business_hour_fri' => 'getOutletBusinessHourFri',
        'outlet_business_hour_sat' => 'getOutletBusinessHourSat',
        'outlet_business_hour_sun' => 'getOutletBusinessHourSun',
        'outlet_notes' => 'getOutletNotes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['outlet_distance'] = isset($data['outlet_distance']) ? $data['outlet_distance'] : null;
        $this->container['outlet_slid_spid'] = isset($data['outlet_slid_spid']) ? $data['outlet_slid_spid'] : null;
        $this->container['outlet_name'] = isset($data['outlet_name']) ? $data['outlet_name'] : null;
        $this->container['outlet_business'] = isset($data['outlet_business']) ? $data['outlet_business'] : null;
        $this->container['outlet_latitude'] = isset($data['outlet_latitude']) ? $data['outlet_latitude'] : null;
        $this->container['outlet_longitude'] = isset($data['outlet_longitude']) ? $data['outlet_longitude'] : null;
        $this->container['outlet_suburb'] = isset($data['outlet_suburb']) ? $data['outlet_suburb'] : null;
        $this->container['outlet_postcode'] = isset($data['outlet_postcode']) ? $data['outlet_postcode'] : null;
        $this->container['outlet_business_hour_mon'] = isset($data['outlet_business_hour_mon']) ? $data['outlet_business_hour_mon'] : null;
        $this->container['outlet_business_hour_tue'] = isset($data['outlet_business_hour_tue']) ? $data['outlet_business_hour_tue'] : null;
        $this->container['outlet_business_hour_wed'] = isset($data['outlet_business_hour_wed']) ? $data['outlet_business_hour_wed'] : null;
        $this->container['outlet_business_hour_thur'] = isset($data['outlet_business_hour_thur']) ? $data['outlet_business_hour_thur'] : null;
        $this->container['outlet_business_hour_fri'] = isset($data['outlet_business_hour_fri']) ? $data['outlet_business_hour_fri'] : null;
        $this->container['outlet_business_hour_sat'] = isset($data['outlet_business_hour_sat']) ? $data['outlet_business_hour_sat'] : null;
        $this->container['outlet_business_hour_sun'] = isset($data['outlet_business_hour_sun']) ? $data['outlet_business_hour_sun'] : null;
        $this->container['outlet_notes'] = isset($data['outlet_notes']) ? $data['outlet_notes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets outlet_distance
     *
     * @return float
     */
    public function getOutletDistance()
    {
        return $this->container['outlet_distance'];
    }

    /**
     * Sets outlet_distance
     *
     * @param float $outlet_distance Distance of outlet from input location (in metres); returns 0 if no location is input
     *
     * @return $this
     */
    public function setOutletDistance($outlet_distance)
    {
        $this->container['outlet_distance'] = $outlet_distance;

        return $this;
    }

    /**
     * Gets outlet_slid_spid
     *
     * @return string
     */
    public function getOutletSlidSpid()
    {
        return $this->container['outlet_slid_spid'];
    }

    /**
     * Sets outlet_slid_spid
     *
     * @param string $outlet_slid_spid The SLID / SPID
     *
     * @return $this
     */
    public function setOutletSlidSpid($outlet_slid_spid)
    {
        $this->container['outlet_slid_spid'] = $outlet_slid_spid;

        return $this;
    }

    /**
     * Gets outlet_name
     *
     * @return string
     */
    public function getOutletName()
    {
        return $this->container['outlet_name'];
    }

    /**
     * Sets outlet_name
     *
     * @param string $outlet_name The location name of the outlet
     *
     * @return $this
     */
    public function setOutletName($outlet_name)
    {
        $this->container['outlet_name'] = $outlet_name;

        return $this;
    }

    /**
     * Gets outlet_business
     *
     * @return string
     */
    public function getOutletBusiness()
    {
        return $this->container['outlet_business'];
    }

    /**
     * Sets outlet_business
     *
     * @param string $outlet_business The business name of the outlet
     *
     * @return $this
     */
    public function setOutletBusiness($outlet_business)
    {
        $this->container['outlet_business'] = $outlet_business;

        return $this;
    }

    /**
     * Gets outlet_latitude
     *
     * @return float
     */
    public function getOutletLatitude()
    {
        return $this->container['outlet_latitude'];
    }

    /**
     * Sets outlet_latitude
     *
     * @param float $outlet_latitude Geographic coordinate of latitude at outlet
     *
     * @return $this
     */
    public function setOutletLatitude($outlet_latitude)
    {
        $this->container['outlet_latitude'] = $outlet_latitude;

        return $this;
    }

    /**
     * Gets outlet_longitude
     *
     * @return float
     */
    public function getOutletLongitude()
    {
        return $this->container['outlet_longitude'];
    }

    /**
     * Sets outlet_longitude
     *
     * @param float $outlet_longitude Geographic coordinate of longitude at outlet
     *
     * @return $this
     */
    public function setOutletLongitude($outlet_longitude)
    {
        $this->container['outlet_longitude'] = $outlet_longitude;

        return $this;
    }

    /**
     * Gets outlet_suburb
     *
     * @return string
     */
    public function getOutletSuburb()
    {
        return $this->container['outlet_suburb'];
    }

    /**
     * Sets outlet_suburb
     *
     * @param string $outlet_suburb The city/municipality the outlet is in
     *
     * @return $this
     */
    public function setOutletSuburb($outlet_suburb)
    {
        $this->container['outlet_suburb'] = $outlet_suburb;

        return $this;
    }

    /**
     * Gets outlet_postcode
     *
     * @return int
     */
    public function getOutletPostcode()
    {
        return $this->container['outlet_postcode'];
    }

    /**
     * Sets outlet_postcode
     *
     * @param int $outlet_postcode The postcode for the outlet
     *
     * @return $this
     */
    public function setOutletPostcode($outlet_postcode)
    {
        $this->container['outlet_postcode'] = $outlet_postcode;

        return $this;
    }

    /**
     * Gets outlet_business_hour_mon
     *
     * @return string
     */
    public function getOutletBusinessHourMon()
    {
        return $this->container['outlet_business_hour_mon'];
    }

    /**
     * Sets outlet_business_hour_mon
     *
     * @param string $outlet_business_hour_mon The business hours on Monday
     *
     * @return $this
     */
    public function setOutletBusinessHourMon($outlet_business_hour_mon)
    {
        $this->container['outlet_business_hour_mon'] = $outlet_business_hour_mon;

        return $this;
    }

    /**
     * Gets outlet_business_hour_tue
     *
     * @return string
     */
    public function getOutletBusinessHourTue()
    {
        return $this->container['outlet_business_hour_tue'];
    }

    /**
     * Sets outlet_business_hour_tue
     *
     * @param string $outlet_business_hour_tue The business hours on Tuesday
     *
     * @return $this
     */
    public function setOutletBusinessHourTue($outlet_business_hour_tue)
    {
        $this->container['outlet_business_hour_tue'] = $outlet_business_hour_tue;

        return $this;
    }

    /**
     * Gets outlet_business_hour_wed
     *
     * @return string
     */
    public function getOutletBusinessHourWed()
    {
        return $this->container['outlet_business_hour_wed'];
    }

    /**
     * Sets outlet_business_hour_wed
     *
     * @param string $outlet_business_hour_wed The business hours on Wednesday
     *
     * @return $this
     */
    public function setOutletBusinessHourWed($outlet_business_hour_wed)
    {
        $this->container['outlet_business_hour_wed'] = $outlet_business_hour_wed;

        return $this;
    }

    /**
     * Gets outlet_business_hour_thur
     *
     * @return string
     */
    public function getOutletBusinessHourThur()
    {
        return $this->container['outlet_business_hour_thur'];
    }

    /**
     * Sets outlet_business_hour_thur
     *
     * @param string $outlet_business_hour_thur The business hours on Thursday
     *
     * @return $this
     */
    public function setOutletBusinessHourThur($outlet_business_hour_thur)
    {
        $this->container['outlet_business_hour_thur'] = $outlet_business_hour_thur;

        return $this;
    }

    /**
     * Gets outlet_business_hour_fri
     *
     * @return string
     */
    public function getOutletBusinessHourFri()
    {
        return $this->container['outlet_business_hour_fri'];
    }

    /**
     * Sets outlet_business_hour_fri
     *
     * @param string $outlet_business_hour_fri The business hours on Friday
     *
     * @return $this
     */
    public function setOutletBusinessHourFri($outlet_business_hour_fri)
    {
        $this->container['outlet_business_hour_fri'] = $outlet_business_hour_fri;

        return $this;
    }

    /**
     * Gets outlet_business_hour_sat
     *
     * @return string
     */
    public function getOutletBusinessHourSat()
    {
        return $this->container['outlet_business_hour_sat'];
    }

    /**
     * Sets outlet_business_hour_sat
     *
     * @param string $outlet_business_hour_sat The business hours on Saturday
     *
     * @return $this
     */
    public function setOutletBusinessHourSat($outlet_business_hour_sat)
    {
        $this->container['outlet_business_hour_sat'] = $outlet_business_hour_sat;

        return $this;
    }

    /**
     * Gets outlet_business_hour_sun
     *
     * @return string
     */
    public function getOutletBusinessHourSun()
    {
        return $this->container['outlet_business_hour_sun'];
    }

    /**
     * Sets outlet_business_hour_sun
     *
     * @param string $outlet_business_hour_sun The business hours on Sunday
     *
     * @return $this
     */
    public function setOutletBusinessHourSun($outlet_business_hour_sun)
    {
        $this->container['outlet_business_hour_sun'] = $outlet_business_hour_sun;

        return $this;
    }

    /**
     * Gets outlet_notes
     *
     * @return string
     */
    public function getOutletNotes()
    {
        return $this->container['outlet_notes'];
    }

    /**
     * Sets outlet_notes
     *
     * @param string $outlet_notes Any additional notes for the outlet such as 'Buy pre-loaded myki cards only'. May be null/empty.
     *
     * @return $this
     */
    public function setOutletNotes($outlet_notes)
    {
        $this->container['outlet_notes'] = $outlet_notes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
