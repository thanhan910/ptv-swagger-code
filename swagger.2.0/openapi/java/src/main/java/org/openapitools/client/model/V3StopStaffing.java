/*
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoria's public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.  
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * V3StopStaffing
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-22T22:16:10.196593200+10:00[Australia/Sydney]", comments = "Generator version: 7.5.0")
public class V3StopStaffing {
  public static final String SERIALIZED_NAME_FRI_AM_FROM = "fri_am_from";
  @SerializedName(SERIALIZED_NAME_FRI_AM_FROM)
  private String friAmFrom;

  public static final String SERIALIZED_NAME_FRI_AM_TO = "fri_am_to";
  @SerializedName(SERIALIZED_NAME_FRI_AM_TO)
  private String friAmTo;

  public static final String SERIALIZED_NAME_FRI_PM_FROM = "fri_pm_from";
  @SerializedName(SERIALIZED_NAME_FRI_PM_FROM)
  private String friPmFrom;

  public static final String SERIALIZED_NAME_FRI_PM_TO = "fri_pm_to";
  @SerializedName(SERIALIZED_NAME_FRI_PM_TO)
  private String friPmTo;

  public static final String SERIALIZED_NAME_MON_AM_FROM = "mon_am_from";
  @SerializedName(SERIALIZED_NAME_MON_AM_FROM)
  private String monAmFrom;

  public static final String SERIALIZED_NAME_MON_AM_TO = "mon_am_to";
  @SerializedName(SERIALIZED_NAME_MON_AM_TO)
  private String monAmTo;

  public static final String SERIALIZED_NAME_MON_PM_FROM = "mon_pm_from";
  @SerializedName(SERIALIZED_NAME_MON_PM_FROM)
  private String monPmFrom;

  public static final String SERIALIZED_NAME_MON_PM_TO = "mon_pm_to";
  @SerializedName(SERIALIZED_NAME_MON_PM_TO)
  private String monPmTo;

  public static final String SERIALIZED_NAME_PH_ADDITIONAL_TEXT = "ph_additional_text";
  @SerializedName(SERIALIZED_NAME_PH_ADDITIONAL_TEXT)
  private String phAdditionalText;

  public static final String SERIALIZED_NAME_PH_FROM = "ph_from";
  @SerializedName(SERIALIZED_NAME_PH_FROM)
  private String phFrom;

  public static final String SERIALIZED_NAME_PH_TO = "ph_to";
  @SerializedName(SERIALIZED_NAME_PH_TO)
  private String phTo;

  public static final String SERIALIZED_NAME_SAT_AM_FROM = "sat_am_from";
  @SerializedName(SERIALIZED_NAME_SAT_AM_FROM)
  private String satAmFrom;

  public static final String SERIALIZED_NAME_SAT_AM_TO = "sat_am_to";
  @SerializedName(SERIALIZED_NAME_SAT_AM_TO)
  private String satAmTo;

  public static final String SERIALIZED_NAME_SAT_PM_FROM = "sat_pm_from";
  @SerializedName(SERIALIZED_NAME_SAT_PM_FROM)
  private String satPmFrom;

  public static final String SERIALIZED_NAME_SAT_PM_TO = "sat_pm_to";
  @SerializedName(SERIALIZED_NAME_SAT_PM_TO)
  private String satPmTo;

  public static final String SERIALIZED_NAME_SUN_AM_FROM = "sun_am_from";
  @SerializedName(SERIALIZED_NAME_SUN_AM_FROM)
  private String sunAmFrom;

  public static final String SERIALIZED_NAME_SUN_AM_TO = "sun_am_to";
  @SerializedName(SERIALIZED_NAME_SUN_AM_TO)
  private String sunAmTo;

  public static final String SERIALIZED_NAME_SUN_PM_FROM = "sun_pm_from";
  @SerializedName(SERIALIZED_NAME_SUN_PM_FROM)
  private String sunPmFrom;

  public static final String SERIALIZED_NAME_SUN_PM_TO = "sun_pm_to";
  @SerializedName(SERIALIZED_NAME_SUN_PM_TO)
  private String sunPmTo;

  public static final String SERIALIZED_NAME_THU_AM_FROM = "thu_am_from";
  @SerializedName(SERIALIZED_NAME_THU_AM_FROM)
  private String thuAmFrom;

  public static final String SERIALIZED_NAME_THU_AM_TO = "thu_am_to";
  @SerializedName(SERIALIZED_NAME_THU_AM_TO)
  private String thuAmTo;

  public static final String SERIALIZED_NAME_THU_PM_FROM = "thu_pm_from";
  @SerializedName(SERIALIZED_NAME_THU_PM_FROM)
  private String thuPmFrom;

  public static final String SERIALIZED_NAME_THU_PM_TO = "thu_pm_to";
  @SerializedName(SERIALIZED_NAME_THU_PM_TO)
  private String thuPmTo;

  public static final String SERIALIZED_NAME_TUE_AM_FROM = "tue_am_from";
  @SerializedName(SERIALIZED_NAME_TUE_AM_FROM)
  private String tueAmFrom;

  public static final String SERIALIZED_NAME_TUE_AM_TO = "tue_am_to";
  @SerializedName(SERIALIZED_NAME_TUE_AM_TO)
  private String tueAmTo;

  public static final String SERIALIZED_NAME_TUE_PM_FROM = "tue_pm_from";
  @SerializedName(SERIALIZED_NAME_TUE_PM_FROM)
  private String tuePmFrom;

  public static final String SERIALIZED_NAME_TUE_PM_TO = "tue_pm_to";
  @SerializedName(SERIALIZED_NAME_TUE_PM_TO)
  private String tuePmTo;

  public static final String SERIALIZED_NAME_WED_AM_FROM = "wed_am_from";
  @SerializedName(SERIALIZED_NAME_WED_AM_FROM)
  private String wedAmFrom;

  public static final String SERIALIZED_NAME_WED_AM_TO = "wed_am_to";
  @SerializedName(SERIALIZED_NAME_WED_AM_TO)
  private String wedAmTo;

  public static final String SERIALIZED_NAME_WED_PM_FROM = "wed_pm_from";
  @SerializedName(SERIALIZED_NAME_WED_PM_FROM)
  private String wedPmFrom;

  public static final String SERIALIZED_NAME_WED_PM_TO = "wed_pm_To";
  @SerializedName(SERIALIZED_NAME_WED_PM_TO)
  private String wedPmTo;

  public V3StopStaffing() {
  }

  public V3StopStaffing friAmFrom(String friAmFrom) {
    this.friAmFrom = friAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return friAmFrom
  **/
  @javax.annotation.Nullable
  public String getFriAmFrom() {
    return friAmFrom;
  }

  public void setFriAmFrom(String friAmFrom) {
    this.friAmFrom = friAmFrom;
  }


  public V3StopStaffing friAmTo(String friAmTo) {
    this.friAmTo = friAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return friAmTo
  **/
  @javax.annotation.Nullable
  public String getFriAmTo() {
    return friAmTo;
  }

  public void setFriAmTo(String friAmTo) {
    this.friAmTo = friAmTo;
  }


  public V3StopStaffing friPmFrom(String friPmFrom) {
    this.friPmFrom = friPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return friPmFrom
  **/
  @javax.annotation.Nullable
  public String getFriPmFrom() {
    return friPmFrom;
  }

  public void setFriPmFrom(String friPmFrom) {
    this.friPmFrom = friPmFrom;
  }


  public V3StopStaffing friPmTo(String friPmTo) {
    this.friPmTo = friPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return friPmTo
  **/
  @javax.annotation.Nullable
  public String getFriPmTo() {
    return friPmTo;
  }

  public void setFriPmTo(String friPmTo) {
    this.friPmTo = friPmTo;
  }


  public V3StopStaffing monAmFrom(String monAmFrom) {
    this.monAmFrom = monAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return monAmFrom
  **/
  @javax.annotation.Nullable
  public String getMonAmFrom() {
    return monAmFrom;
  }

  public void setMonAmFrom(String monAmFrom) {
    this.monAmFrom = monAmFrom;
  }


  public V3StopStaffing monAmTo(String monAmTo) {
    this.monAmTo = monAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return monAmTo
  **/
  @javax.annotation.Nullable
  public String getMonAmTo() {
    return monAmTo;
  }

  public void setMonAmTo(String monAmTo) {
    this.monAmTo = monAmTo;
  }


  public V3StopStaffing monPmFrom(String monPmFrom) {
    this.monPmFrom = monPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return monPmFrom
  **/
  @javax.annotation.Nullable
  public String getMonPmFrom() {
    return monPmFrom;
  }

  public void setMonPmFrom(String monPmFrom) {
    this.monPmFrom = monPmFrom;
  }


  public V3StopStaffing monPmTo(String monPmTo) {
    this.monPmTo = monPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return monPmTo
  **/
  @javax.annotation.Nullable
  public String getMonPmTo() {
    return monPmTo;
  }

  public void setMonPmTo(String monPmTo) {
    this.monPmTo = monPmTo;
  }


  public V3StopStaffing phAdditionalText(String phAdditionalText) {
    this.phAdditionalText = phAdditionalText;
    return this;
  }

   /**
   * Stop staffing hours
   * @return phAdditionalText
  **/
  @javax.annotation.Nullable
  public String getPhAdditionalText() {
    return phAdditionalText;
  }

  public void setPhAdditionalText(String phAdditionalText) {
    this.phAdditionalText = phAdditionalText;
  }


  public V3StopStaffing phFrom(String phFrom) {
    this.phFrom = phFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return phFrom
  **/
  @javax.annotation.Nullable
  public String getPhFrom() {
    return phFrom;
  }

  public void setPhFrom(String phFrom) {
    this.phFrom = phFrom;
  }


  public V3StopStaffing phTo(String phTo) {
    this.phTo = phTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return phTo
  **/
  @javax.annotation.Nullable
  public String getPhTo() {
    return phTo;
  }

  public void setPhTo(String phTo) {
    this.phTo = phTo;
  }


  public V3StopStaffing satAmFrom(String satAmFrom) {
    this.satAmFrom = satAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return satAmFrom
  **/
  @javax.annotation.Nullable
  public String getSatAmFrom() {
    return satAmFrom;
  }

  public void setSatAmFrom(String satAmFrom) {
    this.satAmFrom = satAmFrom;
  }


  public V3StopStaffing satAmTo(String satAmTo) {
    this.satAmTo = satAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return satAmTo
  **/
  @javax.annotation.Nullable
  public String getSatAmTo() {
    return satAmTo;
  }

  public void setSatAmTo(String satAmTo) {
    this.satAmTo = satAmTo;
  }


  public V3StopStaffing satPmFrom(String satPmFrom) {
    this.satPmFrom = satPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return satPmFrom
  **/
  @javax.annotation.Nullable
  public String getSatPmFrom() {
    return satPmFrom;
  }

  public void setSatPmFrom(String satPmFrom) {
    this.satPmFrom = satPmFrom;
  }


  public V3StopStaffing satPmTo(String satPmTo) {
    this.satPmTo = satPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return satPmTo
  **/
  @javax.annotation.Nullable
  public String getSatPmTo() {
    return satPmTo;
  }

  public void setSatPmTo(String satPmTo) {
    this.satPmTo = satPmTo;
  }


  public V3StopStaffing sunAmFrom(String sunAmFrom) {
    this.sunAmFrom = sunAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return sunAmFrom
  **/
  @javax.annotation.Nullable
  public String getSunAmFrom() {
    return sunAmFrom;
  }

  public void setSunAmFrom(String sunAmFrom) {
    this.sunAmFrom = sunAmFrom;
  }


  public V3StopStaffing sunAmTo(String sunAmTo) {
    this.sunAmTo = sunAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return sunAmTo
  **/
  @javax.annotation.Nullable
  public String getSunAmTo() {
    return sunAmTo;
  }

  public void setSunAmTo(String sunAmTo) {
    this.sunAmTo = sunAmTo;
  }


  public V3StopStaffing sunPmFrom(String sunPmFrom) {
    this.sunPmFrom = sunPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return sunPmFrom
  **/
  @javax.annotation.Nullable
  public String getSunPmFrom() {
    return sunPmFrom;
  }

  public void setSunPmFrom(String sunPmFrom) {
    this.sunPmFrom = sunPmFrom;
  }


  public V3StopStaffing sunPmTo(String sunPmTo) {
    this.sunPmTo = sunPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return sunPmTo
  **/
  @javax.annotation.Nullable
  public String getSunPmTo() {
    return sunPmTo;
  }

  public void setSunPmTo(String sunPmTo) {
    this.sunPmTo = sunPmTo;
  }


  public V3StopStaffing thuAmFrom(String thuAmFrom) {
    this.thuAmFrom = thuAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return thuAmFrom
  **/
  @javax.annotation.Nullable
  public String getThuAmFrom() {
    return thuAmFrom;
  }

  public void setThuAmFrom(String thuAmFrom) {
    this.thuAmFrom = thuAmFrom;
  }


  public V3StopStaffing thuAmTo(String thuAmTo) {
    this.thuAmTo = thuAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return thuAmTo
  **/
  @javax.annotation.Nullable
  public String getThuAmTo() {
    return thuAmTo;
  }

  public void setThuAmTo(String thuAmTo) {
    this.thuAmTo = thuAmTo;
  }


  public V3StopStaffing thuPmFrom(String thuPmFrom) {
    this.thuPmFrom = thuPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return thuPmFrom
  **/
  @javax.annotation.Nullable
  public String getThuPmFrom() {
    return thuPmFrom;
  }

  public void setThuPmFrom(String thuPmFrom) {
    this.thuPmFrom = thuPmFrom;
  }


  public V3StopStaffing thuPmTo(String thuPmTo) {
    this.thuPmTo = thuPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return thuPmTo
  **/
  @javax.annotation.Nullable
  public String getThuPmTo() {
    return thuPmTo;
  }

  public void setThuPmTo(String thuPmTo) {
    this.thuPmTo = thuPmTo;
  }


  public V3StopStaffing tueAmFrom(String tueAmFrom) {
    this.tueAmFrom = tueAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return tueAmFrom
  **/
  @javax.annotation.Nullable
  public String getTueAmFrom() {
    return tueAmFrom;
  }

  public void setTueAmFrom(String tueAmFrom) {
    this.tueAmFrom = tueAmFrom;
  }


  public V3StopStaffing tueAmTo(String tueAmTo) {
    this.tueAmTo = tueAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return tueAmTo
  **/
  @javax.annotation.Nullable
  public String getTueAmTo() {
    return tueAmTo;
  }

  public void setTueAmTo(String tueAmTo) {
    this.tueAmTo = tueAmTo;
  }


  public V3StopStaffing tuePmFrom(String tuePmFrom) {
    this.tuePmFrom = tuePmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return tuePmFrom
  **/
  @javax.annotation.Nullable
  public String getTuePmFrom() {
    return tuePmFrom;
  }

  public void setTuePmFrom(String tuePmFrom) {
    this.tuePmFrom = tuePmFrom;
  }


  public V3StopStaffing tuePmTo(String tuePmTo) {
    this.tuePmTo = tuePmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return tuePmTo
  **/
  @javax.annotation.Nullable
  public String getTuePmTo() {
    return tuePmTo;
  }

  public void setTuePmTo(String tuePmTo) {
    this.tuePmTo = tuePmTo;
  }


  public V3StopStaffing wedAmFrom(String wedAmFrom) {
    this.wedAmFrom = wedAmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return wedAmFrom
  **/
  @javax.annotation.Nullable
  public String getWedAmFrom() {
    return wedAmFrom;
  }

  public void setWedAmFrom(String wedAmFrom) {
    this.wedAmFrom = wedAmFrom;
  }


  public V3StopStaffing wedAmTo(String wedAmTo) {
    this.wedAmTo = wedAmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return wedAmTo
  **/
  @javax.annotation.Nullable
  public String getWedAmTo() {
    return wedAmTo;
  }

  public void setWedAmTo(String wedAmTo) {
    this.wedAmTo = wedAmTo;
  }


  public V3StopStaffing wedPmFrom(String wedPmFrom) {
    this.wedPmFrom = wedPmFrom;
    return this;
  }

   /**
   * Stop staffing hours
   * @return wedPmFrom
  **/
  @javax.annotation.Nullable
  public String getWedPmFrom() {
    return wedPmFrom;
  }

  public void setWedPmFrom(String wedPmFrom) {
    this.wedPmFrom = wedPmFrom;
  }


  public V3StopStaffing wedPmTo(String wedPmTo) {
    this.wedPmTo = wedPmTo;
    return this;
  }

   /**
   * Stop staffing hours
   * @return wedPmTo
  **/
  @javax.annotation.Nullable
  public String getWedPmTo() {
    return wedPmTo;
  }

  public void setWedPmTo(String wedPmTo) {
    this.wedPmTo = wedPmTo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V3StopStaffing v3StopStaffing = (V3StopStaffing) o;
    return Objects.equals(this.friAmFrom, v3StopStaffing.friAmFrom) &&
        Objects.equals(this.friAmTo, v3StopStaffing.friAmTo) &&
        Objects.equals(this.friPmFrom, v3StopStaffing.friPmFrom) &&
        Objects.equals(this.friPmTo, v3StopStaffing.friPmTo) &&
        Objects.equals(this.monAmFrom, v3StopStaffing.monAmFrom) &&
        Objects.equals(this.monAmTo, v3StopStaffing.monAmTo) &&
        Objects.equals(this.monPmFrom, v3StopStaffing.monPmFrom) &&
        Objects.equals(this.monPmTo, v3StopStaffing.monPmTo) &&
        Objects.equals(this.phAdditionalText, v3StopStaffing.phAdditionalText) &&
        Objects.equals(this.phFrom, v3StopStaffing.phFrom) &&
        Objects.equals(this.phTo, v3StopStaffing.phTo) &&
        Objects.equals(this.satAmFrom, v3StopStaffing.satAmFrom) &&
        Objects.equals(this.satAmTo, v3StopStaffing.satAmTo) &&
        Objects.equals(this.satPmFrom, v3StopStaffing.satPmFrom) &&
        Objects.equals(this.satPmTo, v3StopStaffing.satPmTo) &&
        Objects.equals(this.sunAmFrom, v3StopStaffing.sunAmFrom) &&
        Objects.equals(this.sunAmTo, v3StopStaffing.sunAmTo) &&
        Objects.equals(this.sunPmFrom, v3StopStaffing.sunPmFrom) &&
        Objects.equals(this.sunPmTo, v3StopStaffing.sunPmTo) &&
        Objects.equals(this.thuAmFrom, v3StopStaffing.thuAmFrom) &&
        Objects.equals(this.thuAmTo, v3StopStaffing.thuAmTo) &&
        Objects.equals(this.thuPmFrom, v3StopStaffing.thuPmFrom) &&
        Objects.equals(this.thuPmTo, v3StopStaffing.thuPmTo) &&
        Objects.equals(this.tueAmFrom, v3StopStaffing.tueAmFrom) &&
        Objects.equals(this.tueAmTo, v3StopStaffing.tueAmTo) &&
        Objects.equals(this.tuePmFrom, v3StopStaffing.tuePmFrom) &&
        Objects.equals(this.tuePmTo, v3StopStaffing.tuePmTo) &&
        Objects.equals(this.wedAmFrom, v3StopStaffing.wedAmFrom) &&
        Objects.equals(this.wedAmTo, v3StopStaffing.wedAmTo) &&
        Objects.equals(this.wedPmFrom, v3StopStaffing.wedPmFrom) &&
        Objects.equals(this.wedPmTo, v3StopStaffing.wedPmTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(friAmFrom, friAmTo, friPmFrom, friPmTo, monAmFrom, monAmTo, monPmFrom, monPmTo, phAdditionalText, phFrom, phTo, satAmFrom, satAmTo, satPmFrom, satPmTo, sunAmFrom, sunAmTo, sunPmFrom, sunPmTo, thuAmFrom, thuAmTo, thuPmFrom, thuPmTo, tueAmFrom, tueAmTo, tuePmFrom, tuePmTo, wedAmFrom, wedAmTo, wedPmFrom, wedPmTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V3StopStaffing {\n");
    sb.append("    friAmFrom: ").append(toIndentedString(friAmFrom)).append("\n");
    sb.append("    friAmTo: ").append(toIndentedString(friAmTo)).append("\n");
    sb.append("    friPmFrom: ").append(toIndentedString(friPmFrom)).append("\n");
    sb.append("    friPmTo: ").append(toIndentedString(friPmTo)).append("\n");
    sb.append("    monAmFrom: ").append(toIndentedString(monAmFrom)).append("\n");
    sb.append("    monAmTo: ").append(toIndentedString(monAmTo)).append("\n");
    sb.append("    monPmFrom: ").append(toIndentedString(monPmFrom)).append("\n");
    sb.append("    monPmTo: ").append(toIndentedString(monPmTo)).append("\n");
    sb.append("    phAdditionalText: ").append(toIndentedString(phAdditionalText)).append("\n");
    sb.append("    phFrom: ").append(toIndentedString(phFrom)).append("\n");
    sb.append("    phTo: ").append(toIndentedString(phTo)).append("\n");
    sb.append("    satAmFrom: ").append(toIndentedString(satAmFrom)).append("\n");
    sb.append("    satAmTo: ").append(toIndentedString(satAmTo)).append("\n");
    sb.append("    satPmFrom: ").append(toIndentedString(satPmFrom)).append("\n");
    sb.append("    satPmTo: ").append(toIndentedString(satPmTo)).append("\n");
    sb.append("    sunAmFrom: ").append(toIndentedString(sunAmFrom)).append("\n");
    sb.append("    sunAmTo: ").append(toIndentedString(sunAmTo)).append("\n");
    sb.append("    sunPmFrom: ").append(toIndentedString(sunPmFrom)).append("\n");
    sb.append("    sunPmTo: ").append(toIndentedString(sunPmTo)).append("\n");
    sb.append("    thuAmFrom: ").append(toIndentedString(thuAmFrom)).append("\n");
    sb.append("    thuAmTo: ").append(toIndentedString(thuAmTo)).append("\n");
    sb.append("    thuPmFrom: ").append(toIndentedString(thuPmFrom)).append("\n");
    sb.append("    thuPmTo: ").append(toIndentedString(thuPmTo)).append("\n");
    sb.append("    tueAmFrom: ").append(toIndentedString(tueAmFrom)).append("\n");
    sb.append("    tueAmTo: ").append(toIndentedString(tueAmTo)).append("\n");
    sb.append("    tuePmFrom: ").append(toIndentedString(tuePmFrom)).append("\n");
    sb.append("    tuePmTo: ").append(toIndentedString(tuePmTo)).append("\n");
    sb.append("    wedAmFrom: ").append(toIndentedString(wedAmFrom)).append("\n");
    sb.append("    wedAmTo: ").append(toIndentedString(wedAmTo)).append("\n");
    sb.append("    wedPmFrom: ").append(toIndentedString(wedPmFrom)).append("\n");
    sb.append("    wedPmTo: ").append(toIndentedString(wedPmTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fri_am_from");
    openapiFields.add("fri_am_to");
    openapiFields.add("fri_pm_from");
    openapiFields.add("fri_pm_to");
    openapiFields.add("mon_am_from");
    openapiFields.add("mon_am_to");
    openapiFields.add("mon_pm_from");
    openapiFields.add("mon_pm_to");
    openapiFields.add("ph_additional_text");
    openapiFields.add("ph_from");
    openapiFields.add("ph_to");
    openapiFields.add("sat_am_from");
    openapiFields.add("sat_am_to");
    openapiFields.add("sat_pm_from");
    openapiFields.add("sat_pm_to");
    openapiFields.add("sun_am_from");
    openapiFields.add("sun_am_to");
    openapiFields.add("sun_pm_from");
    openapiFields.add("sun_pm_to");
    openapiFields.add("thu_am_from");
    openapiFields.add("thu_am_to");
    openapiFields.add("thu_pm_from");
    openapiFields.add("thu_pm_to");
    openapiFields.add("tue_am_from");
    openapiFields.add("tue_am_to");
    openapiFields.add("tue_pm_from");
    openapiFields.add("tue_pm_to");
    openapiFields.add("wed_am_from");
    openapiFields.add("wed_am_to");
    openapiFields.add("wed_pm_from");
    openapiFields.add("wed_pm_To");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to V3StopStaffing
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V3StopStaffing.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V3StopStaffing is not found in the empty JSON string", V3StopStaffing.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V3StopStaffing.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V3StopStaffing` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fri_am_from") != null && !jsonObj.get("fri_am_from").isJsonNull()) && !jsonObj.get("fri_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_am_from").toString()));
      }
      if ((jsonObj.get("fri_am_to") != null && !jsonObj.get("fri_am_to").isJsonNull()) && !jsonObj.get("fri_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_am_to").toString()));
      }
      if ((jsonObj.get("fri_pm_from") != null && !jsonObj.get("fri_pm_from").isJsonNull()) && !jsonObj.get("fri_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_pm_from").toString()));
      }
      if ((jsonObj.get("fri_pm_to") != null && !jsonObj.get("fri_pm_to").isJsonNull()) && !jsonObj.get("fri_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fri_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fri_pm_to").toString()));
      }
      if ((jsonObj.get("mon_am_from") != null && !jsonObj.get("mon_am_from").isJsonNull()) && !jsonObj.get("mon_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_am_from").toString()));
      }
      if ((jsonObj.get("mon_am_to") != null && !jsonObj.get("mon_am_to").isJsonNull()) && !jsonObj.get("mon_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_am_to").toString()));
      }
      if ((jsonObj.get("mon_pm_from") != null && !jsonObj.get("mon_pm_from").isJsonNull()) && !jsonObj.get("mon_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_pm_from").toString()));
      }
      if ((jsonObj.get("mon_pm_to") != null && !jsonObj.get("mon_pm_to").isJsonNull()) && !jsonObj.get("mon_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mon_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mon_pm_to").toString()));
      }
      if ((jsonObj.get("ph_additional_text") != null && !jsonObj.get("ph_additional_text").isJsonNull()) && !jsonObj.get("ph_additional_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ph_additional_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ph_additional_text").toString()));
      }
      if ((jsonObj.get("ph_from") != null && !jsonObj.get("ph_from").isJsonNull()) && !jsonObj.get("ph_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ph_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ph_from").toString()));
      }
      if ((jsonObj.get("ph_to") != null && !jsonObj.get("ph_to").isJsonNull()) && !jsonObj.get("ph_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ph_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ph_to").toString()));
      }
      if ((jsonObj.get("sat_am_from") != null && !jsonObj.get("sat_am_from").isJsonNull()) && !jsonObj.get("sat_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_am_from").toString()));
      }
      if ((jsonObj.get("sat_am_to") != null && !jsonObj.get("sat_am_to").isJsonNull()) && !jsonObj.get("sat_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_am_to").toString()));
      }
      if ((jsonObj.get("sat_pm_from") != null && !jsonObj.get("sat_pm_from").isJsonNull()) && !jsonObj.get("sat_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_pm_from").toString()));
      }
      if ((jsonObj.get("sat_pm_to") != null && !jsonObj.get("sat_pm_to").isJsonNull()) && !jsonObj.get("sat_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sat_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sat_pm_to").toString()));
      }
      if ((jsonObj.get("sun_am_from") != null && !jsonObj.get("sun_am_from").isJsonNull()) && !jsonObj.get("sun_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_am_from").toString()));
      }
      if ((jsonObj.get("sun_am_to") != null && !jsonObj.get("sun_am_to").isJsonNull()) && !jsonObj.get("sun_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_am_to").toString()));
      }
      if ((jsonObj.get("sun_pm_from") != null && !jsonObj.get("sun_pm_from").isJsonNull()) && !jsonObj.get("sun_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_pm_from").toString()));
      }
      if ((jsonObj.get("sun_pm_to") != null && !jsonObj.get("sun_pm_to").isJsonNull()) && !jsonObj.get("sun_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sun_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sun_pm_to").toString()));
      }
      if ((jsonObj.get("thu_am_from") != null && !jsonObj.get("thu_am_from").isJsonNull()) && !jsonObj.get("thu_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_am_from").toString()));
      }
      if ((jsonObj.get("thu_am_to") != null && !jsonObj.get("thu_am_to").isJsonNull()) && !jsonObj.get("thu_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_am_to").toString()));
      }
      if ((jsonObj.get("thu_pm_from") != null && !jsonObj.get("thu_pm_from").isJsonNull()) && !jsonObj.get("thu_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_pm_from").toString()));
      }
      if ((jsonObj.get("thu_pm_to") != null && !jsonObj.get("thu_pm_to").isJsonNull()) && !jsonObj.get("thu_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thu_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thu_pm_to").toString()));
      }
      if ((jsonObj.get("tue_am_from") != null && !jsonObj.get("tue_am_from").isJsonNull()) && !jsonObj.get("tue_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_am_from").toString()));
      }
      if ((jsonObj.get("tue_am_to") != null && !jsonObj.get("tue_am_to").isJsonNull()) && !jsonObj.get("tue_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_am_to").toString()));
      }
      if ((jsonObj.get("tue_pm_from") != null && !jsonObj.get("tue_pm_from").isJsonNull()) && !jsonObj.get("tue_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_pm_from").toString()));
      }
      if ((jsonObj.get("tue_pm_to") != null && !jsonObj.get("tue_pm_to").isJsonNull()) && !jsonObj.get("tue_pm_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tue_pm_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tue_pm_to").toString()));
      }
      if ((jsonObj.get("wed_am_from") != null && !jsonObj.get("wed_am_from").isJsonNull()) && !jsonObj.get("wed_am_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_am_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_am_from").toString()));
      }
      if ((jsonObj.get("wed_am_to") != null && !jsonObj.get("wed_am_to").isJsonNull()) && !jsonObj.get("wed_am_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_am_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_am_to").toString()));
      }
      if ((jsonObj.get("wed_pm_from") != null && !jsonObj.get("wed_pm_from").isJsonNull()) && !jsonObj.get("wed_pm_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_pm_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_pm_from").toString()));
      }
      if ((jsonObj.get("wed_pm_To") != null && !jsonObj.get("wed_pm_To").isJsonNull()) && !jsonObj.get("wed_pm_To").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wed_pm_To` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wed_pm_To").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V3StopStaffing.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V3StopStaffing' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V3StopStaffing> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V3StopStaffing.class));

       return (TypeAdapter<T>) new TypeAdapter<V3StopStaffing>() {
           @Override
           public void write(JsonWriter out, V3StopStaffing value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V3StopStaffing read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V3StopStaffing given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V3StopStaffing
  * @throws IOException if the JSON string is invalid with respect to V3StopStaffing
  */
  public static V3StopStaffing fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V3StopStaffing.class);
  }

 /**
  * Convert an instance of V3StopStaffing to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

