/*
 * PTV Timetable API - Version 3
 * The PTV Timetable API provides direct access to Public Transport Victoria's public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.  
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.V3StopAccessibility;
import io.swagger.client.model.V3StopAmenityDetails;
import io.swagger.client.model.V3StopLocation;
import io.swagger.client.model.V3StopStaffing;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V3StopDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-22T22:15:30.079+10:00")
public class V3StopDetails {
  @SerializedName("disruption_ids")
  private List<Long> disruptionIds = null;

  @SerializedName("station_type")
  private String stationType = null;

  @SerializedName("station_description")
  private String stationDescription = null;

  @SerializedName("route_type")
  private Integer routeType = null;

  @SerializedName("stop_location")
  private V3StopLocation stopLocation = null;

  @SerializedName("stop_amenities")
  private V3StopAmenityDetails stopAmenities = null;

  @SerializedName("stop_accessibility")
  private V3StopAccessibility stopAccessibility = null;

  @SerializedName("stop_staffing")
  private V3StopStaffing stopStaffing = null;

  @SerializedName("routes")
  private List<Object> routes = null;

  @SerializedName("stop_id")
  private Integer stopId = null;

  @SerializedName("stop_name")
  private String stopName = null;

  @SerializedName("stop_landmark")
  private String stopLandmark = null;

  public V3StopDetails disruptionIds(List<Long> disruptionIds) {
    this.disruptionIds = disruptionIds;
    return this;
  }

  public V3StopDetails addDisruptionIdsItem(Long disruptionIdsItem) {
    if (this.disruptionIds == null) {
      this.disruptionIds = new ArrayList<Long>();
    }
    this.disruptionIds.add(disruptionIdsItem);
    return this;
  }

   /**
   * Disruption information identifier(s)
   * @return disruptionIds
  **/
  @ApiModelProperty(value = "Disruption information identifier(s)")
  public List<Long> getDisruptionIds() {
    return disruptionIds;
  }

  public void setDisruptionIds(List<Long> disruptionIds) {
    this.disruptionIds = disruptionIds;
  }

  public V3StopDetails stationType(String stationType) {
    this.stationType = stationType;
    return this;
  }

   /**
   * Type of metropolitan train station (i.e. \&quot;Premium\&quot;, \&quot;Host\&quot; or \&quot;Unstaffed\&quot; station); returns null for V/Line train
   * @return stationType
  **/
  @ApiModelProperty(value = "Type of metropolitan train station (i.e. \"Premium\", \"Host\" or \"Unstaffed\" station); returns null for V/Line train")
  public String getStationType() {
    return stationType;
  }

  public void setStationType(String stationType) {
    this.stationType = stationType;
  }

  public V3StopDetails stationDescription(String stationDescription) {
    this.stationDescription = stationDescription;
    return this;
  }

   /**
   * The definition applicable to the station_type; returns null for V/Line train
   * @return stationDescription
  **/
  @ApiModelProperty(value = "The definition applicable to the station_type; returns null for V/Line train")
  public String getStationDescription() {
    return stationDescription;
  }

  public void setStationDescription(String stationDescription) {
    this.stationDescription = stationDescription;
  }

  public V3StopDetails routeType(Integer routeType) {
    this.routeType = routeType;
    return this;
  }

   /**
   * Transport mode identifier
   * @return routeType
  **/
  @ApiModelProperty(value = "Transport mode identifier")
  public Integer getRouteType() {
    return routeType;
  }

  public void setRouteType(Integer routeType) {
    this.routeType = routeType;
  }

  public V3StopDetails stopLocation(V3StopLocation stopLocation) {
    this.stopLocation = stopLocation;
    return this;
  }

   /**
   * Location details of the stop
   * @return stopLocation
  **/
  @ApiModelProperty(value = "Location details of the stop")
  public V3StopLocation getStopLocation() {
    return stopLocation;
  }

  public void setStopLocation(V3StopLocation stopLocation) {
    this.stopLocation = stopLocation;
  }

  public V3StopDetails stopAmenities(V3StopAmenityDetails stopAmenities) {
    this.stopAmenities = stopAmenities;
    return this;
  }

   /**
   * Amenity and facility details at the stop
   * @return stopAmenities
  **/
  @ApiModelProperty(value = "Amenity and facility details at the stop")
  public V3StopAmenityDetails getStopAmenities() {
    return stopAmenities;
  }

  public void setStopAmenities(V3StopAmenityDetails stopAmenities) {
    this.stopAmenities = stopAmenities;
  }

  public V3StopDetails stopAccessibility(V3StopAccessibility stopAccessibility) {
    this.stopAccessibility = stopAccessibility;
    return this;
  }

   /**
   * Facilities relating to the accessibility of the stop
   * @return stopAccessibility
  **/
  @ApiModelProperty(value = "Facilities relating to the accessibility of the stop")
  public V3StopAccessibility getStopAccessibility() {
    return stopAccessibility;
  }

  public void setStopAccessibility(V3StopAccessibility stopAccessibility) {
    this.stopAccessibility = stopAccessibility;
  }

  public V3StopDetails stopStaffing(V3StopStaffing stopStaffing) {
    this.stopStaffing = stopStaffing;
    return this;
  }

   /**
   * Staffing details for the stop
   * @return stopStaffing
  **/
  @ApiModelProperty(value = "Staffing details for the stop")
  public V3StopStaffing getStopStaffing() {
    return stopStaffing;
  }

  public void setStopStaffing(V3StopStaffing stopStaffing) {
    this.stopStaffing = stopStaffing;
  }

  public V3StopDetails routes(List<Object> routes) {
    this.routes = routes;
    return this;
  }

  public V3StopDetails addRoutesItem(Object routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<Object>();
    }
    this.routes.add(routesItem);
    return this;
  }

   /**
   * Routes travelling through the stop
   * @return routes
  **/
  @ApiModelProperty(value = "Routes travelling through the stop")
  public List<Object> getRoutes() {
    return routes;
  }

  public void setRoutes(List<Object> routes) {
    this.routes = routes;
  }

  public V3StopDetails stopId(Integer stopId) {
    this.stopId = stopId;
    return this;
  }

   /**
   * Stop identifier
   * @return stopId
  **/
  @ApiModelProperty(value = "Stop identifier")
  public Integer getStopId() {
    return stopId;
  }

  public void setStopId(Integer stopId) {
    this.stopId = stopId;
  }

  public V3StopDetails stopName(String stopName) {
    this.stopName = stopName;
    return this;
  }

   /**
   * Name of stop
   * @return stopName
  **/
  @ApiModelProperty(value = "Name of stop")
  public String getStopName() {
    return stopName;
  }

  public void setStopName(String stopName) {
    this.stopName = stopName;
  }

  public V3StopDetails stopLandmark(String stopLandmark) {
    this.stopLandmark = stopLandmark;
    return this;
  }

   /**
   * Landmark in proximity of stop
   * @return stopLandmark
  **/
  @ApiModelProperty(value = "Landmark in proximity of stop")
  public String getStopLandmark() {
    return stopLandmark;
  }

  public void setStopLandmark(String stopLandmark) {
    this.stopLandmark = stopLandmark;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V3StopDetails v3StopDetails = (V3StopDetails) o;
    return Objects.equals(this.disruptionIds, v3StopDetails.disruptionIds) &&
        Objects.equals(this.stationType, v3StopDetails.stationType) &&
        Objects.equals(this.stationDescription, v3StopDetails.stationDescription) &&
        Objects.equals(this.routeType, v3StopDetails.routeType) &&
        Objects.equals(this.stopLocation, v3StopDetails.stopLocation) &&
        Objects.equals(this.stopAmenities, v3StopDetails.stopAmenities) &&
        Objects.equals(this.stopAccessibility, v3StopDetails.stopAccessibility) &&
        Objects.equals(this.stopStaffing, v3StopDetails.stopStaffing) &&
        Objects.equals(this.routes, v3StopDetails.routes) &&
        Objects.equals(this.stopId, v3StopDetails.stopId) &&
        Objects.equals(this.stopName, v3StopDetails.stopName) &&
        Objects.equals(this.stopLandmark, v3StopDetails.stopLandmark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disruptionIds, stationType, stationDescription, routeType, stopLocation, stopAmenities, stopAccessibility, stopStaffing, routes, stopId, stopName, stopLandmark);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V3StopDetails {\n");
    
    sb.append("    disruptionIds: ").append(toIndentedString(disruptionIds)).append("\n");
    sb.append("    stationType: ").append(toIndentedString(stationType)).append("\n");
    sb.append("    stationDescription: ").append(toIndentedString(stationDescription)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    stopLocation: ").append(toIndentedString(stopLocation)).append("\n");
    sb.append("    stopAmenities: ").append(toIndentedString(stopAmenities)).append("\n");
    sb.append("    stopAccessibility: ").append(toIndentedString(stopAccessibility)).append("\n");
    sb.append("    stopStaffing: ").append(toIndentedString(stopStaffing)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("    stopId: ").append(toIndentedString(stopId)).append("\n");
    sb.append("    stopName: ").append(toIndentedString(stopName)).append("\n");
    sb.append("    stopLandmark: ").append(toIndentedString(stopLandmark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

