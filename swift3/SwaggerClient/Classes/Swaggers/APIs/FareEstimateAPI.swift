//
// FareEstimateAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class FareEstimateAPI: APIBase {
    /**
     * enum for parameter travelledRouteTypes
     */
    public enum TravelledRouteTypes_fareEstimateGetFareEstimateByZone: String { 
        case _0 = "0"
        case _1 = "1"
        case _2 = "2"
        case _3 = "3"
        case _4 = "4"
    }

    /**
     Estimate a fare by zone
     - parameter minZone: (path) Minimum Zone travelled through ie. 1 
     - parameter maxZone: (path) Maximum Zone travelled through id. 6 
     - parameter journeyTouchOnUtc: (query) JourneyTouchOnUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53). (optional)
     - parameter journeyTouchOffUtc: (query) JourneyTouchOffUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53). (optional)
     - parameter isJourneyInFreeTramZone: (query)  (optional)
     - parameter travelledRouteTypes: (query)  (optional)
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fareEstimateGetFareEstimateByZone(minZone: Int32, maxZone: Int32, journeyTouchOnUtc: Date? = nil, journeyTouchOffUtc: Date? = nil, isJourneyInFreeTramZone: Bool? = nil, travelledRouteTypes: [Int32]? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3FareEstimateResponse?, _ error: ErrorResponse?) -> Void)) {
        fareEstimateGetFareEstimateByZoneWithRequestBuilder(minZone: minZone, maxZone: maxZone, journeyTouchOnUtc: journeyTouchOnUtc, journeyTouchOffUtc: journeyTouchOffUtc, isJourneyInFreeTramZone: isJourneyInFreeTramZone, travelledRouteTypes: travelledRouteTypes, token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Estimate a fare by zone
     - GET /v3/fare_estimate/min_zone/{minZone}/max_zone/{maxZone}

     - examples: [{contentType=application/json, example={
  "FareEstimateResultStatus" : {
    "Message" : "Message",
    "StatusCode" : 0
  },
  "FareEstimateResult" : {
    "IsEarlyBird" : true,
    "IsJourneyInFreeTramZone" : true,
    "PassengerFares" : [ {
      "PassengerType" : "PassengerType",
      "Pass70PlusDayPerDay" : 4.145608029883936,
      "Fare2HourOffPeak" : 2.3021358869347655,
      "FareDailyPeak" : 7.061401241503109,
      "WeekendCap" : 7.386281948385884,
      "Fare2HourPeak" : 5.637376656633329,
      "Pass28To69DayPerDay" : 2.027123023002322,
      "Pass7Days" : 3.616076749251911,
      "FareDailyOffPeak" : 9.301444243932576,
      "HolidayCap" : 1.2315135367772556
    }, {
      "PassengerType" : "PassengerType",
      "Pass70PlusDayPerDay" : 4.145608029883936,
      "Fare2HourOffPeak" : 2.3021358869347655,
      "FareDailyPeak" : 7.061401241503109,
      "WeekendCap" : 7.386281948385884,
      "Fare2HourPeak" : 5.637376656633329,
      "Pass28To69DayPerDay" : 2.027123023002322,
      "Pass7Days" : 3.616076749251911,
      "FareDailyOffPeak" : 9.301444243932576,
      "HolidayCap" : 1.2315135367772556
    } ],
    "IsThisWeekendJourney" : true,
    "ZoneInfo" : {
      "UniqueZones" : [ 5, 5 ],
      "MinZone" : 6,
      "MaxZone" : 1
    }
  }
}}]
     - parameter minZone: (path) Minimum Zone travelled through ie. 1 
     - parameter maxZone: (path) Maximum Zone travelled through id. 6 
     - parameter journeyTouchOnUtc: (query) JourneyTouchOnUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53). (optional)
     - parameter journeyTouchOffUtc: (query) JourneyTouchOffUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53). (optional)
     - parameter isJourneyInFreeTramZone: (query)  (optional)
     - parameter travelledRouteTypes: (query)  (optional)
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - returns: RequestBuilder<V3FareEstimateResponse> 
     */
    open class func fareEstimateGetFareEstimateByZoneWithRequestBuilder(minZone: Int32, maxZone: Int32, journeyTouchOnUtc: Date? = nil, journeyTouchOffUtc: Date? = nil, isJourneyInFreeTramZone: Bool? = nil, travelledRouteTypes: [Int32]? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3FareEstimateResponse> {
        var path = "/v3/fare_estimate/min_zone/{minZone}/max_zone/{maxZone}"
        let minZonePreEscape = "\(minZone)"
        let minZonePostEscape = minZonePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{minZone}", with: minZonePostEscape, options: .literal, range: nil)
        let maxZonePreEscape = "\(maxZone)"
        let maxZonePostEscape = maxZonePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{maxZone}", with: maxZonePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
                        "journey_touch_on_utc": journeyTouchOnUtc?.encodeToJSON(),
                        "journey_touch_off_utc": journeyTouchOffUtc?.encodeToJSON(),
                        "is_journey_in_free_tram_zone": isJourneyInFreeTramZone,
                        "travelled_route_types": travelledRouteTypes,
                        "token": token,
                        "devid": devid,
                        "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3FareEstimateResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
