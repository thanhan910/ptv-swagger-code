//
// V3DynamoDbTimetable.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3DynamoDbTimetable: JSONEncodable {
    public enum TransportType: Int32 {
        case _0 = 0
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case _4 = 4
    }
    /** Name of corresponding table in DynamoDB. */
    public var tableName: String?
    /** Parser verison */
    public var parserVersion: Int64?
    /** Diva Mapping Version used to load Parser into DynamoDB */
    public var parserMappingVersion: String?
    /** PT version */
    public var ptVersion: Int64?
    /** Diva Mapping Version used to load PT into DynamoDB */
    public var ptMappingVersion: String?
    /** A.k.a. Transport Mode (e.g. Train, Tram, Bus, V/Line, Nightrider) */
    public var transportType: TransportType?
    /** Formated date string of applicable date */
    public var applicableLocalDate: String?
    /** True if the named table has been created in DynamoDB (i.e. at least one departure record has been loaded),  or false if there are no records for this date and transport type. */
    public var exists: Bool?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["table_name"] = self.tableName
        nillableDictionary["parser_version"] = self.parserVersion?.encodeToJSON()
        nillableDictionary["parser_mapping_version"] = self.parserMappingVersion
        nillableDictionary["pt_version"] = self.ptVersion?.encodeToJSON()
        nillableDictionary["pt_mapping_version"] = self.ptMappingVersion
        nillableDictionary["transport_type"] = self.transportType?.rawValue
        nillableDictionary["applicable_local_date"] = self.applicableLocalDate
        nillableDictionary["exists"] = self.exists

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
