//
// V3BulkDeparturesRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3BulkDeparturesRequest: JSONEncodable {
    public enum Expand: String {
        case all = "All"
        case stop = "Stop"
        case route = "Route"
        case run = "Run"
        case direction = "Direction"
        case disruption = "Disruption"
        case vehicleDescriptor = "VehicleDescriptor"
        case vehiclePosition = "VehiclePosition"
        case _none = "None"
    }
    /** Collection of departure requests */
    public var requests: [V3StopDepartureRequest]?
    /** Filter by the date and time of the request (ISO 8601 UTC format) (default &#x3D; current date and time) */
    public var dateUtc: Date?
    /** Indicates if filtering runs (and their departures) to those that arrive at destination before date_utc (default &#x3D; false). Requires max_results &amp;gt; 0. */
    public var lookBackwards: Bool?
    /** Indicates if cancelled services (if they exist) are returned (default &#x3D; false) - metropolitan train only */
    public var includeCancelled: Bool?
    /** Indicates if the route geopath should be returned */
    public var includeGeopath: Bool?
    /** List objects to be returned in full (i.e. expanded) - options include: all, stop, route, run, direction, disruption, none */
    public var expand: [Expand]?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["requests"] = self.requests?.encodeToJSON()
        nillableDictionary["date_utc"] = self.dateUtc?.encodeToJSON()
        nillableDictionary["look_backwards"] = self.lookBackwards
        nillableDictionary["include_cancelled"] = self.includeCancelled
        nillableDictionary["include_geopath"] = self.includeGeopath
        nillableDictionary["expand"] = self.expand?.map({$0.rawValue}).encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
