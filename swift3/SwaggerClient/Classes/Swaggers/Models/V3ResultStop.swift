//
// V3ResultStop.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3ResultStop: JSONEncodable {
    /** Distance of stop from input location (in metres); returns 0 if no location is input */
    public var stopDistance: Float?
    /** suburb of stop */
    public var stopSuburb: String?
    /** Transport mode identifier */
    public var routeType: Int32?
    /** List of routes travelling through the stop */
    public var routes: [V3ResultRoute]?
    /** Geographic coordinate of latitude at stop */
    public var stopLatitude: Float?
    /** Geographic coordinate of longitude at stop */
    public var stopLongitude: Float?
    /** Sequence of the stop on the route/run; return 0 when route_id or run_id not specified. Order ascendingly by this field (when non zero) to get physical order (earliest first) of stops on the route_id/run_id. */
    public var stopSequence: Int32?
    /** Stop identifier */
    public var stopId: Int32?
    /** Name of stop */
    public var stopName: String?
    /** Landmark in proximity of stop */
    public var stopLandmark: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["stop_distance"] = self.stopDistance
        nillableDictionary["stop_suburb"] = self.stopSuburb
        nillableDictionary["route_type"] = self.routeType?.encodeToJSON()
        nillableDictionary["routes"] = self.routes?.encodeToJSON()
        nillableDictionary["stop_latitude"] = self.stopLatitude
        nillableDictionary["stop_longitude"] = self.stopLongitude
        nillableDictionary["stop_sequence"] = self.stopSequence?.encodeToJSON()
        nillableDictionary["stop_id"] = self.stopId?.encodeToJSON()
        nillableDictionary["stop_name"] = self.stopName
        nillableDictionary["stop_landmark"] = self.stopLandmark

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
