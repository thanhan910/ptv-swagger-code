//
// V3SiriEstimatedTimetableSubscriptionRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3SiriEstimatedTimetableSubscriptionRequest: JSONEncodable {
    public enum SiriFormat: Int32 {
        case _0 = 0
        case _1 = 1
    }
    /** Siri Preview Interval */
    public var previewInterval: String?
    /** Siri Subscriber Ref */
    public var subscriberRef: String?
    /** Siri Subscription Ref - Unique to a Subscriber Ref */
    public var subscriptionRef: String?
    /** Siri Message Format &#x27;xml&#x27; or &#x27;json&#x27; */
    public var siriFormat: SiriFormat?
    /** Siri Message Version &#x27;1.3&#x27; or &#x27;2.0&#x27; */
    public var siriVersion: String?
    /** Siri Consumer Address - Baseline and Updates will be sent to this address */
    public var consumerAddress: String?
    /** Siri Initial Termination Time - Expiry of the subscription */
    public var initialTerminationTime: Date?
    public var topics: [V3SiriSubscriptionTopic]?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["preview_interval"] = self.previewInterval
        nillableDictionary["subscriber_ref"] = self.subscriberRef
        nillableDictionary["subscription_ref"] = self.subscriptionRef
        nillableDictionary["siri_format"] = self.siriFormat?.rawValue
        nillableDictionary["siri_version"] = self.siriVersion
        nillableDictionary["consumer_address"] = self.consumerAddress
        nillableDictionary["initial_termination_time"] = self.initialTerminationTime?.encodeToJSON()
        nillableDictionary["topics"] = self.topics?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
