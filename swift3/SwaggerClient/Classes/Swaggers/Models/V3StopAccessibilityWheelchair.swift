//
// V3StopAccessibilityWheelchair.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3StopAccessibilityWheelchair: JSONEncodable {
    public var accessibleRamp: Bool?
    /** Indicates if there is at least one accessible parking spot at the stop that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var parking: Bool?
    /** Indicates if there is at least one accessible telephone at the stop/platform that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var telephone: Bool?
    /** Indicates if there is at least one accessible toilet at the stop/platform that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var toilet: Bool?
    /** Indicates if there is at least one low ticket counter at the stop that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var lowTicketCounter: Bool?
    /** Indicates if there is a space for mobility device to board on or off a transport mode */
    public var manouvering: Bool?
    /** Indicates if there is a raised platform to board a train */
    public var raisedPlatform: Bool?
    /** Indicates if there are ramps (&amp;lt;1:14) at the stop/platform */
    public var ramp: Bool?
    /** Indicates if there is a path beyond the stop which is accessible */
    public var secondaryPath: Bool?
    /** Indicates if there is shelter near the raised platform */
    public var raisedPlatformShelther: Bool?
    /** Indicates if there are ramps (&amp;gt;1:14) at the stop/platform */
    public var steepRamp: Bool?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["accessible_ramp"] = self.accessibleRamp
        nillableDictionary["parking"] = self.parking
        nillableDictionary["telephone"] = self.telephone
        nillableDictionary["toilet"] = self.toilet
        nillableDictionary["low_ticket_counter"] = self.lowTicketCounter
        nillableDictionary["manouvering"] = self.manouvering
        nillableDictionary["raised_platform"] = self.raisedPlatform
        nillableDictionary["ramp"] = self.ramp
        nillableDictionary["secondary_path"] = self.secondaryPath
        nillableDictionary["raised_platform_shelther"] = self.raisedPlatformShelther
        nillableDictionary["steep_ramp"] = self.steepRamp

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
