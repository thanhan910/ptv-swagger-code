//
// V3Run.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class V3Run: JSONEncodable {
    /** Numeric trip/service run identifier. Defaults to -1 when run identifier is Alphanumeric */
    public var runId: Int32?
    /** Alphanumeric trip/service run identifier */
    public var runRef: String?
    /** Route identifier */
    public var routeId: Int32?
    /** Transport mode identifier */
    public var routeType: Int32?
    /** stop_id of final stop of run */
    public var finalStopId: Int32?
    /** Name of destination of run */
    public var destinationName: String?
    /** Status of metropolitan train run; returns \&quot;scheduled\&quot; for other modes */
    public var status: String?
    /** Direction of travel identifier */
    public var directionId: Int32?
    /** Chronological sequence of the trip/service run on the route in direction. Order ascendingly by this field to get chronological order (earliest first) of runs with the same route_id and direction_id. */
    public var runSequence: Int32?
    /** The number of remaining skipped/express stations for the run/service from a stop */
    public var expressStopCount: Int32?
    public var vehiclePosition: V3VehiclePosition?
    public var vehicleDescriptor: V3VehicleDescriptor?
    /** Geopath of the route */
    public var geopath: [Any]?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["run_id"] = self.runId?.encodeToJSON()
        nillableDictionary["run_ref"] = self.runRef
        nillableDictionary["route_id"] = self.routeId?.encodeToJSON()
        nillableDictionary["route_type"] = self.routeType?.encodeToJSON()
        nillableDictionary["final_stop_id"] = self.finalStopId?.encodeToJSON()
        nillableDictionary["destination_name"] = self.destinationName
        nillableDictionary["status"] = self.status
        nillableDictionary["direction_id"] = self.directionId?.encodeToJSON()
        nillableDictionary["run_sequence"] = self.runSequence?.encodeToJSON()
        nillableDictionary["express_stop_count"] = self.expressStopCount?.encodeToJSON()
        nillableDictionary["vehicle_position"] = self.vehiclePosition?.encodeToJSON()
        nillableDictionary["vehicle_descriptor"] = self.vehicleDescriptor?.encodeToJSON()
        nillableDictionary["geopath"] = self.geopath?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
