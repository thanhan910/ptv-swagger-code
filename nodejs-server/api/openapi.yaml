openapi: 3.0.1
info:
  title: PTV Timetable API - Version 3
  description: "The PTV Timetable API provides direct access to Public Transport Victoria's\
    \ public transport timetable data.\r\n\r\nThe API returns scheduled timetable,\
    \ route and stop data for all metropolitan and regional train, tram and bus services\
    \ in Victoria, including Night Network(Night Train and Night Tram data are included\
    \ in metropolitan train and tram services data, respectively, whereas Night Bus\
    \ is a separate route type).\r\n\r\nThe API also returns real-time data for metropolitan\
    \ train, tram and bus services (where this data is made available to PTV), as\
    \ well as disruption information, stop facility information, and access to myki\
    \ ticket outlet data.\r\n\r\nThis Swagger is for Version 3 of the PTV Timetable\
    \ API. By using this documentation you agree to comply with the licence and terms\
    \ of service.\r\n\r\nTrain timetable data is updated daily, while the remaining\
    \ data is updated weekly, taking into account any planned timetable changes (for\
    \ example, due to holidays or planned disruptions). The PTV timetable API is the\
    \ same API used by PTV for its apps. To access the most up to date data PTV has\
    \ (including real-time data) you must use the API dynamically.\r\n\r\nYou can\
    \ access the PTV Timetable API through a HTTP or HTTPS interface, as follows:\r\
    \n\r\n    base URL / version number / API name / query string\r\nThe base URL\
    \ is either:\r\n  *  http://timetableapi.ptv.vic.gov.au\r\nor\r\n  *  https://timetableapi.ptv.vic.gov.au\r\
    \n\r\nThe Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3\r\
    \n\r\nFrequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq\r\
    \n\r\nLinks to the following information are also provided on the PTV website\
    \ at http://ptv.vic.gov.au/ptv-timetable-api/\r\n* How to register for an API\
    \ key and calculate a signature\r\n* PTV Timetable API V2 to V3 Migration Guide\r\
    \n* PTV Timetable API Data Quality Statement\r\n\r\nAll information about how\
    \ to use the API is in this documentation. PTV cannot provide technical support\
    \ for the API.\r\n"
  termsOfService: See http://ptv.vic.gov.au/ptv-timetable-api/
  contact:
    name: Public Transport Victoria
    url: http://ptv.vic.gov.au/digital
  license:
    name: Creative Commons Attribution 4.0 International
    url: https://creativecommons.org/licenses/by/4.0/
  version: v3
servers:
- url: https://timetableapi.ptv.vic.gov.au/
- url: http://timetableapi.ptv.vic.gov.au/
paths:
  /v3/departures/route_type/{route_type}/stop/{stop_id}:
    get:
      tags:
      - Departures
      summary: View departures for all routes from a stop
      operationId: Departures_GetForStop
      parameters:
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: stop_id
        in: path
        description: Identifier of stop; values returned by Stops API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: platform_numbers
        in: query
        description: Filter by platform number at stop
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
      - name: direction_id
        in: query
        description: "Filter by identifier of direction of travel; values returned\
          \ by Directions API - /v3/directions/route/{route_id}"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: gtfs
        in: query
        description: Indicates that stop_id parameter will accept "GTFS stop_id" data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: date_utc
        in: query
        description: Filter by the date and time of the request (ISO 8601 UTC format)
          (default = current date and time)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: max_results
        in: query
        description: Maximum number of results returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: include_cancelled
        in: query
        description: Indicates if cancelled services (if they exist) are returned
          (default = false) - metropolitan train only
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: look_backwards
        in: query
        description: Indicates if filtering runs (and their departures) to those that
          arrive at destination before date_utc (default = false). Requires max_results
          &gt; 0.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
          \ VehicleDescriptor or None.\r\nRun must be expanded to receive VehiclePosition\
          \ and VehicleDescriptor information."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: include_geopath
        in: query
        description: Indicates if the route geopath should be returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Service departures from the specified stop for all routes of
            the specified route type; departures are timetabled and real-time (if
            applicable).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Departures
  /v3/departures/route_type/{route_type}/stop/{stop_id}/route/{route_id}:
    get:
      tags:
      - Departures
      summary: View departures for a specific route from a stop
      operationId: Departures_GetForStopAndRoute
      parameters:
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: stop_id
        in: path
        description: Identifier of stop; values returned by Stops API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: direction_id
        in: query
        description: "Filter by identifier of direction of travel; values returned\
          \ by Directions API - /v3/directions/route/{route_id}"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: gtfs
        in: query
        description: Indicates that stop_id parameter will accept "GTFS stop_id" data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: date_utc
        in: query
        description: Filter by the date and time of the request (ISO 8601 UTC format)
          (default = current date and time)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: max_results
        in: query
        description: Maximum number of results returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: include_cancelled
        in: query
        description: Indicates if cancelled services (if they exist) are returned
          (default = false) - metropolitan train only
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: look_backwards
        in: query
        description: Indicates if filtering runs (and their departures) to those that
          arrive at destination before date_utc (default = false). Requires max_results
          &gt; 0.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
          \ VehicleDescriptor or None.\r\nRun must be expanded to receive VehiclePosition\
          \ and VehicleDescriptor information."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: include_geopath
        in: query
        description: Indicates if the route geopath should be returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Service departures from the specified stop for the specified
            route (and route type); departures are timetabled and real-time (if applicable).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DeparturesResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Departures
  /v3/directions/route/{route_id}:
    get:
      tags:
      - Directions
      summary: View directions that a route travels in
      operationId: Directions_ForRoute
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The directions that a specified route travels in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Directions
  /v3/directions/{direction_id}:
    get:
      tags:
      - Directions
      summary: View all routes for a direction of travel
      operationId: Directions_ForDirection
      parameters:
      - name: direction_id
        in: path
        description: "Identifier of direction of travel; values returned by Directions\
          \ API - /v3/directions/route/{route_id}"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All routes that travel in the specified direction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Directions
  /v3/directions/{direction_id}/route_type/{route_type}:
    get:
      tags:
      - Directions
      summary: View all routes of a particular type for a direction of travel
      operationId: Directions_ForDirectionAndType
      parameters:
      - name: direction_id
        in: path
        description: "Identifier of direction of travel; values returned by Directions\
          \ API - /v3/directions/route/{route_id}"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All routes of the specified route type that travel in the specified
            direction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DirectionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Directions
  /v3/disruptions:
    get:
      tags:
      - Disruptions
      summary: View all disruptions for all route types
      operationId: Disruptions_GetAllDisruptions
      parameters:
      - name: route_types
        in: query
        description: Filter by route_type; values returned via RouteTypes API
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      - name: disruption_modes
        in: query
        description: Filter by disruption_mode; values returned via v3/disruptions/modes
          API
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 100
      - name: disruption_status
        in: query
        description: Filter by status of disruption
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - current
          - planned
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All disruption information for all route types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/disruptions/route/{route_id}:
    get:
      tags:
      - Disruptions
      summary: View all disruptions for a particular route
      operationId: Disruptions_GetDisruptionsByRoute
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: disruption_status
        in: query
        description: Filter by status of disruption
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - current
          - planned
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All disruption information (if any exists) for the specified
            route.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/disruptions/route/{route_id}/stop/{stop_id}:
    get:
      tags:
      - Disruptions
      summary: View all disruptions for a particular route and stop
      operationId: Disruptions_GetDisruptionsByRouteAndStop
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: stop_id
        in: path
        description: Identifier of stop; values returned by Stops API - v3/stops
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: disruption_status
        in: query
        description: Filter by status of disruption
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - current
          - planned
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All disruption information (if any exists) for the specified
            route and stop.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/disruptions/stop/{stop_id}:
    get:
      tags:
      - Disruptions
      summary: View all disruptions for a particular stop
      operationId: Disruptions_GetDisruptionsByStop
      parameters:
      - name: stop_id
        in: path
        description: Identifier of stop; values returned by Stops API - v3/stops
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: disruption_status
        in: query
        description: Filter by status of disruption
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - current
          - planned
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All disruption information (if any exists) for the specified
            stop.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/disruptions/{disruption_id}:
    get:
      tags:
      - Disruptions
      summary: View a specific disruption
      operationId: Disruptions_GetDisruptionById
      parameters:
      - name: disruption_id
        in: path
        description: "Identifier of disruption; values returned by Disruptions API\
          \ - /v3/disruptions OR /v3/disruptions/route/{route_id}"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Disruption information for the specified disruption ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/disruptions/modes:
    get:
      tags:
      - Disruptions
      summary: Get all disruption modes
      operationId: Disruptions_GetDisruptionModes
      parameters:
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Disruption specific modes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionModesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.DisruptionModesResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.DisruptionModesResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Disruptions
  /v3/fare_estimate/min_zone/{minZone}/max_zone/{maxZone}:
    get:
      tags:
      - FareEstimate
      summary: Estimate a fare by zone
      operationId: FareEstimate_GetFareEstimateByZone
      parameters:
      - name: minZone
        in: path
        description: Minimum Zone travelled through ie. 1
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: maxZone
        in: path
        description: Maximum Zone travelled through id. 6
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: journey_touch_on_utc
        in: query
        description: JourneyTouchOnUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: journey_touch_off_utc
        in: query
        description: JourneyTouchOffUtc in format yyyy-M-d h:m (e.g 2016-5-31 16:53).
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: is_journey_in_free_tram_zone
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: travelled_route_types
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Resultant set fare estimates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.FareEstimateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.FareEstimateResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.FareEstimateResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: FareEstimate
  /v3/outlets:
    get:
      tags:
      - Outlets
      summary: List all ticket outlets
      operationId: Outlets_GetAllOutlets
      parameters:
      - name: max_results
        in: query
        description: Maximum number of results returned (default = 30)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Ticket outlets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.OutletResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.OutletResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.OutletResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Outlets
  /v3/outlets/location/{latitude},{longitude}:
    get:
      tags:
      - Outlets
      summary: List ticket outlets near a specific location
      operationId: Outlets_GetOutletsByGeolocation
      parameters:
      - name: latitude
        in: path
        description: Geographic coordinate of latitude
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      - name: longitude
        in: path
        description: Geographic coordinate of longitude
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      - name: max_distance
        in: query
        description: Filter by maximum distance (in metres) from location specified
          via latitude and longitude parameters (default = 300)
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: max_results
        in: query
        description: Maximum number of results returned (default = 30)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Ticket outlets near the specified location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.OutletGeolocationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.OutletGeolocationResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.OutletGeolocationResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Outlets
  /v3/pattern/run/{run_ref}/route_type/{route_type}:
    get:
      tags:
      - Patterns
      summary: View the stopping pattern for a specific trip/service run
      operationId: Patterns_GetPatternByRun
      parameters:
      - name: run_ref
        in: path
        description: "The run_ref is the identifier of a run as returned by the departures/*\
          \ and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
          \ VehicleDescriptor and None. Default is Disruption. Run must be expanded\
          \ to receive VehiclePosition and VehicleDescriptor information."
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: stop_id
        in: query
        description: Filter by stop_id; values returned by Stops API
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: date_utc
        in: query
        description: Filter by the date and time of the request (ISO 8601 UTC format)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: include_skipped_stops
        in: query
        description: Include any skipped stops in a stopping pattern. Defaults to
          false.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: include_geopath
        in: query
        description: Indicates if geopath data will be returned (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "The stopping pattern of the specified run_ref and route type.\
            \ (NOTE: the departure sequence field should be used to sort departures\
            \ in chronological order, however it is not always N+1 or N-1 of the previous\
            \ or following departure. e.g 100, 200, 250, 300 instead of 1, 2, 3, 4)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.StoppingPattern'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.StoppingPattern'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.StoppingPattern'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Patterns
  /v3/routes:
    get:
      tags:
      - Routes
      summary: View route names and numbers for all routes
      operationId: Routes_OneOrMoreRoutes
      parameters:
      - name: route_types
        in: query
        description: Filter by route_type; values returned via RouteTypes API
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      - name: route_name
        in: query
        description: Filter by name  of route (accepts partial route name matches)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Route names and numbers for all routes of all route types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Routes
  /v3/routes/{route_id}:
    get:
      tags:
      - Routes
      summary: View route name and number for specific route ID
      operationId: Routes_RouteFromId
      parameters:
      - name: route_id
        in: path
        description: "Identifier of route; values returned by Departures, Directions\
          \ and Disruptions APIs"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: include_geopath
        in: query
        description: Indicates kif geopath data will be returned (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: geopath_utc
        in: query
        description: Filter geopaths by date (ISO 8601 UTC format) (default = current
          date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The route name and number for the specified route ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RouteResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Routes
  /v3/route_types:
    get:
      tags:
      - RouteTypes
      summary: View all route types and their names
      operationId: RouteTypes_GetRouteTypes
      parameters:
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All route types (i.e. identifiers of transport modes) and their
            names.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RouteTypesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RouteTypesResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RouteTypesResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: RouteTypes
  /v3/runs/route/{route_id}:
    get:
      tags:
      - Runs
      summary: View all trip/service runs for a specific route ID
      operationId: Runs_ForRoute
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, VehiclePosition, VehicleDescriptor, or None. Default is\
          \ None."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: date_utc
        in: query
        description: Date of the request. (optional - defaults to now)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All trip/service run details for the specified route ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Runs
  /v3/runs/route/{route_id}/route_type/{route_type}:
    get:
      tags:
      - Runs
      summary: View all trip/service runs for a specific route ID and route type
      operationId: Runs_ForRouteAndRouteType
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, VehiclePosition, VehicleDescriptor, or None. Default is\
          \ All."
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: date_utc
        in: query
        description: Date of the request. (optional - defaults to now)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All trip/service run details for the specified route ID and
            route type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Runs
  /v3/runs/{run_ref}:
    get:
      tags:
      - Runs
      summary: View all trip/service runs for a specific run_ref
      operationId: Runs_ForRun
      parameters:
      - name: run_ref
        in: path
        description: "The run_ref is the identifier of a run as returned by the departures/*\
          \ and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, VehiclePosition, VehicleDescriptor, or None. Default is\
          \ None."
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: date_utc
        in: query
        description: Date of the request. (optional - defaults to now)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: include_geopath
        in: query
        description: Indicates if geopath data will be returned (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All trip/service run details for the specified run_ref.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RunsResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Runs
  /v3/runs/{run_ref}/route_type/{route_type}:
    get:
      tags:
      - Runs
      summary: View the trip/service run for a specific run_ref and route type
      operationId: Runs_ForRunAndRouteType
      parameters:
      - name: run_ref
        in: path
        description: "The run_ref is the identifier of a run as returned by the departures/*\
          \ and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: expand
        in: query
        description: "List of objects to be returned in full (i.e. expanded) - options\
          \ include: All, VehiclePosition, VehicleDescriptor, or None. Default is\
          \ None."
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - All
            - VehicleDescriptor
            - VehiclePosition
            - None
      - name: date_utc
        in: query
        description: Date of the request. (optional - defaults to now)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: include_geopath
        in: query
        description: Indicates if geopath data will be returned (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The trip/service run details for the run_ref and route type
            specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.RunResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.RunResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.RunResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Runs
  /v3/search/{search_term}:
    get:
      tags:
      - Search
      summary: "View stops, routes and myki ticket outlets that match the search term"
      operationId: Search_Search
      parameters:
      - name: search_term
        in: path
        description: "Search text (note: if search text is numeric and/or less than\
          \ 3 characters, the API will only return routes)"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: route_types
        in: query
        description: "Filter by route_type; values returned via RouteTypes API (note:\
          \ stops and routes are ordered by route_types specified)"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      - name: latitude
        in: query
        description: Filter by geographic coordinate of latitude
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: longitude
        in: query
        description: Filter by geographic coordinate of longitude
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: max_distance
        in: query
        description: Filter by maximum distance (in metres) from location specified
          via latitude and longitude parameters
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
      - name: include_addresses
        in: query
        description: Placeholder for future development; currently unavailable
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: include_outlets
        in: query
        description: Indicates if outlets will be returned in response (default =
          true)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: match_stop_by_suburb
        in: query
        description: Indicates whether to find stops by suburbs in the search term
          (default = true)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: match_route_by_suburb
        in: query
        description: Indicates whether to find routes by suburbs in the search term
          (default = true)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: match_stop_by_gtfs_stop_id
        in: query
        description: Indicates whether to search for stops according to a metlink
          stop ID (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "Stops, routes and myki ticket outlets that contain the search\
            \ term (note: stops and routes are ordered by route_type by default)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.SearchResult'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.SearchResult'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Search
  /v3/stops/{stop_id}/route_type/{route_type}:
    get:
      tags:
      - Stops
      summary: View facilities at a specific stop (Metro and V/Line stations only)
      operationId: Stops_StopDetails
      parameters:
      - name: stop_id
        in: path
        description: Identifier of stop; values returned by Stops API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: stop_location
        in: query
        description: Indicates if stop location information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_amenities
        in: query
        description: Indicates if stop amenity information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_accessibility
        in: query
        description: Indicates if stop accessibility information will be returned
          (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_contact
        in: query
        description: Indicates if stop contact information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_ticket
        in: query
        description: Indicates if stop ticket information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: gtfs
        in: query
        description: Incdicates whether the stop_id is a GTFS ID or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_staffing
        in: query
        description: Indicates if stop staffing information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: stop_disruptions
        in: query
        description: Indicates if stop disruption information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "Stop location, amenity and accessibility facility information\
            \ for the specified stop (metropolitan and V/Line stations only)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.StopResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.StopResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.StopResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Stops
  /v3/stops/route/{route_id}/route_type/{route_type}:
    get:
      tags:
      - Stops
      summary: View all stops on a specific route
      operationId: Stops_StopsForRoute
      parameters:
      - name: route_id
        in: path
        description: Identifier of route; values returned by Routes API - v3/routes
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: route_type
        in: path
        description: Number identifying transport mode; values returned via RouteTypes
          API
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      - name: direction_id
        in: query
        description: "An optional direction; values returned by Directions API. When\
          \ this is set, stop sequence information is returned in the response."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: stop_disruptions
        in: query
        description: Indicates if stop disruption information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: include_geopath
        in: query
        description: Indicates if geopath data will be returned (default = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: geopath_utc
        in: query
        description: Filter geopaths by date (ISO 8601 UTC format) (default = current
          date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All stops on the specified route.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.StopsOnRouteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.StopsOnRouteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.StopsOnRouteResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Stops
  /v3/stops/location/{latitude},{longitude}:
    get:
      tags:
      - Stops
      summary: View all stops near a specific location
      operationId: Stops_StopsByGeolocation
      parameters:
      - name: latitude
        in: path
        description: Geographic coordinate of latitude
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      - name: longitude
        in: path
        description: Geographic coordinate of longitude
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: float
      - name: route_types
        in: query
        description: Filter by route_type; values returned via RouteTypes API
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
      - name: max_results
        in: query
        description: Maximum number of results returned (default = 30)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: max_distance
        in: query
        description: Filter by maximum distance (in metres) from location specified
          via latitude and longitude parameters (default = 300)
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: stop_disruptions
        in: query
        description: Indicates if stop disruption information will be returned (default
          = false)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: token
        in: query
        description: Please ignore
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: devid
        in: query
        description: Your developer id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: signature
        in: query
        description: Authentication signature for request
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: All stops near the specified location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.StopsByDistanceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.StopsByDistanceResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.StopsByDistanceResponse'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
        "403":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/V3.ErrorResponse'
      x-swagger-router-controller: Stops
components:
  schemas:
    V3.Status:
      type: object
      properties:
        version:
          type: string
          description: API Version number
        health:
          type: integer
          description: "API system health status (0=offline, 1=online)"
          format: int32
          enum:
          - 0
          - 1
      example:
        health: 6
        version: version
    V3.ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
        status:
          $ref: '#/components/schemas/V3.Status'
      description: An error response
    V3.DeparturesBroadParameters:
      type: object
      properties:
        platform_numbers:
          type: array
          description: Filter by platform number at stop
          items:
            type: integer
            format: int32
        direction_id:
          type: integer
          description: "Filter by identifier of direction of travel; values returned\
            \ by Directions API - /v3/directions/route/{route_id}"
          format: int32
        gtfs:
          type: boolean
          description: Indicates that stop_id parameter will accept "GTFS stop_id"
            data
        date_utc:
          type: string
          description: Filter by the date and time of the request (ISO 8601 UTC format)
            (default = current date and time)
          format: date-time
        max_results:
          type: integer
          description: Maximum number of results returned
          format: int32
        include_cancelled:
          type: boolean
          description: Indicates if cancelled services (if they exist) are returned
            (default = false) - metropolitan train only
        look_backwards:
          type: boolean
          description: Indicates if filtering runs (and their departures) to those
            that arrive at destination before date_utc (default = false). Requires
            max_results &gt; 0.
        expand:
          type: array
          description: "List of objects to be returned in full (i.e. expanded) - options\
            \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
            \ VehicleDescriptor or None.\r\nRun must be expanded to receive VehiclePosition\
            \ and VehicleDescriptor information."
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
        include_geopath:
          type: boolean
          description: Indicates if the route geopath should be returned
    V3.DeparturesResponse:
      type: object
      properties:
        departures:
          type: array
          description: Timetabled and real-time service departures
          items:
            $ref: '#/components/schemas/V3.Departure'
        stops:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.StopModel'
          description: "A train station, tram stop, bus stop, regional coach stop\
            \ or Night Bus stop"
        routes:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: "Train lines, tram routes, bus routes, regional coach routes,\
            \ Night Bus routes"
        runs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Run'
          description: Individual trips/services of a route
        directions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Direction'
          description: Directions of travel of route
        disruptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Disruption'
          description: Disruption information applicable to relevant routes or stops
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        routes:
          key: {}
        directions:
          key:
            direction_id: 9
            route_id: 6
            route_type: 3
            direction_name: direction_name
        disruptions:
          key:
            last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
        stops:
          key:
            stop_longitude: 4.145608
            stop_sequence: 7
            stop_id: 9
            route_type: 3
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 7.0614014
            stop_name: stop_name
            stop_latitude: 2.027123
        departures:
        - scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
          direction_id: 5
          route_id: 6
          run_id: 1
          estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
          departure_sequence: 2
          stop_id: 0
          run_ref: run_ref
          platform_number: platform_number
          flags: flags
          disruption_ids:
          - 5
          - 5
          at_platform: true
        - scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
          direction_id: 5
          route_id: 6
          run_id: 1
          estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
          departure_sequence: 2
          stop_id: 0
          run_ref: run_ref
          platform_number: platform_number
          flags: flags
          disruption_ids:
          - 5
          - 5
          at_platform: true
        runs:
          key:
            run_id: 1
            route_id: 1
            final_stop_id: 6
            destination_name: destination_name
            vehicle_descriptor:
              low_floor: true
              air_conditioned: true
              supplier: supplier
              length: length
              description: description
              id: id
              operator: operator
            run_sequence: 1
            direction_id: 7
            run_ref: run_ref
            route_type: 1
            vehicle_position:
              easting: 9.3693102714106686335071572102606296539306640625
              bearing: 8.7620420127490010742121739895083010196685791015625
              datetime_utc: 2000-01-23T04:56:07.000+00:00
              latitude: 5.02500479152029466689555192715488374233245849609375
              supplier: supplier
              expiry_time: 2000-01-23T04:56:07.000+00:00
              northing: 6.683562403749608193948006373830139636993408203125
              longitude: 9.965781217890562260208753286860883235931396484375
              direction: direction
            express_stop_count: 4
            geopath:
            - {}
            - {}
            status: status
        status:
          health: 6
          version: version
    V3.Departure:
      type: object
      properties:
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        route_id:
          type: integer
          description: Route identifier
          format: int32
        run_id:
          type: integer
          description: Numeric trip/service run identifier. Defaults to -1 when run
            identifier is Alphanumeric
          format: int32
          readOnly: true
        run_ref:
          type: string
          description: Alphanumeric trip/service run identifier
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        disruption_ids:
          type: array
          description: Disruption information identifier(s)
          items:
            type: integer
            format: int64
        scheduled_departure_utc:
          type: string
          description: Scheduled (i.e. timetabled) departure time and date in ISO
            8601 UTC format
          format: date-time
        estimated_departure_utc:
          type: string
          description: Real-time estimate of departure time and date in ISO 8601 UTC
            format
          format: date-time
        at_platform:
          type: boolean
          description: Indicates if the metropolitan train service is at the platform
            at the time of query; returns false for other modes
        platform_number:
          type: string
          description: Platform number at stop (metropolitan train only; returns null
            for other modes)
        flags:
          type: string
          description: "Flag indicating special condition for run (e.g. RR Reservations\
            \ Required, GC Guaranteed Connection, DOO Drop Off Only, PUO Pick Up Only,\
            \ MO Mondays only, TU Tuesdays only, WE Wednesdays only, TH Thursdays\
            \ only, FR Fridays only, SS School days only; ignore E flag)"
        departure_sequence:
          type: integer
          description: "Chronological sequence for the departures in a run. Order\
            \ ascendingly by this field to get chronological order (earliest first)\
            \ of departures with the same run_ref. NOTE, this field is not always\
            \ N+1 or N-1 of the previous or following departure. e.g 100, 200, 250,\
            \ 300 instead of 1, 2, 3, 4"
          format: int32
      example:
        scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
        direction_id: 5
        route_id: 6
        run_id: 1
        estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
        departure_sequence: 2
        stop_id: 0
        run_ref: run_ref
        platform_number: platform_number
        flags: flags
        disruption_ids:
        - 5
        - 5
        at_platform: true
    V3.StopModel:
      type: object
      properties:
        stop_distance:
          type: number
          description: Distance of stop from input location (in metres); returns 0
            if no location is input
          format: float
        stop_suburb:
          type: string
          description: suburb of stop
        stop_name:
          type: string
          description: Name of stop
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
        stop_sequence:
          type: integer
          description: Sequence of the stop on the route/run; return 0 when route_id
            or run_id not specified. Order ascendingly by this field (when non zero)
            to get physical order (earliest first) of stops on the route_id/run_id.
          format: int32
      example:
        stop_longitude: 4.145608
        stop_sequence: 7
        stop_id: 9
        route_type: 3
        stop_landmark: stop_landmark
        stop_suburb: stop_suburb
        stop_distance: 7.0614014
        stop_name: stop_name
        stop_latitude: 2.027123
    V3.Run:
      type: object
      properties:
        run_id:
          type: integer
          description: Numeric trip/service run identifier. Defaults to -1 when run
            identifier is Alphanumeric
          format: int32
          readOnly: true
        run_ref:
          type: string
          description: Alphanumeric trip/service run identifier
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        final_stop_id:
          type: integer
          description: stop_id of final stop of run
          format: int32
        destination_name:
          type: string
          description: Name of destination of run
        status:
          type: string
          description: Status of metropolitan train run; returns "scheduled" for other
            modes
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        run_sequence:
          type: integer
          description: Chronological sequence of the trip/service run on the route
            in direction. Order ascendingly by this field to get chronological order
            (earliest first) of runs with the same route_id and direction_id.
          format: int32
        express_stop_count:
          type: integer
          description: The number of remaining skipped/express stations for the run/service
            from a stop
          format: int32
        vehicle_position:
          $ref: '#/components/schemas/V3.VehiclePosition'
        vehicle_descriptor:
          $ref: '#/components/schemas/V3.VehicleDescriptor'
        geopath:
          type: array
          description: Geopath of the route
          items:
            type: object
            properties: {}
            example: {}
      example:
        run_id: 1
        route_id: 1
        final_stop_id: 6
        destination_name: destination_name
        vehicle_descriptor:
          low_floor: true
          air_conditioned: true
          supplier: supplier
          length: length
          description: description
          id: id
          operator: operator
        run_sequence: 1
        direction_id: 7
        run_ref: run_ref
        route_type: 1
        vehicle_position:
          easting: 9.3693102714106686335071572102606296539306640625
          bearing: 8.7620420127490010742121739895083010196685791015625
          datetime_utc: 2000-01-23T04:56:07.000+00:00
          latitude: 5.02500479152029466689555192715488374233245849609375
          supplier: supplier
          expiry_time: 2000-01-23T04:56:07.000+00:00
          northing: 6.683562403749608193948006373830139636993408203125
          longitude: 9.965781217890562260208753286860883235931396484375
          direction: direction
        express_stop_count: 4
        geopath:
        - {}
        - {}
        status: status
    V3.Direction:
      type: object
      properties:
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        direction_name:
          type: string
          description: Name of direction of travel
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
      example:
        direction_id: 9
        route_id: 6
        route_type: 3
        direction_name: direction_name
    V3.Disruption:
      type: object
      properties:
        disruption_id:
          type: integer
          description: Disruption information identifier
          format: int64
        title:
          type: string
          description: Headline title summarising disruption information
        url:
          type: string
          description: URL of relevant article on PTV website
        description:
          type: string
          description: Description of the disruption
        disruption_status:
          type: string
          description: "Status of the disruption (e.g. \"Planned\", \"Current\")"
        disruption_type:
          type: string
          description: Type of disruption
        published_on:
          type: string
          description: "Date and time disruption information is published on PTV website,\
            \ in ISO 8601 UTC format"
          format: date-time
        last_updated:
          type: string
          description: "Date and time disruption information was last updated by PTV,\
            \ in ISO 8601 UTC format"
          format: date-time
        from_date:
          type: string
          description: "Date and time at which disruption begins, in ISO 8601 UTC\
            \ format"
          format: date-time
        to_date:
          type: string
          description: "Date and time at which disruption ends, in ISO 8601 UTC format\
            \ (returns null if unknown)"
          format: date-time
        routes:
          type: array
          description: Route relevant to a disruption (if applicable)
          items:
            $ref: '#/components/schemas/V3.DisruptionRoute'
        stops:
          type: array
          description: Stop relevant to a disruption (if applicable)
          items:
            $ref: '#/components/schemas/V3.DisruptionStop'
        colour:
          type: string
        display_on_board:
          type: boolean
        display_status:
          type: boolean
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        from_date: 2000-01-23T04:56:07.000+00:00
        disruption_type: disruption_type
        published_on: 2000-01-23T04:56:07.000+00:00
        description: description
        display_on_board: true
        title: title
        url: url
        routes:
        - route_id: 2
          route_name: route_name
          route_type: 1
          route_number: route_number
          route_gtfs_id: route_gtfs_id
          direction:
            service_time: service_time
            direction_id: 6
            direction_name: direction_name
            route_direction_id: 6
        - route_id: 2
          route_name: route_name
          route_type: 1
          route_number: route_number
          route_gtfs_id: route_gtfs_id
          direction:
            service_time: service_time
            direction_id: 6
            direction_name: direction_name
            route_direction_id: 6
        disruption_id: 6
        colour: colour
        to_date: 2000-01-23T04:56:07.000+00:00
        disruption_status: disruption_status
        stops:
        - stop_id: 5
          stop_name: stop_name
        - stop_id: 5
          stop_name: stop_name
        display_status: true
    V3.VehiclePosition:
      type: object
      properties:
        latitude:
          type: number
          description: "Geographic coordinate of latitude of the vehicle when known.\
            \ May be null.\r\nOnly available for some bus runs."
          format: double
        longitude:
          type: number
          description: "Geographic coordinate of longitude of the vehicle when known.\
            \ \r\nOnly available for some bus runs."
          format: double
        easting:
          type: number
          description: CIS - Metro Train Vehicle Location Easting coordinate
          format: double
        northing:
          type: number
          description: CIS - Metro Train Vehicle Location Northing coordinate
          format: double
        direction:
          type: string
          description: CIS - Metro Train Vehicle Location Direction
        bearing:
          type: number
          description: "Compass bearing of the vehicle when known, clockwise from\
            \ True North, i.e., 0 is North and 90 is East. May be null.\r\nOnly available\
            \ for some bus runs."
          format: double
        supplier:
          type: string
          description: Supplier of vehicle position data.
        datetime_utc:
          type: string
          description: Date and time that the vehicle position data was supplied.
          format: date-time
        expiry_time:
          type: string
          description: CIS - Metro Train Vehicle Location data expiry time
          format: date-time
      example:
        easting: 9.3693102714106686335071572102606296539306640625
        bearing: 8.7620420127490010742121739895083010196685791015625
        datetime_utc: 2000-01-23T04:56:07.000+00:00
        latitude: 5.02500479152029466689555192715488374233245849609375
        supplier: supplier
        expiry_time: 2000-01-23T04:56:07.000+00:00
        northing: 6.683562403749608193948006373830139636993408203125
        longitude: 9.965781217890562260208753286860883235931396484375
        direction: direction
    V3.VehicleDescriptor:
      type: object
      properties:
        operator:
          type: string
          description: "Operator name of the vehicle such as \"Metro Trains Melbourne\"\
            , \"Yarra Trams\", \"Ventura Bus Line\", \"CDC\" or \"Sita Bus Lines\"\
            \ . May be null/empty.\r\nOnly available for train, tram, v/line and some\
            \ bus runs."
        id:
          type: string
          description: Operator identifier of the vehicle such as "26094". May be
            null/empty. Only available for some tram and bus runs.
        low_floor:
          type: boolean
          description: Indicator if vehicle has a low floor. May be null. Only available
            for some tram runs.
        air_conditioned:
          type: boolean
          description: Indicator if vehicle is air conditioned. May be null. Only
            available for some tram runs.
        description:
          type: string
          description: "Vehicle description such as \"6 Car Comeng\", \"6 Car Xtrapolis\"\
            , \"3 Car Comeng\", \"6 Car Siemens\", \"3 Car Siemens\". May be null/empty.\r\
            \nOnly available for some metropolitan train runs."
        supplier:
          type: string
          description: Supplier of vehicle descriptor data.
        length:
          type: string
          description: The length of the vehicle. Applies to CIS - Metro Trains
      example:
        low_floor: true
        air_conditioned: true
        supplier: supplier
        length: length
        description: description
        id: id
        operator: operator
    V3.DisruptionRoute:
      type: object
      properties:
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_name:
          type: string
          description: Name of route
        route_number:
          type: string
          description: Route number presented to public (i.e. not route_id)
        route_gtfs_id:
          type: string
          description: GTFS Identifer of the route
        direction:
          $ref: '#/components/schemas/V3.DisruptionDirection'
      example:
        route_id: 2
        route_name: route_name
        route_type: 1
        route_number: route_number
        route_gtfs_id: route_gtfs_id
        direction:
          service_time: service_time
          direction_id: 6
          direction_name: direction_name
          route_direction_id: 6
    V3.DisruptionStop:
      type: object
      properties:
        stop_id:
          type: integer
          format: int32
        stop_name:
          type: string
      example:
        stop_id: 5
        stop_name: stop_name
    V3.DisruptionDirection:
      type: object
      properties:
        route_direction_id:
          type: integer
          description: Route and direction of travel combination identifier
          format: int32
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        direction_name:
          type: string
          description: Name of direction of travel
        service_time:
          type: string
          description: "Time of service to which disruption applies, in 24 hour clock\
            \ format (HH:MM:SS) AEDT/AEST; returns null if disruption applies to multiple\
            \ (or no) services"
      example:
        service_time: service_time
        direction_id: 6
        direction_name: direction_name
        route_direction_id: 6
    V3.DeparturesSpecificParameters:
      type: object
      properties:
        direction_id:
          type: integer
          description: "Filter by identifier of direction of travel; values returned\
            \ by Directions API - /v3/directions/route/{route_id}"
          format: int32
        gtfs:
          type: boolean
          description: Indicates that stop_id parameter will accept "GTFS stop_id"
            data
        date_utc:
          type: string
          description: Filter by the date and time of the request (ISO 8601 UTC format)
            (default = current date and time)
          format: date-time
        max_results:
          type: integer
          description: Maximum number of results returned
          format: int32
        include_cancelled:
          type: boolean
          description: Indicates if cancelled services (if they exist) are returned
            (default = false) - metropolitan train only
        look_backwards:
          type: boolean
          description: Indicates if filtering runs (and their departures) to those
            that arrive at destination before date_utc (default = false). Requires
            max_results &gt; 0.
        expand:
          type: array
          description: "List of objects to be returned in full (i.e. expanded) - options\
            \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
            \ VehicleDescriptor or None.\r\nRun must be expanded to receive VehiclePosition\
            \ and VehicleDescriptor information."
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
        include_geopath:
          type: boolean
          description: Indicates if the route geopath should be returned
    V3.RouteDeparturesSpecificParameters:
      type: object
      properties:
        train_scheduled_timetables:
          type: boolean
          description: DEPRECATED - use `scheduled_timetables` instead
        scheduled_timetables:
          type: boolean
          description: "When set to true, all timetable information returned by Chronos\
            \ will be sourced from the scheduled timetables,\r\nwhile when set to\
            \ false (default state), the operational timetables will be used where\
            \ available."
        date_utc:
          type: string
          description: Filter by the date and time of the request (ISO 8601 UTC format)
            (default = current date and time)
          format: date-time
        max_results:
          type: integer
          description: Maximum number of results returned
          format: int32
        include_cancelled:
          type: boolean
          description: Indicates if cancelled services (if they exist) are returned
            (default = false) - metropolitan train only
        look_backwards:
          type: boolean
          description: Indicates if filtering runs (and their departures) to those
            that arrive at destination before date_utc (default = false). Requires
            max_results &gt; 0.
        expand:
          type: array
          description: "List of objects to be returned in full (i.e. expanded) - options\
            \ include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition,\
            \ VehicleDescriptor or None.\r\nRun must be expanded to receive VehiclePosition\
            \ and VehicleDescriptor information."
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
        include_geopath:
          type: boolean
          description: Indicates if the route geopath should be returned
    V3.BulkDeparturesRequest:
      required:
      - requests
      type: object
      properties:
        requests:
          type: array
          description: Collection of departure requests
          items:
            $ref: '#/components/schemas/V3.StopDepartureRequest'
        date_utc:
          type: string
          description: Filter by the date and time of the request (ISO 8601 UTC format)
            (default = current date and time)
          format: date-time
        look_backwards:
          type: boolean
          description: Indicates if filtering runs (and their departures) to those
            that arrive at destination before date_utc (default = false). Requires
            max_results &gt; 0.
        include_cancelled:
          type: boolean
          description: Indicates if cancelled services (if they exist) are returned
            (default = false) - metropolitan train only
        include_geopath:
          type: boolean
          description: Indicates if the route geopath should be returned
        expand:
          type: array
          description: "List objects to be returned in full (i.e. expanded) - options\
            \ include: all, stop, route, run, direction, disruption, none"
          items:
            type: string
            enum:
            - All
            - Stop
            - Route
            - Run
            - Direction
            - Disruption
            - VehicleDescriptor
            - VehiclePosition
            - None
    V3.StopDepartureRequest:
      required:
      - route_directions
      type: object
      properties:
        route_type:
          type: integer
          description: Number identifying transport mode; values returned via RouteTypes
            API
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        stop_id:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Identifier of stop; values returned by Stops API
          format: int32
        max_results:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Maximum number of results returned
          format: int32
        gtfs:
          type: boolean
          description: "Indicates that stop_id parameter will accept \"GTFS stop_id\"\
            \ data and route_directions[x].route_id parameters will accept route_gtfs_id\
            \ data"
        route_directions:
          type: array
          description: The route directions to find departures for at this stop.
          items:
            $ref: '#/components/schemas/V3.StopDepartureRequestRouteDirection'
    V3.StopDepartureRequestRouteDirection:
      required:
      - direction_name
      type: object
      properties:
        route_id:
          type: string
          description: Identifier of route; values returned by Routes API - v3/routes
        direction_id:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Direction of travel identifier; values returned by Directions
            API - v3/directions
          format: int32
        direction_name:
          type: string
          description: Name of direction of travel; values returned by Directions
            API - v3/directions
    V3.BulkDeparturesResponse:
      type: object
      properties:
        responses:
          type: array
          description: Contains departures for the requested stop and route(s). It
            includes details as to the route_direction and whether it is still valid.
          items:
            $ref: '#/components/schemas/V3.BulkDeparturesUpdateResponse'
        stops:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.BulkDeparturesStopResponse'
          description: "A train station, tram stop, bus stop, regional coach stop\
            \ or Night Bus stop"
        routes:
          type: array
          description: "Train lines, tram routes, bus routes, regional coach routes,\
            \ Night Bus routes"
          items:
            type: object
            properties: {}
        runs:
          type: array
          description: Individual trips/services of a route
          items:
            $ref: '#/components/schemas/V3.Run'
        directions:
          type: array
          description: Directions of travel of route
          items:
            $ref: '#/components/schemas/V3.Direction'
        disruptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Disruption'
          description: Disruption information applicable to relevant routes or stops
        status:
          $ref: '#/components/schemas/V3.Status'
    V3.BulkDeparturesUpdateResponse:
      type: object
      properties:
        departures:
          type: array
          description: Timetabled and real-time service departures
          items:
            $ref: '#/components/schemas/V3.Departure'
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        requested_route_direction:
          $ref: '#/components/schemas/V3.BulkDeparturesRouteDirectionResponse'
        route_direction_status:
          type: integer
          description: "The status of the route direction (changed | unchanged).\r\
            \nIf changed, requests should change the requested_route_direction for\
            \ the route_direction supplied."
          format: int32
          enum:
          - 0
          - 1
        route_direction:
          $ref: '#/components/schemas/V3.BulkDeparturesRouteDirectionResponse'
    V3.BulkDeparturesStopResponse:
      type: object
      properties:
        stop_name:
          type: string
          description: Name of stop
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_suburb:
          type: string
          description: suburb of stop
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
    V3.BulkDeparturesRouteDirectionResponse:
      type: object
      properties:
        route_id:
          type: string
          description: Route identifier
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        direction_name:
          type: string
          description: Name of direction of travel
    V3.DirectionsResponse:
      type: object
      properties:
        directions:
          type: array
          description: Directions of travel of route
          items:
            $ref: '#/components/schemas/V3.DirectionWithDescription'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        directions:
        - direction_id: 0
          route_id: 6
          route_type: 1
          direction_name: direction_name
          route_direction_description: route_direction_description
        - direction_id: 0
          route_id: 6
          route_type: 1
          direction_name: direction_name
          route_direction_description: route_direction_description
        status:
          health: 6
          version: version
    V3.DirectionWithDescription:
      type: object
      properties:
        route_direction_description:
          type: string
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        direction_name:
          type: string
          description: Name of direction of travel
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
      example:
        direction_id: 0
        route_id: 6
        route_type: 1
        direction_name: direction_name
        route_direction_description: route_direction_description
    V3.DisruptionsResponse:
      type: object
      properties:
        disruptions:
          $ref: '#/components/schemas/V3.Disruptions'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        disruptions:
          metro_bus:
          - null
          - null
          skybus:
          - null
          - null
          metro_train:
          - null
          - null
          regional_coach:
          - null
          - null
          regional_bus:
          - null
          - null
          taxi:
          - null
          - null
          regional_train:
          - null
          - null
          general:
          - last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
          - last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
          night_bus:
          - null
          - null
          interstate_train:
          - null
          - null
          ferry:
          - null
          - null
          telebus:
          - null
          - null
          metro_tram:
          - null
          - null
          school_bus:
          - null
          - null
        status:
          health: 6
          version: version
    V3.Disruptions:
      type: object
      properties:
        general:
          type: array
          description: Subset of disruption information applicable to multiple route_types
          items:
            $ref: '#/components/schemas/V3.Disruption'
        metro_train:
          type: array
          description: Subset of disruption information applicable to metropolitan
            train
          items:
            $ref: '#/components/schemas/V3.Disruption'
        metro_tram:
          type: array
          description: Subset of disruption information applicable to metropolitan
            tram
          items:
            $ref: '#/components/schemas/V3.Disruption'
        metro_bus:
          type: array
          description: Subset of disruption information applicable to metropolitan
            bus
          items:
            $ref: '#/components/schemas/V3.Disruption'
        regional_train:
          type: array
          description: Subset of disruption information applicable to V/Line train
          items:
            $ref: '#/components/schemas/V3.Disruption'
        regional_coach:
          type: array
          description: Subset of disruption information applicable to V/Line coach
          items:
            $ref: '#/components/schemas/V3.Disruption'
        regional_bus:
          type: array
          description: Subset of disruption information applicable to regional bus
          items:
            $ref: '#/components/schemas/V3.Disruption'
        school_bus:
          type: array
          description: Subset of disruption information applicable to school bus
          items:
            $ref: '#/components/schemas/V3.Disruption'
        telebus:
          type: array
          description: Subset of disruption information applicable to telebus services
          items:
            $ref: '#/components/schemas/V3.Disruption'
        night_bus:
          type: array
          description: Subset of disruption information applicable to night bus
          items:
            $ref: '#/components/schemas/V3.Disruption'
        ferry:
          type: array
          description: Subset of disruption information applicable to ferry
          items:
            $ref: '#/components/schemas/V3.Disruption'
        interstate_train:
          type: array
          description: Subset of disruption information applicable to interstate train
          items:
            $ref: '#/components/schemas/V3.Disruption'
        skybus:
          type: array
          description: Subset of disruption information applicable to skybus
          items:
            $ref: '#/components/schemas/V3.Disruption'
        taxi:
          type: array
          description: Subset of disruption information applicable to taxi
          items:
            $ref: '#/components/schemas/V3.Disruption'
      example:
        metro_bus:
        - null
        - null
        skybus:
        - null
        - null
        metro_train:
        - null
        - null
        regional_coach:
        - null
        - null
        regional_bus:
        - null
        - null
        taxi:
        - null
        - null
        regional_train:
        - null
        - null
        general:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          from_date: 2000-01-23T04:56:07.000+00:00
          disruption_type: disruption_type
          published_on: 2000-01-23T04:56:07.000+00:00
          description: description
          display_on_board: true
          title: title
          url: url
          routes:
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          disruption_id: 6
          colour: colour
          to_date: 2000-01-23T04:56:07.000+00:00
          disruption_status: disruption_status
          stops:
          - stop_id: 5
            stop_name: stop_name
          - stop_id: 5
            stop_name: stop_name
          display_status: true
        - last_updated: 2000-01-23T04:56:07.000+00:00
          from_date: 2000-01-23T04:56:07.000+00:00
          disruption_type: disruption_type
          published_on: 2000-01-23T04:56:07.000+00:00
          description: description
          display_on_board: true
          title: title
          url: url
          routes:
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          disruption_id: 6
          colour: colour
          to_date: 2000-01-23T04:56:07.000+00:00
          disruption_status: disruption_status
          stops:
          - stop_id: 5
            stop_name: stop_name
          - stop_id: 5
            stop_name: stop_name
          display_status: true
        night_bus:
        - null
        - null
        interstate_train:
        - null
        - null
        ferry:
        - null
        - null
        telebus:
        - null
        - null
        metro_tram:
        - null
        - null
        school_bus:
        - null
        - null
    V3.DisruptionResponse:
      type: object
      properties:
        disruption:
          $ref: '#/components/schemas/V3.Disruption'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        disruption:
          last_updated: 2000-01-23T04:56:07.000+00:00
          from_date: 2000-01-23T04:56:07.000+00:00
          disruption_type: disruption_type
          published_on: 2000-01-23T04:56:07.000+00:00
          description: description
          display_on_board: true
          title: title
          url: url
          routes:
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          disruption_id: 6
          colour: colour
          to_date: 2000-01-23T04:56:07.000+00:00
          disruption_status: disruption_status
          stops:
          - stop_id: 5
            stop_name: stop_name
          - stop_id: 5
            stop_name: stop_name
          display_status: true
        status:
          health: 6
          version: version
    V3.StopBasic:
      type: object
      properties:
        stop_id:
          type: integer
          format: int32
        stop_name:
          type: string
    V3.DisruptionModesResponse:
      type: object
      properties:
        disruption_modes:
          type: array
          description: Transport mode identifiers
          items:
            $ref: '#/components/schemas/V3.DisruptionMode'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        disruption_modes:
        - disruption_mode_name: disruption_mode_name
          disruption_mode: 0
        - disruption_mode_name: disruption_mode_name
          disruption_mode: 0
        status:
          health: 6
          version: version
    V3.DisruptionMode:
      type: object
      properties:
        disruption_mode_name:
          type: string
          description: Name of disruption mode
        disruption_mode:
          type: integer
          description: Disruption mode identifier
          format: int32
      example:
        disruption_mode_name: disruption_mode_name
        disruption_mode: 0
    V3.StopTicket:
      type: object
      properties:
        ticket_type:
          type: string
          description: "Indicates the ticket type for the stop (myki, paper or both)"
        zone:
          type: string
          description: Description of the zone
        is_free_fare_zone:
          type: boolean
          description: Indicates whether the stop is inside the free fare zone
        ticket_machine:
          type: boolean
        ticket_checks:
          type: boolean
        vline_reservation:
          type: boolean
        ticket_zones:
          type: array
          items:
            type: integer
            format: int32
      example:
        ticket_type: ticket_type
        vline_reservation: true
        zone: zone
        ticket_machine: true
        ticket_zones:
        - 7
        - 7
        is_free_fare_zone: true
        ticket_checks: true
    V3.OutletParameters:
      type: object
      properties:
        max_results:
          type: integer
          description: Maximum number of results returned (default = 30)
          format: int32
    V3.OutletResponse:
      type: object
      properties:
        outlets:
          type: array
          description: myki ticket outlets
          items:
            $ref: '#/components/schemas/V3.Outlet'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        outlets:
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 1
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 6.0274563
          outlet_name: outlet_name
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 0.8008282
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 1
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 6.0274563
          outlet_name: outlet_name
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 0.8008282
        status:
          health: 6
          version: version
    V3.Outlet:
      type: object
      properties:
        outlet_slid_spid:
          type: string
          description: The SLID / SPID
        outlet_name:
          type: string
          description: The location name of the outlet
        outlet_business:
          type: string
          description: The business name of the outlet
        outlet_latitude:
          type: number
          description: Geographic coordinate of latitude at outlet
          format: float
        outlet_longitude:
          type: number
          description: Geographic coordinate of longitude at outlet
          format: float
        outlet_suburb:
          type: string
          description: The city/municipality the outlet is in
        outlet_postcode:
          type: integer
          description: The postcode for the outlet
          format: int32
        outlet_business_hour_mon:
          type: string
          description: The business hours on Monday
        outlet_business_hour_tue:
          type: string
          description: The business hours on Tuesday
        outlet_business_hour_wed:
          type: string
          description: The business hours on Wednesday
        outlet_business_hour_thur:
          type: string
          description: The business hours on Thursday
        outlet_business_hour_fri:
          type: string
          description: The business hours on Friday
        outlet_business_hour_sat:
          type: string
          description: The business hours on Saturday
        outlet_business_hour_sun:
          type: string
          description: The business hours on Sunday
        outlet_notes:
          type: string
          description: Any additional notes for the outlet such as 'Buy pre-loaded
            myki cards only'. May be null/empty.
      example:
        outlet_business_hour_thur: outlet_business_hour_thur
        outlet_postcode: 1
        outlet_business_hour_fri: outlet_business_hour_fri
        outlet_business_hour_wed: outlet_business_hour_wed
        outlet_suburb: outlet_suburb
        outlet_longitude: 6.0274563
        outlet_name: outlet_name
        outlet_business: outlet_business
        outlet_business_hour_mon: outlet_business_hour_mon
        outlet_business_hour_sun: outlet_business_hour_sun
        outlet_slid_spid: outlet_slid_spid
        outlet_business_hour_sat: outlet_business_hour_sat
        outlet_notes: outlet_notes
        outlet_business_hour_tue: outlet_business_hour_tue
        outlet_latitude: 0.8008282
    V3.OutletGeolocationParameters:
      type: object
      properties:
        max_distance:
          type: number
          description: Filter by maximum distance (in metres) from location specified
            via latitude and longitude parameters (default = 300)
          format: double
        max_results:
          type: integer
          description: Maximum number of results returned (default = 30)
          format: int32
    V3.OutletGeolocationResponse:
      type: object
      properties:
        outlets:
          type: array
          description: myki ticket outlets
          items:
            $ref: '#/components/schemas/V3.OutletGeolocation'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        outlets:
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 5
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 1.4658129
          outlet_name: outlet_name
          outlet_distance: 0.8008282
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 6.0274563
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 5
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 1.4658129
          outlet_name: outlet_name
          outlet_distance: 0.8008282
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 6.0274563
        status:
          health: 6
          version: version
    V3.OutletGeolocation:
      type: object
      properties:
        outlet_distance:
          type: number
          description: Distance of outlet from input location (in metres); returns
            0 if no location is input
          format: float
        outlet_slid_spid:
          type: string
          description: The SLID / SPID
        outlet_name:
          type: string
          description: The location name of the outlet
        outlet_business:
          type: string
          description: The business name of the outlet
        outlet_latitude:
          type: number
          description: Geographic coordinate of latitude at outlet
          format: float
        outlet_longitude:
          type: number
          description: Geographic coordinate of longitude at outlet
          format: float
        outlet_suburb:
          type: string
          description: The city/municipality the outlet is in
        outlet_postcode:
          type: integer
          description: The postcode for the outlet
          format: int32
        outlet_business_hour_mon:
          type: string
          description: The business hours on Monday
        outlet_business_hour_tue:
          type: string
          description: The business hours on Tuesday
        outlet_business_hour_wed:
          type: string
          description: The business hours on Wednesday
        outlet_business_hour_thur:
          type: string
          description: The business hours on Thursday
        outlet_business_hour_fri:
          type: string
          description: The business hours on Friday
        outlet_business_hour_sat:
          type: string
          description: The business hours on Saturday
        outlet_business_hour_sun:
          type: string
          description: The business hours on Sunday
        outlet_notes:
          type: string
          description: Any additional notes for the outlet such as 'Buy pre-loaded
            myki cards only'. May be null/empty.
      example:
        outlet_business_hour_thur: outlet_business_hour_thur
        outlet_postcode: 5
        outlet_business_hour_fri: outlet_business_hour_fri
        outlet_business_hour_wed: outlet_business_hour_wed
        outlet_suburb: outlet_suburb
        outlet_longitude: 1.4658129
        outlet_name: outlet_name
        outlet_distance: 0.8008282
        outlet_business: outlet_business
        outlet_business_hour_mon: outlet_business_hour_mon
        outlet_business_hour_sun: outlet_business_hour_sun
        outlet_slid_spid: outlet_slid_spid
        outlet_business_hour_sat: outlet_business_hour_sat
        outlet_notes: outlet_notes
        outlet_business_hour_tue: outlet_business_hour_tue
        outlet_latitude: 6.0274563
    V3.StoppingPattern:
      type: object
      properties:
        disruptions:
          type: array
          description: Disruption information applicable to relevant routes or stops
          items:
            $ref: '#/components/schemas/V3.Disruption'
        departures:
          type: array
          description: Timetabled and real-time service departures
          items:
            $ref: '#/components/schemas/V3.PatternDeparture'
        stops:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.StoppingPatternStop'
          description: "A train station, tram stop, bus stop, regional coach stop\
            \ or Night Bus stop"
        routes:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          description: "Train lines, tram routes, bus routes, regional coach routes,\
            \ Night Bus routes"
        runs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Run'
          description: Individual trips/services of a route
        directions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Direction'
          description: Directions of travel of route
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        routes:
          key: {}
        disruptions:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          from_date: 2000-01-23T04:56:07.000+00:00
          disruption_type: disruption_type
          published_on: 2000-01-23T04:56:07.000+00:00
          description: description
          display_on_board: true
          title: title
          url: url
          routes:
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          disruption_id: 6
          colour: colour
          to_date: 2000-01-23T04:56:07.000+00:00
          disruption_status: disruption_status
          stops:
          - stop_id: 5
            stop_name: stop_name
          - stop_id: 5
            stop_name: stop_name
          display_status: true
        - last_updated: 2000-01-23T04:56:07.000+00:00
          from_date: 2000-01-23T04:56:07.000+00:00
          disruption_type: disruption_type
          published_on: 2000-01-23T04:56:07.000+00:00
          description: description
          display_on_board: true
          title: title
          url: url
          routes:
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          - route_id: 2
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
            direction:
              service_time: service_time
              direction_id: 6
              direction_name: direction_name
              route_direction_id: 6
          disruption_id: 6
          colour: colour
          to_date: 2000-01-23T04:56:07.000+00:00
          disruption_status: disruption_status
          stops:
          - stop_id: 5
            stop_name: stop_name
          - stop_id: 5
            stop_name: stop_name
          display_status: true
        directions:
          key:
            direction_id: 9
            route_id: 6
            route_type: 3
            direction_name: direction_name
        stops:
          key:
            stop_ticket:
              ticket_type: ticket_type
              vline_reservation: true
              zone: zone
              ticket_machine: true
              ticket_zones:
              - 7
              - 7
              is_free_fare_zone: true
              ticket_checks: true
            stop_longitude: 7.386282
            stop_sequence: 1
            stop_id: 3
            route_type: 2
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 9.301444
            stop_name: stop_name
            stop_latitude: 4.145608
        departures:
        - route_id: 6
          run_id: 1
          estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
          departure_sequence: 2
          flags: flags
          skipped_stops:
          - stop_longitude: 4.145608
            stop_sequence: 7
            stop_id: 9
            route_type: 3
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 7.0614014
            stop_name: stop_name
            stop_latitude: 2.027123
          - stop_longitude: 4.145608
            stop_sequence: 7
            stop_id: 9
            route_type: 3
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 7.0614014
            stop_name: stop_name
            stop_latitude: 2.027123
          disruption_ids:
          - 5
          - 5
          at_platform: true
          scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
          direction_id: 5
          stop_id: 0
          run_ref: run_ref
          platform_number: platform_number
        - route_id: 6
          run_id: 1
          estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
          departure_sequence: 2
          flags: flags
          skipped_stops:
          - stop_longitude: 4.145608
            stop_sequence: 7
            stop_id: 9
            route_type: 3
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 7.0614014
            stop_name: stop_name
            stop_latitude: 2.027123
          - stop_longitude: 4.145608
            stop_sequence: 7
            stop_id: 9
            route_type: 3
            stop_landmark: stop_landmark
            stop_suburb: stop_suburb
            stop_distance: 7.0614014
            stop_name: stop_name
            stop_latitude: 2.027123
          disruption_ids:
          - 5
          - 5
          at_platform: true
          scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
          direction_id: 5
          stop_id: 0
          run_ref: run_ref
          platform_number: platform_number
        runs:
          key:
            run_id: 1
            route_id: 1
            final_stop_id: 6
            destination_name: destination_name
            vehicle_descriptor:
              low_floor: true
              air_conditioned: true
              supplier: supplier
              length: length
              description: description
              id: id
              operator: operator
            run_sequence: 1
            direction_id: 7
            run_ref: run_ref
            route_type: 1
            vehicle_position:
              easting: 9.3693102714106686335071572102606296539306640625
              bearing: 8.7620420127490010742121739895083010196685791015625
              datetime_utc: 2000-01-23T04:56:07.000+00:00
              latitude: 5.02500479152029466689555192715488374233245849609375
              supplier: supplier
              expiry_time: 2000-01-23T04:56:07.000+00:00
              northing: 6.683562403749608193948006373830139636993408203125
              longitude: 9.965781217890562260208753286860883235931396484375
              direction: direction
            express_stop_count: 4
            geopath:
            - {}
            - {}
            status: status
        status:
          health: 6
          version: version
    V3.PatternDeparture:
      type: object
      properties:
        skipped_stops:
          type: array
          description: The stops to be skipped following the current departure in
            order.
          items:
            $ref: '#/components/schemas/V3.StopModel'
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        route_id:
          type: integer
          description: Route identifier
          format: int32
        run_id:
          type: integer
          description: Numeric trip/service run identifier. Defaults to -1 when run
            identifier is Alphanumeric
          format: int32
          readOnly: true
        run_ref:
          type: string
          description: Alphanumeric trip/service run identifier
        direction_id:
          type: integer
          description: Direction of travel identifier
          format: int32
        disruption_ids:
          type: array
          description: Disruption information identifier(s)
          items:
            type: integer
            format: int64
        scheduled_departure_utc:
          type: string
          description: Scheduled (i.e. timetabled) departure time and date in ISO
            8601 UTC format
          format: date-time
        estimated_departure_utc:
          type: string
          description: Real-time estimate of departure time and date in ISO 8601 UTC
            format
          format: date-time
        at_platform:
          type: boolean
          description: Indicates if the metropolitan train service is at the platform
            at the time of query; returns false for other modes
        platform_number:
          type: string
          description: Platform number at stop (metropolitan train only; returns null
            for other modes)
        flags:
          type: string
          description: "Flag indicating special condition for run (e.g. RR Reservations\
            \ Required, GC Guaranteed Connection, DOO Drop Off Only, PUO Pick Up Only,\
            \ MO Mondays only, TU Tuesdays only, WE Wednesdays only, TH Thursdays\
            \ only, FR Fridays only, SS School days only; ignore E flag)"
        departure_sequence:
          type: integer
          description: "Chronological sequence for the departures in a run. Order\
            \ ascendingly by this field to get chronological order (earliest first)\
            \ of departures with the same run_ref. NOTE, this field is not always\
            \ N+1 or N-1 of the previous or following departure. e.g 100, 200, 250,\
            \ 300 instead of 1, 2, 3, 4"
          format: int32
      example:
        route_id: 6
        run_id: 1
        estimated_departure_utc: 2000-01-23T04:56:07.000+00:00
        departure_sequence: 2
        flags: flags
        skipped_stops:
        - stop_longitude: 4.145608
          stop_sequence: 7
          stop_id: 9
          route_type: 3
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          stop_distance: 7.0614014
          stop_name: stop_name
          stop_latitude: 2.027123
        - stop_longitude: 4.145608
          stop_sequence: 7
          stop_id: 9
          route_type: 3
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          stop_distance: 7.0614014
          stop_name: stop_name
          stop_latitude: 2.027123
        disruption_ids:
        - 5
        - 5
        at_platform: true
        scheduled_departure_utc: 2000-01-23T04:56:07.000+00:00
        direction_id: 5
        stop_id: 0
        run_ref: run_ref
        platform_number: platform_number
    V3.StoppingPatternStop:
      type: object
      properties:
        stop_ticket:
          $ref: '#/components/schemas/V3.StopTicket'
        stop_distance:
          type: number
          description: Distance of stop from input location (in metres); returns 0
            if no location is input
          format: float
        stop_suburb:
          type: string
          description: suburb of stop
        stop_name:
          type: string
          description: Name of stop
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
        stop_sequence:
          type: integer
          description: Sequence of the stop on the route/run; return 0 when route_id
            or run_id not specified. Order ascendingly by this field (when non zero)
            to get physical order (earliest first) of stops on the route_id/run_id.
          format: int32
      example:
        stop_ticket:
          ticket_type: ticket_type
          vline_reservation: true
          zone: zone
          ticket_machine: true
          ticket_zones:
          - 7
          - 7
          is_free_fare_zone: true
          ticket_checks: true
        stop_longitude: 7.386282
        stop_sequence: 1
        stop_id: 3
        route_type: 2
        stop_landmark: stop_landmark
        stop_suburb: stop_suburb
        stop_distance: 9.301444
        stop_name: stop_name
        stop_latitude: 4.145608
    V3.RouteResponse:
      type: object
      properties:
        route:
          $ref: '#/components/schemas/V3.RouteWithStatus'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        route:
          route_service_status:
            description: description
            timestamp: 2000-01-23T04:56:07.000+00:00
          route_id: 6
          route_name: route_name
          route_type: 0
          route_number: route_number
          route_gtfs_id: route_gtfs_id
          geopath:
          - {}
          - {}
        status:
          health: 6
          version: version
    V3.RouteWithStatus:
      type: object
      properties:
        route_service_status:
          $ref: '#/components/schemas/V3.RouteServiceStatus'
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_name:
          type: string
          description: Name of route
        route_number:
          type: string
          description: Route number presented to public (nb. not route_id)
        route_gtfs_id:
          type: string
          description: GTFS Identifer of the route
        geopath:
          type: array
          description: GeoPath of the route
          items:
            type: object
            properties: {}
            example: {}
      example:
        route_service_status:
          description: description
          timestamp: 2000-01-23T04:56:07.000+00:00
        route_id: 6
        route_name: route_name
        route_type: 0
        route_number: route_number
        route_gtfs_id: route_gtfs_id
        geopath:
        - {}
        - {}
    V3.RouteServiceStatus:
      type: object
      properties:
        description:
          type: string
        timestamp:
          type: string
          format: date-time
      example:
        description: description
        timestamp: 2000-01-23T04:56:07.000+00:00
    V3.RouteTypesResponse:
      type: object
      properties:
        route_types:
          type: array
          description: Transport mode identifiers
          items:
            $ref: '#/components/schemas/V3.RouteType'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        route_types:
        - route_type_name: route_type_name
          route_type: 0
        - route_type_name: route_type_name
          route_type: 0
        status:
          health: 6
          version: version
    V3.RouteType:
      type: object
      properties:
        route_type_name:
          type: string
          description: Name of transport mode
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
      example:
        route_type_name: route_type_name
        route_type: 0
    V3.RunsResponse:
      type: object
      properties:
        runs:
          type: array
          description: Individual trips/services of a route
          items:
            $ref: '#/components/schemas/V3.Run'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        runs:
        - run_id: 1
          route_id: 1
          final_stop_id: 6
          destination_name: destination_name
          vehicle_descriptor:
            low_floor: true
            air_conditioned: true
            supplier: supplier
            length: length
            description: description
            id: id
            operator: operator
          run_sequence: 1
          direction_id: 7
          run_ref: run_ref
          route_type: 1
          vehicle_position:
            easting: 9.3693102714106686335071572102606296539306640625
            bearing: 8.7620420127490010742121739895083010196685791015625
            datetime_utc: 2000-01-23T04:56:07.000+00:00
            latitude: 5.02500479152029466689555192715488374233245849609375
            supplier: supplier
            expiry_time: 2000-01-23T04:56:07.000+00:00
            northing: 6.683562403749608193948006373830139636993408203125
            longitude: 9.965781217890562260208753286860883235931396484375
            direction: direction
          express_stop_count: 4
          geopath:
          - {}
          - {}
          status: status
        - run_id: 1
          route_id: 1
          final_stop_id: 6
          destination_name: destination_name
          vehicle_descriptor:
            low_floor: true
            air_conditioned: true
            supplier: supplier
            length: length
            description: description
            id: id
            operator: operator
          run_sequence: 1
          direction_id: 7
          run_ref: run_ref
          route_type: 1
          vehicle_position:
            easting: 9.3693102714106686335071572102606296539306640625
            bearing: 8.7620420127490010742121739895083010196685791015625
            datetime_utc: 2000-01-23T04:56:07.000+00:00
            latitude: 5.02500479152029466689555192715488374233245849609375
            supplier: supplier
            expiry_time: 2000-01-23T04:56:07.000+00:00
            northing: 6.683562403749608193948006373830139636993408203125
            longitude: 9.965781217890562260208753286860883235931396484375
            direction: direction
          express_stop_count: 4
          geopath:
          - {}
          - {}
          status: status
        status:
          health: 6
          version: version
    V3.RunResponse:
      type: object
      properties:
        run:
          $ref: '#/components/schemas/V3.Run'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        run:
          run_id: 1
          route_id: 1
          final_stop_id: 6
          destination_name: destination_name
          vehicle_descriptor:
            low_floor: true
            air_conditioned: true
            supplier: supplier
            length: length
            description: description
            id: id
            operator: operator
          run_sequence: 1
          direction_id: 7
          run_ref: run_ref
          route_type: 1
          vehicle_position:
            easting: 9.3693102714106686335071572102606296539306640625
            bearing: 8.7620420127490010742121739895083010196685791015625
            datetime_utc: 2000-01-23T04:56:07.000+00:00
            latitude: 5.02500479152029466689555192715488374233245849609375
            supplier: supplier
            expiry_time: 2000-01-23T04:56:07.000+00:00
            northing: 6.683562403749608193948006373830139636993408203125
            longitude: 9.965781217890562260208753286860883235931396484375
            direction: direction
          express_stop_count: 4
          geopath:
          - {}
          - {}
          status: status
        status:
          health: 6
          version: version
    V3.SearchParameters:
      type: object
      properties:
        route_types:
          type: array
          description: "Filter by route_type; values returned via RouteTypes API (note:\
            \ stops and routes are ordered by route_types specified)"
          items:
            type: integer
            format: int32
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        latitude:
          type: number
          description: Filter by geographic coordinate of latitude
          format: float
        longitude:
          type: number
          description: Filter by geographic coordinate of longitude
          format: float
        max_distance:
          type: number
          description: Filter by maximum distance (in metres) from location specified
            via latitude and longitude parameters
          format: float
        include_addresses:
          type: boolean
          description: Placeholder for future development; currently unavailable
        include_outlets:
          type: boolean
          description: Indicates if outlets will be returned in response (default
            = true)
        match_stop_by_suburb:
          type: boolean
          description: Indicates whether to find stops by suburbs in the search term
            (default = true)
        match_route_by_suburb:
          type: boolean
          description: Indicates whether to find routes by suburbs in the search term
            (default = true)
        match_stop_by_gtfs_stop_id:
          type: boolean
          description: Indicates whether to search for stops according to a metlink
            stop ID (default = false)
    V3.SearchResult:
      type: object
      properties:
        stops:
          type: array
          description: "Train stations, tram stops, bus stops, regional coach stops\
            \ or Night Bus stops"
          items:
            $ref: '#/components/schemas/V3.ResultStop'
        routes:
          type: array
          description: "Train lines, tram routes, bus routes, regional coach routes,\
            \ Night Bus routes"
          items:
            $ref: '#/components/schemas/V3.ResultRoute'
        outlets:
          type: array
          description: myki ticket outlets
          items:
            $ref: '#/components/schemas/V3.ResultOutlet'
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        routes:
        - null
        - null
        outlets:
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 7
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 4.145608
          outlet_name: outlet_name
          outlet_distance: 3.6160767
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 2.027123
        - outlet_business_hour_thur: outlet_business_hour_thur
          outlet_postcode: 7
          outlet_business_hour_fri: outlet_business_hour_fri
          outlet_business_hour_wed: outlet_business_hour_wed
          outlet_suburb: outlet_suburb
          outlet_longitude: 4.145608
          outlet_name: outlet_name
          outlet_distance: 3.6160767
          outlet_business: outlet_business
          outlet_business_hour_mon: outlet_business_hour_mon
          outlet_business_hour_sun: outlet_business_hour_sun
          outlet_slid_spid: outlet_slid_spid
          outlet_business_hour_sat: outlet_business_hour_sat
          outlet_notes: outlet_notes
          outlet_business_hour_tue: outlet_business_hour_tue
          outlet_latitude: 2.027123
        stops:
        - routes:
          - route_service_status:
              description: description
              timestamp: 2000-01-23T04:56:07.000+00:00
            route_id: 5
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
          - route_service_status:
              description: description
              timestamp: 2000-01-23T04:56:07.000+00:00
            route_id: 5
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
          stop_longitude: 2.302136
          stop_sequence: 7
          route_type: 6
          stop_id: 9
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          stop_distance: 0.8008282
          stop_name: stop_name
          stop_latitude: 5.637377
        - routes:
          - route_service_status:
              description: description
              timestamp: 2000-01-23T04:56:07.000+00:00
            route_id: 5
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
          - route_service_status:
              description: description
              timestamp: 2000-01-23T04:56:07.000+00:00
            route_id: 5
            route_name: route_name
            route_type: 1
            route_number: route_number
            route_gtfs_id: route_gtfs_id
          stop_longitude: 2.302136
          stop_sequence: 7
          route_type: 6
          stop_id: 9
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          stop_distance: 0.8008282
          stop_name: stop_name
          stop_latitude: 5.637377
        status:
          health: 6
          version: version
    V3.ResultStop:
      type: object
      properties:
        stop_distance:
          type: number
          description: Distance of stop from input location (in metres); returns 0
            if no location is input
          format: float
        stop_suburb:
          type: string
          description: suburb of stop
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        routes:
          type: array
          description: List of routes travelling through the stop
          items:
            $ref: '#/components/schemas/V3.ResultRoute'
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_sequence:
          type: integer
          description: Sequence of the stop on the route/run; return 0 when route_id
            or run_id not specified. Order ascendingly by this field (when non zero)
            to get physical order (earliest first) of stops on the route_id/run_id.
          format: int32
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        stop_name:
          type: string
          description: Name of stop
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
      example:
        routes:
        - route_service_status:
            description: description
            timestamp: 2000-01-23T04:56:07.000+00:00
          route_id: 5
          route_name: route_name
          route_type: 1
          route_number: route_number
          route_gtfs_id: route_gtfs_id
        - route_service_status:
            description: description
            timestamp: 2000-01-23T04:56:07.000+00:00
          route_id: 5
          route_name: route_name
          route_type: 1
          route_number: route_number
          route_gtfs_id: route_gtfs_id
        stop_longitude: 2.302136
        stop_sequence: 7
        route_type: 6
        stop_id: 9
        stop_landmark: stop_landmark
        stop_suburb: stop_suburb
        stop_distance: 0.8008282
        stop_name: stop_name
        stop_latitude: 5.637377
    V3.ResultRoute:
      type: object
      properties:
        route_name:
          type: string
          description: Name of route
        route_number:
          type: string
          description: Route number presented to public (nb. not route_id)
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        route_id:
          type: integer
          description: Route identifier
          format: int32
        route_gtfs_id:
          type: string
          description: GTFS Identifer of the route
        route_service_status:
          $ref: '#/components/schemas/V3.RouteServiceStatus'
      example:
        route_service_status:
          description: description
          timestamp: 2000-01-23T04:56:07.000+00:00
        route_id: 5
        route_name: route_name
        route_type: 1
        route_number: route_number
        route_gtfs_id: route_gtfs_id
    V3.ResultOutlet:
      type: object
      properties:
        outlet_distance:
          type: number
          description: Distance of outlet from input location (in metres); returns
            0 if no location is input
          format: float
        outlet_slid_spid:
          type: string
          description: The SLID / SPID
        outlet_name:
          type: string
          description: The location name of the outlet
        outlet_business:
          type: string
          description: The business name of the outlet
        outlet_latitude:
          type: number
          description: Geographic coordinate of latitude at outlet
          format: float
        outlet_longitude:
          type: number
          description: Geographic coordinate of longitude at outlet
          format: float
        outlet_suburb:
          type: string
          description: The city/municipality the outlet is in
        outlet_postcode:
          type: integer
          description: The postcode for the outlet
          format: int32
        outlet_business_hour_mon:
          type: string
          description: The business hours on Monday
        outlet_business_hour_tue:
          type: string
          description: The business hours on Tuesday
        outlet_business_hour_wed:
          type: string
          description: The business hours on Wednesday
        outlet_business_hour_thur:
          type: string
          description: The business hours on Thursday
        outlet_business_hour_fri:
          type: string
          description: The business hours on Friday
        outlet_business_hour_sat:
          type: string
          description: The business hours on Saturday
        outlet_business_hour_sun:
          type: string
          description: The business hours on Sunday
        outlet_notes:
          type: string
          description: Any additional notes for the outlet such as 'Buy pre-loaded
            myki cards only'. May be null/empty.
      example:
        outlet_business_hour_thur: outlet_business_hour_thur
        outlet_postcode: 7
        outlet_business_hour_fri: outlet_business_hour_fri
        outlet_business_hour_wed: outlet_business_hour_wed
        outlet_suburb: outlet_suburb
        outlet_longitude: 4.145608
        outlet_name: outlet_name
        outlet_distance: 3.6160767
        outlet_business: outlet_business
        outlet_business_hour_mon: outlet_business_hour_mon
        outlet_business_hour_sun: outlet_business_hour_sun
        outlet_slid_spid: outlet_slid_spid
        outlet_business_hour_sat: outlet_business_hour_sat
        outlet_notes: outlet_notes
        outlet_business_hour_tue: outlet_business_hour_tue
        outlet_latitude: 2.027123
    V3.GenerateDivaMappingResponse:
      type: object
      properties:
        mapping_version:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/V3.Status'
    V3.SiriReferenceDataRequest:
      required:
      - line_refs
      - mapping_version
      type: object
      properties:
        line_refs:
          type: array
          items:
            $ref: '#/components/schemas/V3.SiriLineRefDirectionRefStopPointRef'
        stop_point_refs:
          type: array
          description: Siri StopPointRef
          items:
            type: integer
            format: int32
        date_utc:
          type: string
          description: Filter by the date and time of the request (ISO 8601 UTC format)
            (default = current date and time)
          format: date-time
        mapping_version:
          type: string
          description: DIVA mapping version generated by Chronos during a Parser or
            RealtimeBusConfig load
    V3.SiriLineRefDirectionRefStopPointRef:
      required:
      - direction_ref
      - line_ref
      - stop_point_ref
      type: object
      properties:
        line_ref:
          type: string
          description: Siri LineRef
        direction_ref:
          type: integer
          description: "Siri DirectionRef  (in, out, up, down, clockwise, counterclockwise,\
            \ Inbound, Outbound)"
          format: int32
          enum:
          - 1
          - 2
          - 5
          - 10
          - 16
          - 32
          - 65
          - 130
        stop_point_ref:
          type: integer
          description: Siri StopPointRef
          format: int32
    V3.SiriReferenceDataMappingsResponse:
      type: object
      properties:
        mapping_version:
          type: string
          readOnly: true
        line_refs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.SiriDirectionRefsDictionary'
          description: SIRI LineRef
          readOnly: true
        stop_point_refs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.StopPoint'
          readOnly: true
        status:
          $ref: '#/components/schemas/V3.Status'
    V3.SiriDirectionRefsDictionary:
      type: object
      properties:
        direction_refs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.SiriStopsRefsDictionary'
          readOnly: true
    V3.StopPoint:
      type: object
      properties:
        stop_id:
          type: integer
          format: int32
    V3.SiriStopsRefsDictionary:
      type: object
      properties:
        stop_point_refs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.SiriReferenceDataDetail'
          readOnly: true
        unmatched_stop_point_refs:
          type: object
          additionalProperties:
            type: string
          readOnly: true
    V3.SiriReferenceDataDetail:
      type: object
      properties:
        route_id:
          type: integer
          format: int32
        route_number_short:
          type: string
          description: Route number
        direction_id:
          type: integer
          format: int32
        tracking_supplier_id:
          type: integer
          description: Authority (Upstream SIRI provider) of a route and direction
          format: int32
        route_type:
          type: integer
          format: int32
    V3.SiriLineRefsRequest:
      required:
      - mapping_version
      type: object
      properties:
        line_refs:
          type: array
          items:
            $ref: '#/components/schemas/V3.SiriLineRef'
        mapping_version:
          type: string
          description: DIVA mapping version generated by Chronos during a Parser or
            RealtimeBusConfig load
    V3.SiriLineRef:
      required:
      - line_ref
      type: object
      properties:
        line_ref:
          type: string
          description: Siri LineRef
        direction_ref:
          type: integer
          description: "Siri DirectionRef  (in, out, up, down, clockwise, counterclockwise,\
            \ Inbound, Outbound)"
          format: int32
          enum:
          - 1
          - 2
          - 5
          - 10
          - 16
          - 32
          - 65
          - 130
    V3.SiriLineRefMappingsResponse:
      type: object
      properties:
        mapping_version:
          type: string
          readOnly: true
        line_refs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.SiriLineRefDirectionRefsDictionary'
        status:
          $ref: '#/components/schemas/V3.Status'
    V3.SiriLineRefDirectionRefsDictionary:
      type: object
      properties:
        direction_refs:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/V3.SiriReferenceDataDetail'
        unmatched_direction_refs:
          type: object
          additionalProperties:
            type: string
    V3.DynamoDbTimetablesReponse:
      type: object
      properties:
        timetables:
          type: array
          items:
            $ref: '#/components/schemas/V3.DynamoDbTimetable'
        status:
          $ref: '#/components/schemas/V3.Status'
    V3.DynamoDbTimetable:
      type: object
      properties:
        table_name:
          type: string
          description: Name of corresponding table in DynamoDB.
        parser_version:
          type: integer
          description: Parser verison
          format: int64
        parser_mapping_version:
          type: string
          description: Diva Mapping Version used to load Parser into DynamoDB
        pt_version:
          type: integer
          description: PT version
          format: int64
        pt_mapping_version:
          type: string
          description: Diva Mapping Version used to load PT into DynamoDB
        transport_type:
          type: integer
          description: "A.k.a. Transport Mode (e.g. Train, Tram, Bus, V/Line, Nightrider)"
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        applicable_local_date:
          type: string
          description: Formated date string of applicable date
          readOnly: true
        exists:
          type: boolean
          description: "True if the named table has been created in DynamoDB (i.e.\
            \ at least one departure record has been loaded),\r\nor false if there\
            \ are no records for this date and transport type."
    V3.SiriDownstreamSubscription:
      type: object
      properties:
        subscriber_ref:
          type: string
        subscription_ref:
          type: string
        message_type:
          type: integer
          format: int32
          enum:
          - 0
          - 1
        siri_format:
          type: integer
          format: int32
          enum:
          - 0
          - 1
        siri_version:
          pattern: 1.3|2.0
          type: string
        consumer_address:
          type: string
        initial_termination_time:
          type: string
          format: date-time
        validity_period_start:
          type: string
          format: date-time
        validity_period_end:
          type: string
          format: date-time
        preview_interval:
          type: string
        topics:
          type: array
          items:
            $ref: '#/components/schemas/V3.SiriDownstreamSubscriptionTopic'
    V3.SiriDownstreamSubscriptionTopic:
      type: object
      properties:
        line_ref:
          type: string
        direction_ref:
          type: integer
          format: int32
          enum:
          - 1
          - 2
          - 5
          - 10
          - 16
          - 32
          - 65
          - 130
        route_type:
          type: integer
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
    V3.SiriProductionTimetableSubscriptionRequest:
      required:
      - consumer_address
      - end_time
      - initial_termination_time
      - siri_format
      - siri_version
      - start_time
      - subscriber_ref
      - subscription_ref
      - topics
      type: object
      properties:
        start_time:
          type: string
          description: Siri Start Time of the Validity Period
          format: date-time
        end_time:
          type: string
          description: Siri End Time of the Validity Period
          format: date-time
        subscriber_ref:
          type: string
          description: Siri Subscriber Ref
        subscription_ref:
          type: string
          description: Siri Subscription Ref - Unique to a Subscriber Ref
        siri_format:
          type: integer
          description: Siri Message Format 'xml' or 'json'
          format: int32
          enum:
          - 0
          - 1
        siri_version:
          pattern: 1.3|2.0
          type: string
          description: Siri Message Version '1.3' or '2.0'
        consumer_address:
          type: string
          description: Siri Consumer Address - Baseline and Updates will be sent to
            this address
        initial_termination_time:
          type: string
          description: Siri Initial Termination Time - Expiry of the subscription
          format: date-time
        topics:
          type: array
          items:
            $ref: '#/components/schemas/V3.SiriSubscriptionTopic'
    V3.SiriSubscriptionTopic:
      required:
      - line_ref
      - route_type
      type: object
      properties:
        line_ref:
          type: string
          description: Siri LineRef
        direction_ref:
          type: integer
          description: "Siri DirectionRef  (in, out, up, down, clockwise, counterclockwise,\
            \ Inbound, Outbound)"
          format: int32
          enum:
          - 1
          - 2
          - 5
          - 10
          - 16
          - 32
          - 65
          - 130
        route_type:
          type: integer
          description: Route Type eg. 0 (Train) 1 (Tram) 2 (Bus) 3 (Vline) 4 (NightRider)
          format: int32
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
    V3.SiriDownstreamSubscriptionResponse:
      type: object
      properties:
        valid_until:
          type: string
          description: The Data Horizon of Chronos
          format: date-time
    V3.SiriEstimatedTimetableSubscriptionRequest:
      required:
      - consumer_address
      - initial_termination_time
      - preview_interval
      - siri_format
      - siri_version
      - subscriber_ref
      - subscription_ref
      - topics
      type: object
      properties:
        preview_interval:
          type: string
          description: Siri Preview Interval
        subscriber_ref:
          type: string
          description: Siri Subscriber Ref
        subscription_ref:
          type: string
          description: Siri Subscription Ref - Unique to a Subscriber Ref
        siri_format:
          type: integer
          description: Siri Message Format 'xml' or 'json'
          format: int32
          enum:
          - 0
          - 1
        siri_version:
          pattern: 1.3|2.0
          type: string
          description: Siri Message Version '1.3' or '2.0'
        consumer_address:
          type: string
          description: Siri Consumer Address - Baseline and Updates will be sent to
            this address
        initial_termination_time:
          type: string
          description: Siri Initial Termination Time - Expiry of the subscription
          format: date-time
        topics:
          type: array
          items:
            $ref: '#/components/schemas/V3.SiriSubscriptionTopic'
    V3.SiriDownstreamSubscriptionDeleteRequest:
      required:
      - subscriber_ref
      type: object
      properties:
        subscriber_ref:
          type: string
          description: Siri Subscriber Ref
        subscription_ref:
          type: array
          description: "Siri Subscription Reference(s) - Unique to a Subscriber Ref.\r\
            \nIf `null`, then all subscriptions will be terminated for the referenced\
            \ Subscriber."
          items:
            type: string
    V3.Void:
      type: object
    V3.StopResponse:
      type: object
      properties:
        stop:
          $ref: '#/components/schemas/V3.StopDetails'
        disruptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Disruption'
          description: Disruption information applicable to relevant routes or stops
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        stop:
          station_description: station_description
          routes:
          - {}
          - {}
          stop_amenities:
            taxi_rank: true
            toilet: true
            car_parking: car_parking
            cctv: true
          route_type: 6
          stop_staffing:
            sun_am_to: sun_am_to
            sun_am_from: sun_am_from
            sun_pm_to: sun_pm_to
            tue_am_from: tue_am_from
            ph_from: ph_from
            sat_am_from: sat_am_from
            wed_am_from: wed_am_from
            ph_additional_text: ph_additional_text
            sun_pm_from: sun_pm_from
            thu_pm_to: thu_pm_to
            fri_am_to: fri_am_to
            fri_pm_from: fri_pm_from
            sat_pm_from: sat_pm_from
            tue_am_to: tue_am_to
            tue_pm_from: tue_pm_from
            sat_am_to: sat_am_to
            thu_pm_from: thu_pm_from
            mon_am_to: mon_am_to
            mon_pm_to: mon_pm_to
            fri_am_from: fri_am_from
            fri_pm_to: fri_pm_to
            thu_am_from: thu_am_from
            thu_am_to: thu_am_to
            mon_pm_from: mon_pm_from
            sat_pm_to: sat_pm_to
            tue_pm_to: tue_pm_to
            ph_to: ph_to
            wed_pm_from: wed_pm_from
            wed_pm_To: wed_pm_To
            mon_am_from: mon_am_from
            wed_am_to: wed_am_to
          stop_id: 2
          stop_location:
            gps:
              latitude: 1.4658129
              longitude: 5.962134
          stop_accessibility:
            wheelchair:
              parking: true
              raised_platform_shelther: true
              toilet: true
              low_ticket_counter: true
              ramp: true
              accessible_ramp: true
              manouvering: true
              steep_ramp: true
              telephone: true
              secondary_path: true
              raised_platform: true
            escalator: true
            hearing_loop: true
            waiting_room: true
            stairs: true
            platform_number: 5
            lift: true
            tactile_ground_surface_indicator: true
            lighting: true
            stop_accessible: true
            audio_customer_information: true
          stop_landmark: stop_landmark
          station_type: station_type
          disruption_ids:
          - 0
          - 0
          stop_name: stop_name
        disruptions:
          key:
            last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
        status:
          health: 6
          version: version
    V3.StopDetails:
      type: object
      properties:
        disruption_ids:
          type: array
          description: Disruption information identifier(s)
          items:
            type: integer
            format: int64
        station_type:
          type: string
          description: "Type of metropolitan train station (i.e. \"Premium\", \"Host\"\
            \ or \"Unstaffed\" station); returns null for V/Line train"
        station_description:
          type: string
          description: The definition applicable to the station_type; returns null
            for V/Line train
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        stop_location:
          $ref: '#/components/schemas/V3.StopLocation'
        stop_amenities:
          $ref: '#/components/schemas/V3.StopAmenityDetails'
        stop_accessibility:
          $ref: '#/components/schemas/V3.StopAccessibility'
        stop_staffing:
          $ref: '#/components/schemas/V3.StopStaffing'
        routes:
          type: array
          description: Routes travelling through the stop
          items:
            type: object
            properties: {}
            example: {}
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        stop_name:
          type: string
          description: Name of stop
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
      example:
        station_description: station_description
        routes:
        - {}
        - {}
        stop_amenities:
          taxi_rank: true
          toilet: true
          car_parking: car_parking
          cctv: true
        route_type: 6
        stop_staffing:
          sun_am_to: sun_am_to
          sun_am_from: sun_am_from
          sun_pm_to: sun_pm_to
          tue_am_from: tue_am_from
          ph_from: ph_from
          sat_am_from: sat_am_from
          wed_am_from: wed_am_from
          ph_additional_text: ph_additional_text
          sun_pm_from: sun_pm_from
          thu_pm_to: thu_pm_to
          fri_am_to: fri_am_to
          fri_pm_from: fri_pm_from
          sat_pm_from: sat_pm_from
          tue_am_to: tue_am_to
          tue_pm_from: tue_pm_from
          sat_am_to: sat_am_to
          thu_pm_from: thu_pm_from
          mon_am_to: mon_am_to
          mon_pm_to: mon_pm_to
          fri_am_from: fri_am_from
          fri_pm_to: fri_pm_to
          thu_am_from: thu_am_from
          thu_am_to: thu_am_to
          mon_pm_from: mon_pm_from
          sat_pm_to: sat_pm_to
          tue_pm_to: tue_pm_to
          ph_to: ph_to
          wed_pm_from: wed_pm_from
          wed_pm_To: wed_pm_To
          mon_am_from: mon_am_from
          wed_am_to: wed_am_to
        stop_id: 2
        stop_location:
          gps:
            latitude: 1.4658129
            longitude: 5.962134
        stop_accessibility:
          wheelchair:
            parking: true
            raised_platform_shelther: true
            toilet: true
            low_ticket_counter: true
            ramp: true
            accessible_ramp: true
            manouvering: true
            steep_ramp: true
            telephone: true
            secondary_path: true
            raised_platform: true
          escalator: true
          hearing_loop: true
          waiting_room: true
          stairs: true
          platform_number: 5
          lift: true
          tactile_ground_surface_indicator: true
          lighting: true
          stop_accessible: true
          audio_customer_information: true
        stop_landmark: stop_landmark
        station_type: station_type
        disruption_ids:
        - 0
        - 0
        stop_name: stop_name
    V3.StopLocation:
      type: object
      properties:
        gps:
          $ref: '#/components/schemas/V3.StopGps'
      example:
        gps:
          latitude: 1.4658129
          longitude: 5.962134
    V3.StopAmenityDetails:
      type: object
      properties:
        toilet:
          type: boolean
          description: Indicates if there is a public toilet at or near the stop
        taxi_rank:
          type: boolean
          description: Indicates if there is a taxi rank at or near the stop
        car_parking:
          type: string
          description: The number of free car parking spots at the stop
        cctv:
          type: boolean
          description: Indicates if there are CCTV (i.e. closed circuit television)
            cameras at the stop
      example:
        taxi_rank: true
        toilet: true
        car_parking: car_parking
        cctv: true
    V3.StopAccessibility:
      type: object
      properties:
        lighting:
          type: boolean
          description: Indicates if there is lighting at the stop
        platform_number:
          type: integer
          description: Indicates the platform number for xivic information (Platform
            0 indicates general stop facilities)
          format: int32
        audio_customer_information:
          type: boolean
          description: Indicates if there is at least one audio customer information
            at the stop/platform
        escalator:
          type: boolean
          description: Indicates if there is at least one accessible escalator at
            the stop/platform that complies with the Disability Standards for Accessible
            Public Transport under the Disability Discrimination Act (1992)
        hearing_loop:
          type: boolean
          description: Indicates if there is a hearing loop facility at the stop/platform
        lift:
          type: boolean
          description: Indicates if there is an elevator at the stop/platform
        stairs:
          type: boolean
          description: Indicates if there are stairs available in the stop
        stop_accessible:
          type: boolean
          description: Indicates if the stop is accessible
        tactile_ground_surface_indicator:
          type: boolean
          description: "Indicates if there are tactile tiles (also known as tactile\
            \ ground surface indicators, or TGSIs) at the stop"
        waiting_room:
          type: boolean
          description: Indicates if there is a general waiting area at the stop
        wheelchair:
          $ref: '#/components/schemas/V3.StopAccessibilityWheelchair'
      example:
        wheelchair:
          parking: true
          raised_platform_shelther: true
          toilet: true
          low_ticket_counter: true
          ramp: true
          accessible_ramp: true
          manouvering: true
          steep_ramp: true
          telephone: true
          secondary_path: true
          raised_platform: true
        escalator: true
        hearing_loop: true
        waiting_room: true
        stairs: true
        platform_number: 5
        lift: true
        tactile_ground_surface_indicator: true
        lighting: true
        stop_accessible: true
        audio_customer_information: true
    V3.StopStaffing:
      type: object
      properties:
        fri_am_from:
          type: string
          description: Stop staffing hours
        fri_am_to:
          type: string
          description: Stop staffing hours
        fri_pm_from:
          type: string
          description: Stop staffing hours
        fri_pm_to:
          type: string
          description: Stop staffing hours
        mon_am_from:
          type: string
          description: Stop staffing hours
        mon_am_to:
          type: string
          description: Stop staffing hours
        mon_pm_from:
          type: string
          description: Stop staffing hours
        mon_pm_to:
          type: string
          description: Stop staffing hours
        ph_additional_text:
          type: string
          description: Stop staffing hours
        ph_from:
          type: string
          description: Stop staffing hours
        ph_to:
          type: string
          description: Stop staffing hours
        sat_am_from:
          type: string
          description: Stop staffing hours
        sat_am_to:
          type: string
          description: Stop staffing hours
        sat_pm_from:
          type: string
          description: Stop staffing hours
        sat_pm_to:
          type: string
          description: Stop staffing hours
        sun_am_from:
          type: string
          description: Stop staffing hours
        sun_am_to:
          type: string
          description: Stop staffing hours
        sun_pm_from:
          type: string
          description: Stop staffing hours
        sun_pm_to:
          type: string
          description: Stop staffing hours
        thu_am_from:
          type: string
          description: Stop staffing hours
        thu_am_to:
          type: string
          description: Stop staffing hours
        thu_pm_from:
          type: string
          description: Stop staffing hours
        thu_pm_to:
          type: string
          description: Stop staffing hours
        tue_am_from:
          type: string
          description: Stop staffing hours
        tue_am_to:
          type: string
          description: Stop staffing hours
        tue_pm_from:
          type: string
          description: Stop staffing hours
        tue_pm_to:
          type: string
          description: Stop staffing hours
        wed_am_from:
          type: string
          description: Stop staffing hours
        wed_am_to:
          type: string
          description: Stop staffing hours
        wed_pm_from:
          type: string
          description: Stop staffing hours
        wed_pm_To:
          type: string
          description: Stop staffing hours
      example:
        sun_am_to: sun_am_to
        sun_am_from: sun_am_from
        sun_pm_to: sun_pm_to
        tue_am_from: tue_am_from
        ph_from: ph_from
        sat_am_from: sat_am_from
        wed_am_from: wed_am_from
        ph_additional_text: ph_additional_text
        sun_pm_from: sun_pm_from
        thu_pm_to: thu_pm_to
        fri_am_to: fri_am_to
        fri_pm_from: fri_pm_from
        sat_pm_from: sat_pm_from
        tue_am_to: tue_am_to
        tue_pm_from: tue_pm_from
        sat_am_to: sat_am_to
        thu_pm_from: thu_pm_from
        mon_am_to: mon_am_to
        mon_pm_to: mon_pm_to
        fri_am_from: fri_am_from
        fri_pm_to: fri_pm_to
        thu_am_from: thu_am_from
        thu_am_to: thu_am_to
        mon_pm_from: mon_pm_from
        sat_pm_to: sat_pm_to
        tue_pm_to: tue_pm_to
        ph_to: ph_to
        wed_pm_from: wed_pm_from
        wed_pm_To: wed_pm_To
        mon_am_from: mon_am_from
        wed_am_to: wed_am_to
    V3.StopGps:
      type: object
      properties:
        latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
      example:
        latitude: 1.4658129
        longitude: 5.962134
    V3.StopAccessibilityWheelchair:
      type: object
      properties:
        accessible_ramp:
          type: boolean
        parking:
          type: boolean
          description: Indicates if there is at least one accessible parking spot
            at the stop that complies with the Disability Standards for Accessible
            Public Transport under the Disability Discrimination Act (1992)
        telephone:
          type: boolean
          description: Indicates if there is at least one accessible telephone at
            the stop/platform that complies with the Disability Standards for Accessible
            Public Transport under the Disability Discrimination Act (1992)
        toilet:
          type: boolean
          description: Indicates if there is at least one accessible toilet at the
            stop/platform that complies with the Disability Standards for Accessible
            Public Transport under the Disability Discrimination Act (1992)
        low_ticket_counter:
          type: boolean
          description: Indicates if there is at least one low ticket counter at the
            stop that complies with the Disability Standards for Accessible Public
            Transport under the Disability Discrimination Act (1992)
        manouvering:
          type: boolean
          description: Indicates if there is a space for mobility device to board
            on or off a transport mode
        raised_platform:
          type: boolean
          description: Indicates if there is a raised platform to board a train
        ramp:
          type: boolean
          description: Indicates if there are ramps (&lt;1:14) at the stop/platform
        secondary_path:
          type: boolean
          description: Indicates if there is a path beyond the stop which is accessible
        raised_platform_shelther:
          type: boolean
          description: Indicates if there is shelter near the raised platform
        steep_ramp:
          type: boolean
          description: Indicates if there are ramps (&gt;1:14) at the stop/platform
      example:
        parking: true
        raised_platform_shelther: true
        toilet: true
        low_ticket_counter: true
        ramp: true
        accessible_ramp: true
        manouvering: true
        steep_ramp: true
        telephone: true
        secondary_path: true
        raised_platform: true
    V3.StopsOnRouteResponse:
      type: object
      properties:
        stops:
          type: array
          description: "Train stations, tram stops, bus stops, regional coach stops\
            \ or Night Bus stops"
          items:
            $ref: '#/components/schemas/V3.StopOnRoute'
        disruptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Disruption'
          description: Disruption information applicable to relevant routes or stops
        geopath:
          type: array
          description: GeoPath for the route
          items:
            type: object
            properties: {}
            example: {}
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        disruptions:
          key:
            last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
        stops:
        - stop_ticket:
            ticket_type: ticket_type
            vline_reservation: true
            zone: zone
            ticket_machine: true
            ticket_zones:
            - 7
            - 7
            is_free_fare_zone: true
            ticket_checks: true
          stop_longitude: 5.962134
          stop_sequence: 5
          route_type: 6
          stop_id: 2
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          disruption_ids:
          - 0
          - 0
          stop_name: stop_name
          stop_latitude: 1.4658129
        - stop_ticket:
            ticket_type: ticket_type
            vline_reservation: true
            zone: zone
            ticket_machine: true
            ticket_zones:
            - 7
            - 7
            is_free_fare_zone: true
            ticket_checks: true
          stop_longitude: 5.962134
          stop_sequence: 5
          route_type: 6
          stop_id: 2
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          disruption_ids:
          - 0
          - 0
          stop_name: stop_name
          stop_latitude: 1.4658129
        geopath:
        - {}
        - {}
        status:
          health: 6
          version: version
    V3.StopOnRoute:
      type: object
      properties:
        disruption_ids:
          type: array
          description: Disruption information identifier(s)
          items:
            type: integer
            format: int64
        stop_suburb:
          type: string
          description: suburb of stop
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_sequence:
          type: integer
          description: Sequence of the stop on the route/run; return 0 when route_id
            or run_id not specified. Order ascendingly by this field (when non zero)
            to get physical order (earliest first) of stops on the route_id/run_id.
          format: int32
        stop_ticket:
          $ref: '#/components/schemas/V3.StopTicket'
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        stop_name:
          type: string
          description: Name of stop
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
      example:
        stop_ticket:
          ticket_type: ticket_type
          vline_reservation: true
          zone: zone
          ticket_machine: true
          ticket_zones:
          - 7
          - 7
          is_free_fare_zone: true
          ticket_checks: true
        stop_longitude: 5.962134
        stop_sequence: 5
        route_type: 6
        stop_id: 2
        stop_landmark: stop_landmark
        stop_suburb: stop_suburb
        disruption_ids:
        - 0
        - 0
        stop_name: stop_name
        stop_latitude: 1.4658129
    V3.StopsByDistanceResponse:
      type: object
      properties:
        stops:
          type: array
          description: "Train stations, tram stops, bus stops, regional coach stops\
            \ or Night Bus stops"
          items:
            $ref: '#/components/schemas/V3.StopGeosearch'
        disruptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/V3.Disruption'
          description: Disruption information applicable to relevant routes or stops
        status:
          $ref: '#/components/schemas/V3.Status'
      example:
        disruptions:
          key:
            last_updated: 2000-01-23T04:56:07.000+00:00
            from_date: 2000-01-23T04:56:07.000+00:00
            disruption_type: disruption_type
            published_on: 2000-01-23T04:56:07.000+00:00
            description: description
            display_on_board: true
            title: title
            url: url
            routes:
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            - route_id: 2
              route_name: route_name
              route_type: 1
              route_number: route_number
              route_gtfs_id: route_gtfs_id
              direction:
                service_time: service_time
                direction_id: 6
                direction_name: direction_name
                route_direction_id: 6
            disruption_id: 6
            colour: colour
            to_date: 2000-01-23T04:56:07.000+00:00
            disruption_status: disruption_status
            stops:
            - stop_id: 5
              stop_name: stop_name
            - stop_id: 5
              stop_name: stop_name
            display_status: true
        stops:
        - routes:
          - {}
          - {}
          stop_longitude: 2.302136
          stop_sequence: 7
          stop_id: 1
          route_type: 5
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          disruption_ids:
          - 0
          - 0
          stop_distance: 6.0274563
          stop_name: stop_name
          stop_latitude: 5.637377
        - routes:
          - {}
          - {}
          stop_longitude: 2.302136
          stop_sequence: 7
          stop_id: 1
          route_type: 5
          stop_landmark: stop_landmark
          stop_suburb: stop_suburb
          disruption_ids:
          - 0
          - 0
          stop_distance: 6.0274563
          stop_name: stop_name
          stop_latitude: 5.637377
        status:
          health: 6
          version: version
    V3.StopGeosearch:
      type: object
      properties:
        disruption_ids:
          type: array
          description: Disruption information identifier(s)
          items:
            type: integer
            format: int64
        stop_distance:
          type: number
          description: Distance of stop from input location (in metres); returns 0
            if no location is input
          format: float
        stop_suburb:
          type: string
          description: suburb of stop
        stop_name:
          type: string
          description: Name of stop
        stop_id:
          type: integer
          description: Stop identifier
          format: int32
        route_type:
          type: integer
          description: Transport mode identifier
          format: int32
        routes:
          type: array
          description: List of routes travelling through the stop
          items:
            type: object
            properties: {}
            example: {}
        stop_latitude:
          type: number
          description: Geographic coordinate of latitude at stop
          format: float
        stop_longitude:
          type: number
          description: Geographic coordinate of longitude at stop
          format: float
        stop_landmark:
          type: string
          description: Landmark in proximity of stop
        stop_sequence:
          type: integer
          description: Sequence of the stop on the route/run; return 0 when route_id
            or run_id not specified. Order ascendingly by this field (when non zero)
            to get physical order (earliest first) of stops on the route_id/run_id.
          format: int32
      example:
        routes:
        - {}
        - {}
        stop_longitude: 2.302136
        stop_sequence: 7
        stop_id: 1
        route_type: 5
        stop_landmark: stop_landmark
        stop_suburb: stop_suburb
        disruption_ids:
        - 0
        - 0
        stop_distance: 6.0274563
        stop_name: stop_name
        stop_latitude: 5.637377
    V3.FareEstimateResponse:
      type: object
      properties:
        FareEstimateResultStatus:
          $ref: '#/components/schemas/V3.FareEstimateResultStatus'
        FareEstimateResult:
          $ref: '#/components/schemas/V3.FareEstimateResult'
      example:
        FareEstimateResultStatus:
          Message: Message
          StatusCode: 0
        FareEstimateResult:
          IsEarlyBird: true
          IsJourneyInFreeTramZone: true
          PassengerFares:
          - PassengerType: PassengerType
            Pass70PlusDayPerDay: 4.1456080298839363962315474054776132106781005859375
            Fare2HourOffPeak: 2.3021358869347654518833223846741020679473876953125
            FareDailyPeak: 7.061401241503109105224211816675961017608642578125
            WeekendCap: 7.3862819483858839220147274318151175975799560546875
            Fare2HourPeak: 5.63737665663332876420099637471139430999755859375
            Pass28To69DayPerDay: 2.027123023002321833274663731572218239307403564453125
            Pass7Days: 3.61607674925191080461672754609026014804840087890625
            FareDailyOffPeak: 9.301444243932575517419536481611430644989013671875
            HolidayCap: 1.231513536777255612975068288506008684635162353515625
          - PassengerType: PassengerType
            Pass70PlusDayPerDay: 4.1456080298839363962315474054776132106781005859375
            Fare2HourOffPeak: 2.3021358869347654518833223846741020679473876953125
            FareDailyPeak: 7.061401241503109105224211816675961017608642578125
            WeekendCap: 7.3862819483858839220147274318151175975799560546875
            Fare2HourPeak: 5.63737665663332876420099637471139430999755859375
            Pass28To69DayPerDay: 2.027123023002321833274663731572218239307403564453125
            Pass7Days: 3.61607674925191080461672754609026014804840087890625
            FareDailyOffPeak: 9.301444243932575517419536481611430644989013671875
            HolidayCap: 1.231513536777255612975068288506008684635162353515625
          IsThisWeekendJourney: true
          ZoneInfo:
            UniqueZones:
            - 5
            - 5
            MinZone: 6
            MaxZone: 1
    V3.FareEstimateResultStatus:
      type: object
      properties:
        StatusCode:
          type: integer
        Message:
          type: string
      example:
        Message: Message
        StatusCode: 0
    V3.FareEstimateResult:
      type: object
      properties:
        IsEarlyBird:
          type: boolean
        IsJourneyInFreeTramZone:
          type: boolean
        IsThisWeekendJourney:
          type: boolean
        ZoneInfo:
          $ref: '#/components/schemas/V3.ZoneInfo'
        PassengerFares:
          type: array
          items:
            $ref: '#/components/schemas/V3.PassengerFare'
      example:
        IsEarlyBird: true
        IsJourneyInFreeTramZone: true
        PassengerFares:
        - PassengerType: PassengerType
          Pass70PlusDayPerDay: 4.1456080298839363962315474054776132106781005859375
          Fare2HourOffPeak: 2.3021358869347654518833223846741020679473876953125
          FareDailyPeak: 7.061401241503109105224211816675961017608642578125
          WeekendCap: 7.3862819483858839220147274318151175975799560546875
          Fare2HourPeak: 5.63737665663332876420099637471139430999755859375
          Pass28To69DayPerDay: 2.027123023002321833274663731572218239307403564453125
          Pass7Days: 3.61607674925191080461672754609026014804840087890625
          FareDailyOffPeak: 9.301444243932575517419536481611430644989013671875
          HolidayCap: 1.231513536777255612975068288506008684635162353515625
        - PassengerType: PassengerType
          Pass70PlusDayPerDay: 4.1456080298839363962315474054776132106781005859375
          Fare2HourOffPeak: 2.3021358869347654518833223846741020679473876953125
          FareDailyPeak: 7.061401241503109105224211816675961017608642578125
          WeekendCap: 7.3862819483858839220147274318151175975799560546875
          Fare2HourPeak: 5.63737665663332876420099637471139430999755859375
          Pass28To69DayPerDay: 2.027123023002321833274663731572218239307403564453125
          Pass7Days: 3.61607674925191080461672754609026014804840087890625
          FareDailyOffPeak: 9.301444243932575517419536481611430644989013671875
          HolidayCap: 1.231513536777255612975068288506008684635162353515625
        IsThisWeekendJourney: true
        ZoneInfo:
          UniqueZones:
          - 5
          - 5
          MinZone: 6
          MaxZone: 1
    V3.ZoneInfo:
      type: object
      properties:
        MinZone:
          type: integer
        MaxZone:
          type: integer
        UniqueZones:
          type: array
          items:
            type: integer
      example:
        UniqueZones:
        - 5
        - 5
        MinZone: 6
        MaxZone: 1
    V3.PassengerFare:
      type: object
      properties:
        PassengerType:
          type: string
        Fare2HourPeak:
          type: number
        Fare2HourOffPeak:
          type: number
        FareDailyPeak:
          type: number
        FareDailyOffPeak:
          type: number
        Pass7Days:
          type: number
        Pass28To69DayPerDay:
          type: number
        Pass70PlusDayPerDay:
          type: number
        WeekendCap:
          type: number
        HolidayCap:
          type: number
      example:
        PassengerType: PassengerType
        Pass70PlusDayPerDay: 4.1456080298839363962315474054776132106781005859375
        Fare2HourOffPeak: 2.3021358869347654518833223846741020679473876953125
        FareDailyPeak: 7.061401241503109105224211816675961017608642578125
        WeekendCap: 7.3862819483858839220147274318151175975799560546875
        Fare2HourPeak: 5.63737665663332876420099637471139430999755859375
        Pass28To69DayPerDay: 2.027123023002321833274663731572218239307403564453125
        Pass7Days: 3.61607674925191080461672754609026014804840087890625
        FareDailyOffPeak: 9.301444243932575517419536481611430644989013671875
        HolidayCap: 1.231513536777255612975068288506008684635162353515625
x-original-swagger-version: "2.0"
