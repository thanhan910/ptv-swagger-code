# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V3StopTicket(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ticket_type: str=None, zone: str=None, is_free_fare_zone: bool=None, ticket_machine: bool=None, ticket_checks: bool=None, vline_reservation: bool=None, ticket_zones: List[int]=None):  # noqa: E501
        """V3StopTicket - a model defined in Swagger

        :param ticket_type: The ticket_type of this V3StopTicket.  # noqa: E501
        :type ticket_type: str
        :param zone: The zone of this V3StopTicket.  # noqa: E501
        :type zone: str
        :param is_free_fare_zone: The is_free_fare_zone of this V3StopTicket.  # noqa: E501
        :type is_free_fare_zone: bool
        :param ticket_machine: The ticket_machine of this V3StopTicket.  # noqa: E501
        :type ticket_machine: bool
        :param ticket_checks: The ticket_checks of this V3StopTicket.  # noqa: E501
        :type ticket_checks: bool
        :param vline_reservation: The vline_reservation of this V3StopTicket.  # noqa: E501
        :type vline_reservation: bool
        :param ticket_zones: The ticket_zones of this V3StopTicket.  # noqa: E501
        :type ticket_zones: List[int]
        """
        self.swagger_types = {
            'ticket_type': str,
            'zone': str,
            'is_free_fare_zone': bool,
            'ticket_machine': bool,
            'ticket_checks': bool,
            'vline_reservation': bool,
            'ticket_zones': List[int]
        }

        self.attribute_map = {
            'ticket_type': 'ticket_type',
            'zone': 'zone',
            'is_free_fare_zone': 'is_free_fare_zone',
            'ticket_machine': 'ticket_machine',
            'ticket_checks': 'ticket_checks',
            'vline_reservation': 'vline_reservation',
            'ticket_zones': 'ticket_zones'
        }
        self._ticket_type = ticket_type
        self._zone = zone
        self._is_free_fare_zone = is_free_fare_zone
        self._ticket_machine = ticket_machine
        self._ticket_checks = ticket_checks
        self._vline_reservation = vline_reservation
        self._ticket_zones = ticket_zones

    @classmethod
    def from_dict(cls, dikt) -> 'V3StopTicket':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.StopTicket of this V3StopTicket.  # noqa: E501
        :rtype: V3StopTicket
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ticket_type(self) -> str:
        """Gets the ticket_type of this V3StopTicket.

        Indicates the ticket type for the stop (myki, paper or both)  # noqa: E501

        :return: The ticket_type of this V3StopTicket.
        :rtype: str
        """
        return self._ticket_type

    @ticket_type.setter
    def ticket_type(self, ticket_type: str):
        """Sets the ticket_type of this V3StopTicket.

        Indicates the ticket type for the stop (myki, paper or both)  # noqa: E501

        :param ticket_type: The ticket_type of this V3StopTicket.
        :type ticket_type: str
        """

        self._ticket_type = ticket_type

    @property
    def zone(self) -> str:
        """Gets the zone of this V3StopTicket.

        Description of the zone  # noqa: E501

        :return: The zone of this V3StopTicket.
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone: str):
        """Sets the zone of this V3StopTicket.

        Description of the zone  # noqa: E501

        :param zone: The zone of this V3StopTicket.
        :type zone: str
        """

        self._zone = zone

    @property
    def is_free_fare_zone(self) -> bool:
        """Gets the is_free_fare_zone of this V3StopTicket.

        Indicates whether the stop is inside the free fare zone  # noqa: E501

        :return: The is_free_fare_zone of this V3StopTicket.
        :rtype: bool
        """
        return self._is_free_fare_zone

    @is_free_fare_zone.setter
    def is_free_fare_zone(self, is_free_fare_zone: bool):
        """Sets the is_free_fare_zone of this V3StopTicket.

        Indicates whether the stop is inside the free fare zone  # noqa: E501

        :param is_free_fare_zone: The is_free_fare_zone of this V3StopTicket.
        :type is_free_fare_zone: bool
        """

        self._is_free_fare_zone = is_free_fare_zone

    @property
    def ticket_machine(self) -> bool:
        """Gets the ticket_machine of this V3StopTicket.


        :return: The ticket_machine of this V3StopTicket.
        :rtype: bool
        """
        return self._ticket_machine

    @ticket_machine.setter
    def ticket_machine(self, ticket_machine: bool):
        """Sets the ticket_machine of this V3StopTicket.


        :param ticket_machine: The ticket_machine of this V3StopTicket.
        :type ticket_machine: bool
        """

        self._ticket_machine = ticket_machine

    @property
    def ticket_checks(self) -> bool:
        """Gets the ticket_checks of this V3StopTicket.


        :return: The ticket_checks of this V3StopTicket.
        :rtype: bool
        """
        return self._ticket_checks

    @ticket_checks.setter
    def ticket_checks(self, ticket_checks: bool):
        """Sets the ticket_checks of this V3StopTicket.


        :param ticket_checks: The ticket_checks of this V3StopTicket.
        :type ticket_checks: bool
        """

        self._ticket_checks = ticket_checks

    @property
    def vline_reservation(self) -> bool:
        """Gets the vline_reservation of this V3StopTicket.


        :return: The vline_reservation of this V3StopTicket.
        :rtype: bool
        """
        return self._vline_reservation

    @vline_reservation.setter
    def vline_reservation(self, vline_reservation: bool):
        """Sets the vline_reservation of this V3StopTicket.


        :param vline_reservation: The vline_reservation of this V3StopTicket.
        :type vline_reservation: bool
        """

        self._vline_reservation = vline_reservation

    @property
    def ticket_zones(self) -> List[int]:
        """Gets the ticket_zones of this V3StopTicket.


        :return: The ticket_zones of this V3StopTicket.
        :rtype: List[int]
        """
        return self._ticket_zones

    @ticket_zones.setter
    def ticket_zones(self, ticket_zones: List[int]):
        """Sets the ticket_zones of this V3StopTicket.


        :param ticket_zones: The ticket_zones of this V3StopTicket.
        :type ticket_zones: List[int]
        """

        self._ticket_zones = ticket_zones
