# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.v3_disruption import V3Disruption  # noqa: F401,E501
from swagger_server import util


class V3Disruptions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, general: List[V3Disruption]=None, metro_train: List[V3Disruption]=None, metro_tram: List[V3Disruption]=None, metro_bus: List[V3Disruption]=None, regional_train: List[V3Disruption]=None, regional_coach: List[V3Disruption]=None, regional_bus: List[V3Disruption]=None, school_bus: List[V3Disruption]=None, telebus: List[V3Disruption]=None, night_bus: List[V3Disruption]=None, ferry: List[V3Disruption]=None, interstate_train: List[V3Disruption]=None, skybus: List[V3Disruption]=None, taxi: List[V3Disruption]=None):  # noqa: E501
        """V3Disruptions - a model defined in Swagger

        :param general: The general of this V3Disruptions.  # noqa: E501
        :type general: List[V3Disruption]
        :param metro_train: The metro_train of this V3Disruptions.  # noqa: E501
        :type metro_train: List[V3Disruption]
        :param metro_tram: The metro_tram of this V3Disruptions.  # noqa: E501
        :type metro_tram: List[V3Disruption]
        :param metro_bus: The metro_bus of this V3Disruptions.  # noqa: E501
        :type metro_bus: List[V3Disruption]
        :param regional_train: The regional_train of this V3Disruptions.  # noqa: E501
        :type regional_train: List[V3Disruption]
        :param regional_coach: The regional_coach of this V3Disruptions.  # noqa: E501
        :type regional_coach: List[V3Disruption]
        :param regional_bus: The regional_bus of this V3Disruptions.  # noqa: E501
        :type regional_bus: List[V3Disruption]
        :param school_bus: The school_bus of this V3Disruptions.  # noqa: E501
        :type school_bus: List[V3Disruption]
        :param telebus: The telebus of this V3Disruptions.  # noqa: E501
        :type telebus: List[V3Disruption]
        :param night_bus: The night_bus of this V3Disruptions.  # noqa: E501
        :type night_bus: List[V3Disruption]
        :param ferry: The ferry of this V3Disruptions.  # noqa: E501
        :type ferry: List[V3Disruption]
        :param interstate_train: The interstate_train of this V3Disruptions.  # noqa: E501
        :type interstate_train: List[V3Disruption]
        :param skybus: The skybus of this V3Disruptions.  # noqa: E501
        :type skybus: List[V3Disruption]
        :param taxi: The taxi of this V3Disruptions.  # noqa: E501
        :type taxi: List[V3Disruption]
        """
        self.swagger_types = {
            'general': List[V3Disruption],
            'metro_train': List[V3Disruption],
            'metro_tram': List[V3Disruption],
            'metro_bus': List[V3Disruption],
            'regional_train': List[V3Disruption],
            'regional_coach': List[V3Disruption],
            'regional_bus': List[V3Disruption],
            'school_bus': List[V3Disruption],
            'telebus': List[V3Disruption],
            'night_bus': List[V3Disruption],
            'ferry': List[V3Disruption],
            'interstate_train': List[V3Disruption],
            'skybus': List[V3Disruption],
            'taxi': List[V3Disruption]
        }

        self.attribute_map = {
            'general': 'general',
            'metro_train': 'metro_train',
            'metro_tram': 'metro_tram',
            'metro_bus': 'metro_bus',
            'regional_train': 'regional_train',
            'regional_coach': 'regional_coach',
            'regional_bus': 'regional_bus',
            'school_bus': 'school_bus',
            'telebus': 'telebus',
            'night_bus': 'night_bus',
            'ferry': 'ferry',
            'interstate_train': 'interstate_train',
            'skybus': 'skybus',
            'taxi': 'taxi'
        }
        self._general = general
        self._metro_train = metro_train
        self._metro_tram = metro_tram
        self._metro_bus = metro_bus
        self._regional_train = regional_train
        self._regional_coach = regional_coach
        self._regional_bus = regional_bus
        self._school_bus = school_bus
        self._telebus = telebus
        self._night_bus = night_bus
        self._ferry = ferry
        self._interstate_train = interstate_train
        self._skybus = skybus
        self._taxi = taxi

    @classmethod
    def from_dict(cls, dikt) -> 'V3Disruptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.Disruptions of this V3Disruptions.  # noqa: E501
        :rtype: V3Disruptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def general(self) -> List[V3Disruption]:
        """Gets the general of this V3Disruptions.

        Subset of disruption information applicable to multiple route_types  # noqa: E501

        :return: The general of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._general

    @general.setter
    def general(self, general: List[V3Disruption]):
        """Sets the general of this V3Disruptions.

        Subset of disruption information applicable to multiple route_types  # noqa: E501

        :param general: The general of this V3Disruptions.
        :type general: List[V3Disruption]
        """

        self._general = general

    @property
    def metro_train(self) -> List[V3Disruption]:
        """Gets the metro_train of this V3Disruptions.

        Subset of disruption information applicable to metropolitan train  # noqa: E501

        :return: The metro_train of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._metro_train

    @metro_train.setter
    def metro_train(self, metro_train: List[V3Disruption]):
        """Sets the metro_train of this V3Disruptions.

        Subset of disruption information applicable to metropolitan train  # noqa: E501

        :param metro_train: The metro_train of this V3Disruptions.
        :type metro_train: List[V3Disruption]
        """

        self._metro_train = metro_train

    @property
    def metro_tram(self) -> List[V3Disruption]:
        """Gets the metro_tram of this V3Disruptions.

        Subset of disruption information applicable to metropolitan tram  # noqa: E501

        :return: The metro_tram of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._metro_tram

    @metro_tram.setter
    def metro_tram(self, metro_tram: List[V3Disruption]):
        """Sets the metro_tram of this V3Disruptions.

        Subset of disruption information applicable to metropolitan tram  # noqa: E501

        :param metro_tram: The metro_tram of this V3Disruptions.
        :type metro_tram: List[V3Disruption]
        """

        self._metro_tram = metro_tram

    @property
    def metro_bus(self) -> List[V3Disruption]:
        """Gets the metro_bus of this V3Disruptions.

        Subset of disruption information applicable to metropolitan bus  # noqa: E501

        :return: The metro_bus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._metro_bus

    @metro_bus.setter
    def metro_bus(self, metro_bus: List[V3Disruption]):
        """Sets the metro_bus of this V3Disruptions.

        Subset of disruption information applicable to metropolitan bus  # noqa: E501

        :param metro_bus: The metro_bus of this V3Disruptions.
        :type metro_bus: List[V3Disruption]
        """

        self._metro_bus = metro_bus

    @property
    def regional_train(self) -> List[V3Disruption]:
        """Gets the regional_train of this V3Disruptions.

        Subset of disruption information applicable to V/Line train  # noqa: E501

        :return: The regional_train of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._regional_train

    @regional_train.setter
    def regional_train(self, regional_train: List[V3Disruption]):
        """Sets the regional_train of this V3Disruptions.

        Subset of disruption information applicable to V/Line train  # noqa: E501

        :param regional_train: The regional_train of this V3Disruptions.
        :type regional_train: List[V3Disruption]
        """

        self._regional_train = regional_train

    @property
    def regional_coach(self) -> List[V3Disruption]:
        """Gets the regional_coach of this V3Disruptions.

        Subset of disruption information applicable to V/Line coach  # noqa: E501

        :return: The regional_coach of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._regional_coach

    @regional_coach.setter
    def regional_coach(self, regional_coach: List[V3Disruption]):
        """Sets the regional_coach of this V3Disruptions.

        Subset of disruption information applicable to V/Line coach  # noqa: E501

        :param regional_coach: The regional_coach of this V3Disruptions.
        :type regional_coach: List[V3Disruption]
        """

        self._regional_coach = regional_coach

    @property
    def regional_bus(self) -> List[V3Disruption]:
        """Gets the regional_bus of this V3Disruptions.

        Subset of disruption information applicable to regional bus  # noqa: E501

        :return: The regional_bus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._regional_bus

    @regional_bus.setter
    def regional_bus(self, regional_bus: List[V3Disruption]):
        """Sets the regional_bus of this V3Disruptions.

        Subset of disruption information applicable to regional bus  # noqa: E501

        :param regional_bus: The regional_bus of this V3Disruptions.
        :type regional_bus: List[V3Disruption]
        """

        self._regional_bus = regional_bus

    @property
    def school_bus(self) -> List[V3Disruption]:
        """Gets the school_bus of this V3Disruptions.

        Subset of disruption information applicable to school bus  # noqa: E501

        :return: The school_bus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._school_bus

    @school_bus.setter
    def school_bus(self, school_bus: List[V3Disruption]):
        """Sets the school_bus of this V3Disruptions.

        Subset of disruption information applicable to school bus  # noqa: E501

        :param school_bus: The school_bus of this V3Disruptions.
        :type school_bus: List[V3Disruption]
        """

        self._school_bus = school_bus

    @property
    def telebus(self) -> List[V3Disruption]:
        """Gets the telebus of this V3Disruptions.

        Subset of disruption information applicable to telebus services  # noqa: E501

        :return: The telebus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._telebus

    @telebus.setter
    def telebus(self, telebus: List[V3Disruption]):
        """Sets the telebus of this V3Disruptions.

        Subset of disruption information applicable to telebus services  # noqa: E501

        :param telebus: The telebus of this V3Disruptions.
        :type telebus: List[V3Disruption]
        """

        self._telebus = telebus

    @property
    def night_bus(self) -> List[V3Disruption]:
        """Gets the night_bus of this V3Disruptions.

        Subset of disruption information applicable to night bus  # noqa: E501

        :return: The night_bus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._night_bus

    @night_bus.setter
    def night_bus(self, night_bus: List[V3Disruption]):
        """Sets the night_bus of this V3Disruptions.

        Subset of disruption information applicable to night bus  # noqa: E501

        :param night_bus: The night_bus of this V3Disruptions.
        :type night_bus: List[V3Disruption]
        """

        self._night_bus = night_bus

    @property
    def ferry(self) -> List[V3Disruption]:
        """Gets the ferry of this V3Disruptions.

        Subset of disruption information applicable to ferry  # noqa: E501

        :return: The ferry of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._ferry

    @ferry.setter
    def ferry(self, ferry: List[V3Disruption]):
        """Sets the ferry of this V3Disruptions.

        Subset of disruption information applicable to ferry  # noqa: E501

        :param ferry: The ferry of this V3Disruptions.
        :type ferry: List[V3Disruption]
        """

        self._ferry = ferry

    @property
    def interstate_train(self) -> List[V3Disruption]:
        """Gets the interstate_train of this V3Disruptions.

        Subset of disruption information applicable to interstate train  # noqa: E501

        :return: The interstate_train of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._interstate_train

    @interstate_train.setter
    def interstate_train(self, interstate_train: List[V3Disruption]):
        """Sets the interstate_train of this V3Disruptions.

        Subset of disruption information applicable to interstate train  # noqa: E501

        :param interstate_train: The interstate_train of this V3Disruptions.
        :type interstate_train: List[V3Disruption]
        """

        self._interstate_train = interstate_train

    @property
    def skybus(self) -> List[V3Disruption]:
        """Gets the skybus of this V3Disruptions.

        Subset of disruption information applicable to skybus  # noqa: E501

        :return: The skybus of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._skybus

    @skybus.setter
    def skybus(self, skybus: List[V3Disruption]):
        """Sets the skybus of this V3Disruptions.

        Subset of disruption information applicable to skybus  # noqa: E501

        :param skybus: The skybus of this V3Disruptions.
        :type skybus: List[V3Disruption]
        """

        self._skybus = skybus

    @property
    def taxi(self) -> List[V3Disruption]:
        """Gets the taxi of this V3Disruptions.

        Subset of disruption information applicable to taxi  # noqa: E501

        :return: The taxi of this V3Disruptions.
        :rtype: List[V3Disruption]
        """
        return self._taxi

    @taxi.setter
    def taxi(self, taxi: List[V3Disruption]):
        """Sets the taxi of this V3Disruptions.

        Subset of disruption information applicable to taxi  # noqa: E501

        :param taxi: The taxi of this V3Disruptions.
        :type taxi: List[V3Disruption]
        """

        self._taxi = taxi
