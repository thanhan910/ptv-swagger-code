# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.v3_result_outlet import V3ResultOutlet  # noqa: F401,E501
from swagger_server.models.v3_result_route import V3ResultRoute  # noqa: F401,E501
from swagger_server.models.v3_result_stop import V3ResultStop  # noqa: F401,E501
from swagger_server.models.v3_status import V3Status  # noqa: F401,E501
from swagger_server import util


class V3SearchResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, stops: List[V3ResultStop]=None, routes: List[V3ResultRoute]=None, outlets: List[V3ResultOutlet]=None, status: V3Status=None):  # noqa: E501
        """V3SearchResult - a model defined in Swagger

        :param stops: The stops of this V3SearchResult.  # noqa: E501
        :type stops: List[V3ResultStop]
        :param routes: The routes of this V3SearchResult.  # noqa: E501
        :type routes: List[V3ResultRoute]
        :param outlets: The outlets of this V3SearchResult.  # noqa: E501
        :type outlets: List[V3ResultOutlet]
        :param status: The status of this V3SearchResult.  # noqa: E501
        :type status: V3Status
        """
        self.swagger_types = {
            'stops': List[V3ResultStop],
            'routes': List[V3ResultRoute],
            'outlets': List[V3ResultOutlet],
            'status': V3Status
        }

        self.attribute_map = {
            'stops': 'stops',
            'routes': 'routes',
            'outlets': 'outlets',
            'status': 'status'
        }
        self._stops = stops
        self._routes = routes
        self._outlets = outlets
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'V3SearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.SearchResult of this V3SearchResult.  # noqa: E501
        :rtype: V3SearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stops(self) -> List[V3ResultStop]:
        """Gets the stops of this V3SearchResult.

        Train stations, tram stops, bus stops, regional coach stops or Night Bus stops  # noqa: E501

        :return: The stops of this V3SearchResult.
        :rtype: List[V3ResultStop]
        """
        return self._stops

    @stops.setter
    def stops(self, stops: List[V3ResultStop]):
        """Sets the stops of this V3SearchResult.

        Train stations, tram stops, bus stops, regional coach stops or Night Bus stops  # noqa: E501

        :param stops: The stops of this V3SearchResult.
        :type stops: List[V3ResultStop]
        """

        self._stops = stops

    @property
    def routes(self) -> List[V3ResultRoute]:
        """Gets the routes of this V3SearchResult.

        Train lines, tram routes, bus routes, regional coach routes, Night Bus routes  # noqa: E501

        :return: The routes of this V3SearchResult.
        :rtype: List[V3ResultRoute]
        """
        return self._routes

    @routes.setter
    def routes(self, routes: List[V3ResultRoute]):
        """Sets the routes of this V3SearchResult.

        Train lines, tram routes, bus routes, regional coach routes, Night Bus routes  # noqa: E501

        :param routes: The routes of this V3SearchResult.
        :type routes: List[V3ResultRoute]
        """

        self._routes = routes

    @property
    def outlets(self) -> List[V3ResultOutlet]:
        """Gets the outlets of this V3SearchResult.

        myki ticket outlets  # noqa: E501

        :return: The outlets of this V3SearchResult.
        :rtype: List[V3ResultOutlet]
        """
        return self._outlets

    @outlets.setter
    def outlets(self, outlets: List[V3ResultOutlet]):
        """Sets the outlets of this V3SearchResult.

        myki ticket outlets  # noqa: E501

        :param outlets: The outlets of this V3SearchResult.
        :type outlets: List[V3ResultOutlet]
        """

        self._outlets = outlets

    @property
    def status(self) -> V3Status:
        """Gets the status of this V3SearchResult.


        :return: The status of this V3SearchResult.
        :rtype: V3Status
        """
        return self._status

    @status.setter
    def status(self, status: V3Status):
        """Sets the status of this V3SearchResult.


        :param status: The status of this V3SearchResult.
        :type status: V3Status
        """

        self._status = status
