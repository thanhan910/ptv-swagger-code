# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V3Status(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, version: str=None, health: int=None):  # noqa: E501
        """V3Status - a model defined in Swagger

        :param version: The version of this V3Status.  # noqa: E501
        :type version: str
        :param health: The health of this V3Status.  # noqa: E501
        :type health: int
        """
        self.swagger_types = {
            'version': str,
            'health': int
        }

        self.attribute_map = {
            'version': 'version',
            'health': 'health'
        }
        self._version = version
        self._health = health

    @classmethod
    def from_dict(cls, dikt) -> 'V3Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.Status of this V3Status.  # noqa: E501
        :rtype: V3Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self) -> str:
        """Gets the version of this V3Status.

        API Version number  # noqa: E501

        :return: The version of this V3Status.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this V3Status.

        API Version number  # noqa: E501

        :param version: The version of this V3Status.
        :type version: str
        """

        self._version = version

    @property
    def health(self) -> int:
        """Gets the health of this V3Status.

        API system health status (0=offline, 1=online)  # noqa: E501

        :return: The health of this V3Status.
        :rtype: int
        """
        return self._health

    @health.setter
    def health(self, health: int):
        """Sets the health of this V3Status.

        API system health status (0=offline, 1=online)  # noqa: E501

        :param health: The health of this V3Status.
        :type health: int
        """
        allowed_values = ["0", "1"]  # noqa: E501
        if health not in allowed_values:
            raise ValueError(
                "Invalid value for `health` ({0}), must be one of {1}"
                .format(health, allowed_values)
            )

        self._health = health
