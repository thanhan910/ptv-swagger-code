# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.v3_siri_line_ref_direction_refs_dictionary import V3SiriLineRefDirectionRefsDictionary  # noqa: F401,E501
from swagger_server.models.v3_status import V3Status  # noqa: F401,E501
from swagger_server import util


class V3SiriLineRefMappingsResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mapping_version: str=None, line_refs: Dict[str, V3SiriLineRefDirectionRefsDictionary]=None, status: V3Status=None):  # noqa: E501
        """V3SiriLineRefMappingsResponse - a model defined in Swagger

        :param mapping_version: The mapping_version of this V3SiriLineRefMappingsResponse.  # noqa: E501
        :type mapping_version: str
        :param line_refs: The line_refs of this V3SiriLineRefMappingsResponse.  # noqa: E501
        :type line_refs: Dict[str, V3SiriLineRefDirectionRefsDictionary]
        :param status: The status of this V3SiriLineRefMappingsResponse.  # noqa: E501
        :type status: V3Status
        """
        self.swagger_types = {
            'mapping_version': str,
            'line_refs': Dict[str, V3SiriLineRefDirectionRefsDictionary],
            'status': V3Status
        }

        self.attribute_map = {
            'mapping_version': 'mapping_version',
            'line_refs': 'line_refs',
            'status': 'status'
        }
        self._mapping_version = mapping_version
        self._line_refs = line_refs
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'V3SiriLineRefMappingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.SiriLineRefMappingsResponse of this V3SiriLineRefMappingsResponse.  # noqa: E501
        :rtype: V3SiriLineRefMappingsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mapping_version(self) -> str:
        """Gets the mapping_version of this V3SiriLineRefMappingsResponse.


        :return: The mapping_version of this V3SiriLineRefMappingsResponse.
        :rtype: str
        """
        return self._mapping_version

    @mapping_version.setter
    def mapping_version(self, mapping_version: str):
        """Sets the mapping_version of this V3SiriLineRefMappingsResponse.


        :param mapping_version: The mapping_version of this V3SiriLineRefMappingsResponse.
        :type mapping_version: str
        """

        self._mapping_version = mapping_version

    @property
    def line_refs(self) -> Dict[str, V3SiriLineRefDirectionRefsDictionary]:
        """Gets the line_refs of this V3SiriLineRefMappingsResponse.


        :return: The line_refs of this V3SiriLineRefMappingsResponse.
        :rtype: Dict[str, V3SiriLineRefDirectionRefsDictionary]
        """
        return self._line_refs

    @line_refs.setter
    def line_refs(self, line_refs: Dict[str, V3SiriLineRefDirectionRefsDictionary]):
        """Sets the line_refs of this V3SiriLineRefMappingsResponse.


        :param line_refs: The line_refs of this V3SiriLineRefMappingsResponse.
        :type line_refs: Dict[str, V3SiriLineRefDirectionRefsDictionary]
        """

        self._line_refs = line_refs

    @property
    def status(self) -> V3Status:
        """Gets the status of this V3SiriLineRefMappingsResponse.


        :return: The status of this V3SiriLineRefMappingsResponse.
        :rtype: V3Status
        """
        return self._status

    @status.setter
    def status(self, status: V3Status):
        """Sets the status of this V3SiriLineRefMappingsResponse.


        :param status: The status of this V3SiriLineRefMappingsResponse.
        :type status: V3Status
        """

        self._status = status
