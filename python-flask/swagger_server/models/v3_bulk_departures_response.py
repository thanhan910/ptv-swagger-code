# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.v3_bulk_departures_stop_response import V3BulkDeparturesStopResponse  # noqa: F401,E501
from swagger_server.models.v3_bulk_departures_update_response import V3BulkDeparturesUpdateResponse  # noqa: F401,E501
from swagger_server.models.v3_direction import V3Direction  # noqa: F401,E501
from swagger_server.models.v3_disruption import V3Disruption  # noqa: F401,E501
from swagger_server.models.v3_run import V3Run  # noqa: F401,E501
from swagger_server.models.v3_status import V3Status  # noqa: F401,E501
from swagger_server import util


class V3BulkDeparturesResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, responses: List[V3BulkDeparturesUpdateResponse]=None, stops: Dict[str, V3BulkDeparturesStopResponse]=None, routes: List[object]=None, runs: List[V3Run]=None, directions: List[V3Direction]=None, disruptions: Dict[str, V3Disruption]=None, status: V3Status=None):  # noqa: E501
        """V3BulkDeparturesResponse - a model defined in Swagger

        :param responses: The responses of this V3BulkDeparturesResponse.  # noqa: E501
        :type responses: List[V3BulkDeparturesUpdateResponse]
        :param stops: The stops of this V3BulkDeparturesResponse.  # noqa: E501
        :type stops: Dict[str, V3BulkDeparturesStopResponse]
        :param routes: The routes of this V3BulkDeparturesResponse.  # noqa: E501
        :type routes: List[object]
        :param runs: The runs of this V3BulkDeparturesResponse.  # noqa: E501
        :type runs: List[V3Run]
        :param directions: The directions of this V3BulkDeparturesResponse.  # noqa: E501
        :type directions: List[V3Direction]
        :param disruptions: The disruptions of this V3BulkDeparturesResponse.  # noqa: E501
        :type disruptions: Dict[str, V3Disruption]
        :param status: The status of this V3BulkDeparturesResponse.  # noqa: E501
        :type status: V3Status
        """
        self.swagger_types = {
            'responses': List[V3BulkDeparturesUpdateResponse],
            'stops': Dict[str, V3BulkDeparturesStopResponse],
            'routes': List[object],
            'runs': List[V3Run],
            'directions': List[V3Direction],
            'disruptions': Dict[str, V3Disruption],
            'status': V3Status
        }

        self.attribute_map = {
            'responses': 'responses',
            'stops': 'stops',
            'routes': 'routes',
            'runs': 'runs',
            'directions': 'directions',
            'disruptions': 'disruptions',
            'status': 'status'
        }
        self._responses = responses
        self._stops = stops
        self._routes = routes
        self._runs = runs
        self._directions = directions
        self._disruptions = disruptions
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'V3BulkDeparturesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.BulkDeparturesResponse of this V3BulkDeparturesResponse.  # noqa: E501
        :rtype: V3BulkDeparturesResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def responses(self) -> List[V3BulkDeparturesUpdateResponse]:
        """Gets the responses of this V3BulkDeparturesResponse.

        Contains departures for the requested stop and route(s). It includes details as to the route_direction and whether it is still valid.  # noqa: E501

        :return: The responses of this V3BulkDeparturesResponse.
        :rtype: List[V3BulkDeparturesUpdateResponse]
        """
        return self._responses

    @responses.setter
    def responses(self, responses: List[V3BulkDeparturesUpdateResponse]):
        """Sets the responses of this V3BulkDeparturesResponse.

        Contains departures for the requested stop and route(s). It includes details as to the route_direction and whether it is still valid.  # noqa: E501

        :param responses: The responses of this V3BulkDeparturesResponse.
        :type responses: List[V3BulkDeparturesUpdateResponse]
        """

        self._responses = responses

    @property
    def stops(self) -> Dict[str, V3BulkDeparturesStopResponse]:
        """Gets the stops of this V3BulkDeparturesResponse.

        A train station, tram stop, bus stop, regional coach stop or Night Bus stop  # noqa: E501

        :return: The stops of this V3BulkDeparturesResponse.
        :rtype: Dict[str, V3BulkDeparturesStopResponse]
        """
        return self._stops

    @stops.setter
    def stops(self, stops: Dict[str, V3BulkDeparturesStopResponse]):
        """Sets the stops of this V3BulkDeparturesResponse.

        A train station, tram stop, bus stop, regional coach stop or Night Bus stop  # noqa: E501

        :param stops: The stops of this V3BulkDeparturesResponse.
        :type stops: Dict[str, V3BulkDeparturesStopResponse]
        """

        self._stops = stops

    @property
    def routes(self) -> List[object]:
        """Gets the routes of this V3BulkDeparturesResponse.

        Train lines, tram routes, bus routes, regional coach routes, Night Bus routes  # noqa: E501

        :return: The routes of this V3BulkDeparturesResponse.
        :rtype: List[object]
        """
        return self._routes

    @routes.setter
    def routes(self, routes: List[object]):
        """Sets the routes of this V3BulkDeparturesResponse.

        Train lines, tram routes, bus routes, regional coach routes, Night Bus routes  # noqa: E501

        :param routes: The routes of this V3BulkDeparturesResponse.
        :type routes: List[object]
        """

        self._routes = routes

    @property
    def runs(self) -> List[V3Run]:
        """Gets the runs of this V3BulkDeparturesResponse.

        Individual trips/services of a route  # noqa: E501

        :return: The runs of this V3BulkDeparturesResponse.
        :rtype: List[V3Run]
        """
        return self._runs

    @runs.setter
    def runs(self, runs: List[V3Run]):
        """Sets the runs of this V3BulkDeparturesResponse.

        Individual trips/services of a route  # noqa: E501

        :param runs: The runs of this V3BulkDeparturesResponse.
        :type runs: List[V3Run]
        """

        self._runs = runs

    @property
    def directions(self) -> List[V3Direction]:
        """Gets the directions of this V3BulkDeparturesResponse.

        Directions of travel of route  # noqa: E501

        :return: The directions of this V3BulkDeparturesResponse.
        :rtype: List[V3Direction]
        """
        return self._directions

    @directions.setter
    def directions(self, directions: List[V3Direction]):
        """Sets the directions of this V3BulkDeparturesResponse.

        Directions of travel of route  # noqa: E501

        :param directions: The directions of this V3BulkDeparturesResponse.
        :type directions: List[V3Direction]
        """

        self._directions = directions

    @property
    def disruptions(self) -> Dict[str, V3Disruption]:
        """Gets the disruptions of this V3BulkDeparturesResponse.

        Disruption information applicable to relevant routes or stops  # noqa: E501

        :return: The disruptions of this V3BulkDeparturesResponse.
        :rtype: Dict[str, V3Disruption]
        """
        return self._disruptions

    @disruptions.setter
    def disruptions(self, disruptions: Dict[str, V3Disruption]):
        """Sets the disruptions of this V3BulkDeparturesResponse.

        Disruption information applicable to relevant routes or stops  # noqa: E501

        :param disruptions: The disruptions of this V3BulkDeparturesResponse.
        :type disruptions: Dict[str, V3Disruption]
        """

        self._disruptions = disruptions

    @property
    def status(self) -> V3Status:
        """Gets the status of this V3BulkDeparturesResponse.


        :return: The status of this V3BulkDeparturesResponse.
        :rtype: V3Status
        """
        return self._status

    @status.setter
    def status(self, status: V3Status):
        """Sets the status of this V3BulkDeparturesResponse.


        :param status: The status of this V3BulkDeparturesResponse.
        :type status: V3Status
        """

        self._status = status
