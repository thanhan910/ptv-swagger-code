# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class V3OutletGeolocationParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, max_distance: float=None, max_results: int=None):  # noqa: E501
        """V3OutletGeolocationParameters - a model defined in Swagger

        :param max_distance: The max_distance of this V3OutletGeolocationParameters.  # noqa: E501
        :type max_distance: float
        :param max_results: The max_results of this V3OutletGeolocationParameters.  # noqa: E501
        :type max_results: int
        """
        self.swagger_types = {
            'max_distance': float,
            'max_results': int
        }

        self.attribute_map = {
            'max_distance': 'max_distance',
            'max_results': 'max_results'
        }
        self._max_distance = max_distance
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt) -> 'V3OutletGeolocationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The V3.OutletGeolocationParameters of this V3OutletGeolocationParameters.  # noqa: E501
        :rtype: V3OutletGeolocationParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_distance(self) -> float:
        """Gets the max_distance of this V3OutletGeolocationParameters.

        Filter by maximum distance (in metres) from location specified via latitude and longitude parameters (default = 300)  # noqa: E501

        :return: The max_distance of this V3OutletGeolocationParameters.
        :rtype: float
        """
        return self._max_distance

    @max_distance.setter
    def max_distance(self, max_distance: float):
        """Sets the max_distance of this V3OutletGeolocationParameters.

        Filter by maximum distance (in metres) from location specified via latitude and longitude parameters (default = 300)  # noqa: E501

        :param max_distance: The max_distance of this V3OutletGeolocationParameters.
        :type max_distance: float
        """

        self._max_distance = max_distance

    @property
    def max_results(self) -> int:
        """Gets the max_results of this V3OutletGeolocationParameters.

        Maximum number of results returned (default = 30)  # noqa: E501

        :return: The max_results of this V3OutletGeolocationParameters.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results: int):
        """Sets the max_results of this V3OutletGeolocationParameters.

        Maximum number of results returned (default = 30)  # noqa: E501

        :param max_results: The max_results of this V3OutletGeolocationParameters.
        :type max_results: int
        """

        self._max_results = max_results
