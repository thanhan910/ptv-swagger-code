=begin
#PTV Timetable API - Version 3

#The PTV Timetable API provides direct access to Public Transport Victoria's public transport timetable data.    The API returns scheduled timetable, route and stop data for all metropolitan and regional train, tram and bus services in Victoria, including Night Network(Night Train and Night Tram data are included in metropolitan train and tram services data, respectively, whereas Night Bus is a separate route type).    The API also returns real-time data for metropolitan train, tram and bus services (where this data is made available to PTV), as well as disruption information, stop facility information, and access to myki ticket outlet data.    This Swagger is for Version 3 of the PTV Timetable API. By using this documentation you agree to comply with the licence and terms of service.    Train timetable data is updated daily, while the remaining data is updated weekly, taking into account any planned timetable changes (for example, due to holidays or planned disruptions). The PTV timetable API is the same API used by PTV for its apps. To access the most up to date data PTV has (including real-time data) you must use the API dynamically.    You can access the PTV Timetable API through a HTTP or HTTPS interface, as follows:        base URL / version number / API name / query string  The base URL is either:    *  http://timetableapi.ptv.vic.gov.au  or    *  https://timetableapi.ptv.vic.gov.au    The Swagger JSON file is available at http://timetableapi.ptv.vic.gov.au/swagger/docs/v3    Frequently asked questions are available on the PTV website at http://ptv.vic.gov.au/apifaq    Links to the following information are also provided on the PTV website at http://ptv.vic.gov.au/ptv-timetable-api/  * How to register for an API key and calculate a signature  * PTV Timetable API V2 to V3 Migration Guide  * PTV Timetable API Data Quality Statement    All information about how to use the API is in this documentation. PTV cannot provide technical support for the API.  

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.52
=end

module SwaggerClient
  class PatternsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # View the stopping pattern for a specific trip/service run
    # @param run_ref The run_ref is the identifier of a run as returned by the departures/* and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead.
    # @param route_type Number identifying transport mode; values returned via RouteTypes API
    # @param expand List of objects to be returned in full (i.e. expanded) - options include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition, VehicleDescriptor and None. Default is Disruption. Run must be expanded to receive VehiclePosition and VehicleDescriptor information.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :stop_id Filter by stop_id; values returned by Stops API
    # @option opts [DateTime] :date_utc Filter by the date and time of the request (ISO 8601 UTC format)
    # @option opts [BOOLEAN] :include_skipped_stops Include any skipped stops in a stopping pattern. Defaults to false.
    # @option opts [BOOLEAN] :include_geopath Indicates if geopath data will be returned (default &#x3D; false)
    # @option opts [String] :token Please ignore
    # @option opts [String] :devid Your developer id
    # @option opts [String] :signature Authentication signature for request
    # @return [V3StoppingPattern]
    def patterns_get_pattern_by_run(run_ref, route_type, expand, opts = {})
      data, _status_code, _headers = patterns_get_pattern_by_run_with_http_info(run_ref, route_type, expand, opts)
      data
    end

    # View the stopping pattern for a specific trip/service run
    # @param run_ref The run_ref is the identifier of a run as returned by the departures/* and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead.
    # @param route_type Number identifying transport mode; values returned via RouteTypes API
    # @param expand List of objects to be returned in full (i.e. expanded) - options include: All, Stop, Route, Run, Direction, Disruption, VehiclePosition, VehicleDescriptor and None. Default is Disruption. Run must be expanded to receive VehiclePosition and VehicleDescriptor information.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :stop_id Filter by stop_id; values returned by Stops API
    # @option opts [DateTime] :date_utc Filter by the date and time of the request (ISO 8601 UTC format)
    # @option opts [BOOLEAN] :include_skipped_stops Include any skipped stops in a stopping pattern. Defaults to false.
    # @option opts [BOOLEAN] :include_geopath Indicates if geopath data will be returned (default &#x3D; false)
    # @option opts [String] :token Please ignore
    # @option opts [String] :devid Your developer id
    # @option opts [String] :signature Authentication signature for request
    # @return [Array<(V3StoppingPattern, Integer, Hash)>] V3StoppingPattern data, response status code and response headers
    def patterns_get_pattern_by_run_with_http_info(run_ref, route_type, expand, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PatternsApi.patterns_get_pattern_by_run ...'
      end
      # verify the required parameter 'run_ref' is set
      if @api_client.config.client_side_validation && run_ref.nil?
        fail ArgumentError, "Missing the required parameter 'run_ref' when calling PatternsApi.patterns_get_pattern_by_run"
      end
      # verify the required parameter 'route_type' is set
      if @api_client.config.client_side_validation && route_type.nil?
        fail ArgumentError, "Missing the required parameter 'route_type' when calling PatternsApi.patterns_get_pattern_by_run"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['0', '1', '2', '3', '4'].include?(route_type)
        fail ArgumentError, "invalid value for 'route_type', must be one of 0, 1, 2, 3, 4"
      end
      # verify the required parameter 'expand' is set
      if @api_client.config.client_side_validation && expand.nil?
        fail ArgumentError, "Missing the required parameter 'expand' when calling PatternsApi.patterns_get_pattern_by_run"
      end
      # resource path
      local_var_path = '/v3/pattern/run/{run_ref}/route_type/{route_type}'.sub('{' + 'run_ref' + '}', run_ref.to_s).sub('{' + 'route_type' + '}', route_type.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'expand'] = @api_client.build_collection_param(expand, :multi)
      query_params[:'stop_id'] = opts[:'stop_id'] if !opts[:'stop_id'].nil?
      query_params[:'date_utc'] = opts[:'date_utc'] if !opts[:'date_utc'].nil?
      query_params[:'include_skipped_stops'] = opts[:'include_skipped_stops'] if !opts[:'include_skipped_stops'].nil?
      query_params[:'include_geopath'] = opts[:'include_geopath'] if !opts[:'include_geopath'].nil?
      query_params[:'token'] = opts[:'token'] if !opts[:'token'].nil?
      query_params[:'devid'] = opts[:'devid'] if !opts[:'devid'].nil?
      query_params[:'signature'] = opts[:'signature'] if !opts[:'signature'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'V3StoppingPattern' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PatternsApi#patterns_get_pattern_by_run\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
